&ANALYZE-SUSPEND _VERSION-NUMBER AB_v9r12 GUI ADM2
&ANALYZE-RESUME
/* Connected Databases 
          ptdb1            PROGRESS
*/
&Scoped-define WINDOW-NAME CURRENT-WINDOW

/* Temp-Table and Buffer definitions                                    */
DEFINE TEMP-TABLE RowObject
       {"fa/sdoloc.i"}.


&ANALYZE-SUSPEND _UIB-CODE-BLOCK _CUSTOM _DEFINITIONS vTableWin 
/*------------------------------------------------------------------------
  File:                 fa\vLoc.w
  Copyright:            (c)2016 Foresight Software LLC - All rights reserved
  Version:              10.7000 - 06/01/2016 - tyndmar
  Description:          SmartViewer generated by dSmartObjectCreator.w 
                        
  Input Parameters:     <none>
  Output Parameters:    <none>
------------------------------------------------------------------------*/
/*   This .w file was created with the Foresight SmartObjectCreator.    */
/*----------------------------------------------------------------------*/

/* Create an unnamed pool to store all the widgets created 
     by this procedure. This is a good default which assures
     that this procedure's triggers and internal procedures 
     will execute in this procedure's storage, and that proper
     cleanup will occur on deletion of the procedure. */

CREATE WIDGET-POOL.

/* ***************************  Definitions  ************************** */

/* Parameters Definitions ---                                           */

/* Local Variable Definitions ---                                       */
&SCOPED-DEF FRAME-NAME F-Main
&SCOPED-DEF cControl fa
&SCOPED-DEF cFileName location
&SCOPED-DEF cKeyField location
&SCOPED-DEF cKeyList location

{fa/facommon.i}
{pt/setinit use-file 'location'}

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME


&ANALYZE-SUSPEND _UIB-PREPROCESSOR-BLOCK 

/* ********************  Preprocessor Definitions  ******************** */

&Scoped-define PROCEDURE-TYPE SmartDataViewer
&Scoped-define DB-AWARE no

&Scoped-define ADM-CONTAINER FRAME

&Scoped-define ADM-SUPPORTED-LINKS Data-Target,Update-Source,TableIO-Target,GroupAssign-Source,GroupAssign-Target

/* Include file with RowObject temp-table definition */
&Scoped-define DATA-FIELD-DEFS "fa/sdoloc.i"

/* Name of first Frame and/or Browse and/or first Query                 */
&Scoped-define FRAME-NAME F-Main

/* Standard List Definitions                                            */
&Scoped-Define ENABLED-FIELDS RowObject.location RowObject.description ~
RowObject.work-center RowObject.room RowObject.building RowObject.city ~
RowObject.county RowObject.state RowObject.Country-code 
&Scoped-define ENABLED-TABLES RowObject
&Scoped-define FIRST-ENABLED-TABLE RowObject
&Scoped-Define ENABLED-OBJECTS btnfind btnMemo btnLink 
&Scoped-Define DISPLAYED-FIELDS RowObject.location RowObject.description ~
RowObject.entity RowObject.work-center RowObject.room RowObject.building ~
RowObject.city RowObject.county RowObject.state RowObject.Country-code 
&Scoped-define DISPLAYED-TABLES RowObject
&Scoped-define FIRST-DISPLAYED-TABLE RowObject
&Scoped-Define DISPLAYED-OBJECTS faEntDesc wkCtrDesc stateDesc countryDesc 

/* Custom List Definitions                                              */
/* ADM-ASSIGN-FIELDS,List-2,List-3,List-4,List-5,List-6                 */

/* _UIB-PREPROCESSOR-BLOCK-END */
&ANALYZE-RESUME



/* ***********************  Control Definitions  ********************** */


/* Definitions of the field level widgets                               */
DEFINE BUTTON btnfind 
     IMAGE-UP FILE "img/lookupu.bmp"
     LABEL "Find" 
     SIZE 4 BY 1.

DEFINE BUTTON btnLink 
     LABEL "L" 
     SIZE 4 BY 1.13 TOOLTIP "Link Documents".

DEFINE BUTTON btnMemo 
     LABEL "Create Memo" 
     SIZE 22 BY 1.13.

DEFINE VARIABLE countryDesc AS CHARACTER FORMAT "X(256)" 
     VIEW-AS FILL-IN 
     SIZE 37 BY 1 NO-UNDO.

DEFINE VARIABLE faEntDesc AS CHARACTER FORMAT "X(256)" 
     VIEW-AS FILL-IN 
     SIZE 37 BY 1 NO-UNDO.

DEFINE VARIABLE stateDesc AS CHARACTER FORMAT "X(256)" 
     VIEW-AS FILL-IN 
     SIZE 37 BY 1 NO-UNDO.

DEFINE VARIABLE wkCtrDesc AS CHARACTER FORMAT "X(256)" 
     VIEW-AS FILL-IN 
     SIZE 37 BY 1 NO-UNDO.


/* ************************  Frame Definitions  *********************** */

DEFINE FRAME F-Main
     RowObject.location AT ROW 1.25 COL 15 COLON-ALIGNED
          LABEL "Location"
          VIEW-AS FILL-IN 
          SIZE 9.14 BY 1
          FONT 9
     btnfind AT ROW 1.25 COL 28
     RowObject.description AT ROW 1.25 COL 46 COLON-ALIGNED
          VIEW-AS FILL-IN 
          SIZE 37 BY 1
     btnMemo AT ROW 1.25 COL 128
     btnLink AT ROW 1.29 COL 2
     RowObject.entity AT ROW 2.75 COL 15 COLON-ALIGNED
          LABEL "FA Entity"
          VIEW-AS FILL-IN 
          SIZE 13.14 BY 1 NO-TAB-STOP 
     faEntDesc AT ROW 2.75 COL 29 COLON-ALIGNED NO-LABEL NO-TAB-STOP 
     RowObject.work-center AT ROW 4 COL 15 COLON-ALIGNED
          LABEL "Work Center"
          VIEW-AS FILL-IN 
          SIZE 13 BY 1
     wkCtrDesc AT ROW 4 COL 29 COLON-ALIGNED NO-LABEL NO-TAB-STOP 
     RowObject.room AT ROW 5.25 COL 15 COLON-ALIGNED
          VIEW-AS FILL-IN 
          SIZE 9.14 BY 1
     RowObject.building AT ROW 6.5 COL 15 COLON-ALIGNED
          VIEW-AS FILL-IN 
          SIZE 15.14 BY 1
     RowObject.city AT ROW 7.75 COL 15 COLON-ALIGNED
          VIEW-AS FILL-IN 
          SIZE 22 BY 1
     RowObject.county AT ROW 9 COL 15 COLON-ALIGNED
          LABEL "County"
          VIEW-AS FILL-IN 
          SIZE 22 BY 1
     RowObject.state AT ROW 10.25 COL 15 COLON-ALIGNED
          VIEW-AS FILL-IN 
          SIZE 9 BY 1
     stateDesc AT ROW 10.25 COL 25 COLON-ALIGNED NO-LABEL NO-TAB-STOP 
     RowObject.Country-code AT ROW 11.5 COL 15 COLON-ALIGNED
          LABEL "Country"
          VIEW-AS FILL-IN 
          SIZE 9 BY 1
     countryDesc AT ROW 11.5 COL 25 COLON-ALIGNED NO-LABEL
    WITH 1 DOWN NO-BOX KEEP-TAB-ORDER OVERLAY USE-DICT-EXPS 
         SIDE-LABELS NO-UNDERLINE THREE-D NO-AUTO-VALIDATE 
         AT COL 1 ROW 1
         SIZE 155.86 BY 20.67.


/* *********************** Procedure Settings ************************ */

&ANALYZE-SUSPEND _PROCEDURE-SETTINGS
/* Settings for THIS-PROCEDURE
   Type: SmartDataViewer
   Data Source: "fa/sdoloc.w"
   Allow: Basic,DB-Fields,Smart
   Container Links: Data-Target,Update-Source,TableIO-Target,GroupAssign-Source,GroupAssign-Target
   Frames: 1
   Add Fields to: Neither
   Other Settings: PERSISTENT-ONLY COMPILE
   Temp-Tables and Buffers:
      TABLE: RowObject D "?" ?  
      ADDITIONAL-FIELDS:
          {fa/sdoloc.i}
      END-FIELDS.
   END-TABLES.
 */

/* This procedure should always be RUN PERSISTENT.  Report the error,  */
/* then cleanup and return.                                            */
IF NOT THIS-PROCEDURE:PERSISTENT THEN DO:
  MESSAGE "{&FILE-NAME} should only be RUN PERSISTENT."
          VIEW-AS ALERT-BOX ERROR BUTTONS OK.
  RETURN.
END.

&ANALYZE-RESUME _END-PROCEDURE-SETTINGS

/* *************************  Create Window  ************************** */

&ANALYZE-SUSPEND _CREATE-WINDOW
/* DESIGN Window definition (used by the UIB) 
  CREATE WINDOW vTableWin ASSIGN
         HEIGHT             = 20.67
         WIDTH              = 155.86.
/* END WINDOW DEFINITION */
                                                                        */
&ANALYZE-RESUME

&ANALYZE-SUSPEND _UIB-CODE-BLOCK _CUSTOM _INCLUDED-LIB vTableWin 
/* ************************* Included-Libraries *********************** */

{src/adm2/viewer.i}

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME




/* ***********  Runtime Attributes and AppBuilder Settings  *********** */

&ANALYZE-SUSPEND _RUN-TIME-ATTRIBUTES
/* SETTINGS FOR WINDOW vTableWin
  VISIBLE,,RUN-PERSISTENT                                               */
/* SETTINGS FOR FRAME F-Main
   NOT-VISIBLE                                                          */
ASSIGN 
       FRAME F-Main:HIDDEN           = TRUE.

/* SETTINGS FOR FILL-IN RowObject.Country-code IN FRAME F-Main
   EXP-LABEL                                                            */
/* SETTINGS FOR FILL-IN countryDesc IN FRAME F-Main
   NO-ENABLE                                                            */
/* SETTINGS FOR FILL-IN RowObject.county IN FRAME F-Main
   EXP-LABEL                                                            */
/* SETTINGS FOR FILL-IN RowObject.entity IN FRAME F-Main
   NO-ENABLE EXP-LABEL                                                  */
/* SETTINGS FOR FILL-IN faEntDesc IN FRAME F-Main
   NO-ENABLE                                                            */
/* SETTINGS FOR FILL-IN RowObject.location IN FRAME F-Main
   EXP-LABEL                                                            */
/* SETTINGS FOR FILL-IN stateDesc IN FRAME F-Main
   NO-ENABLE                                                            */
/* SETTINGS FOR FILL-IN wkCtrDesc IN FRAME F-Main
   NO-ENABLE                                                            */
/* SETTINGS FOR FILL-IN RowObject.work-center IN FRAME F-Main
   EXP-LABEL                                                            */
/* _RUN-TIME-ATTRIBUTES-END */
&ANALYZE-RESUME


/* Setting information for Queries and Browse Widgets fields            */

&ANALYZE-SUSPEND _QUERY-BLOCK FRAME F-Main
/* Query rebuild information for FRAME F-Main
     _Options          = "NO-LOCK"
     _Query            is NOT OPENED
*/  /* FRAME F-Main */
&ANALYZE-RESUME

 



/* ************************  Control Triggers  ************************ */

&Scoped-define SELF-NAME btnLink
&ANALYZE-SUSPEND _UIB-CODE-BLOCK _CONTROL btnLink vTableWin
ON CHOOSE OF btnLink IN FRAME F-Main /* L */
OR CHOOSE OF btnFind
OR CHOOSE OF btnMemo
DO:
    CASE SELF:NAME:
        WHEN "btnLink" THEN DO:
            RUN pt/dExtLink.w (wfilename, wkeylist).
        END.
        WHEN "btnMemo" THEN DO:
            RUN seeMemos in hGenRules (IF lInquiry THEN "inquiry" ELSE "maintenance").
            HIDE ALL NO-PAUSE.
            VIEW FRAME {&FRAME-NAME}.
            ASSIGN 
                btnMemo:LABEL = IF CAN-FIND(FIRST z_memos WHERE 
                                            z_memos.file-name = wfilename AND 
                                            z_memos.key-list = wkeylist) THEN 
                                "Update Memos" ELSE "Create Memos".
        END.
        WHEN "btnFind" THEN DO:
            ENABLE  
                rowobject.{&cKeyField} 
                WITH FRAME {&FRAME-NAME}.
            ASSIGN
                origValue = rowobject.{&cKeyField}:{&SV}
                rowobject.{&cKeyField}:{&SV} = "". 
            APPLY "entry" TO rowobject.{&cKeyField}. 
        END.
    END CASE.
END.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME


&Scoped-define SELF-NAME RowObject.Country-code
&ANALYZE-SUSPEND _UIB-CODE-BLOCK _CONTROL RowObject.Country-code vTableWin
ON ENTRY OF RowObject.Country-code IN FRAME F-Main /* Country */
OR ENTRY OF rowobject.state
OR ENTRY OF rowobject.work-center
DO:
    CASE SELF:NAME:
        WHEN "country-code" THEN DO:
            {pt/setinit br-file 'country'}.
            {pt/setinit br-field 'country-code'}.
        END.
        WHEN "state" THEN DO:
            {pt/setinit br-file 'state'}.
            {pt/setinit br-field 'st'}.
        END.
        WHEN "work-center" THEN DO:
            {pt/setinit br-file 'wkctr'}.
            {pt/setinit br-field 'work-center'}.
        END.
    END CASE.
END.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME


&Scoped-define SELF-NAME RowObject.location
&ANALYZE-SUSPEND _UIB-CODE-BLOCK _CONTROL RowObject.location vTableWin
ON LEAVE OF RowObject.location IN FRAME F-Main /* Location */
OR RETURN OF rowobject.location
OR LEAVE OF rowobject.work-center
OR LEAVE OF rowobject.state
OR LEAVE OF rowobject.country-code
DO:
    IF LASTKEY = 27 OR LASTKEY = 306 THEN RETURN.

    CASE SELF:NAME:
        WHEN "location" THEN DO:
            IF lAddNew THEN DO:
                IF SELF:{&SV} = "" 
                OR SELF:{&SV} = ? THEN DO:
                    MESSAGE 
                        "Location code may not be blank"
                        VIEW-AS ALERT-BOX ERROR BUTTONS OK.
                    APPLY 'entry' TO SELF.
                    RETURN NO-APPLY.
                END.
                FIND {&cFileName} WHERE 
                    {&cFileName}.{&cKeyField} = SELF:{&SV} 
                    NO-LOCK NO-ERROR.
                IF AVAIL {&cFileName} THEN DO:
                    MESSAGE 
                        "Location is already on file"
                        VIEW-AS ALERT-BOX ERROR BUTTONS OK.
                    APPLY 'entry' TO SELF.
                    RETURN NO-APPLY.
                END.
            END.
            ELSE DO:
                FIND {&cFileName} WHERE 
                    {&cFileName}.{&cKeyField} = SELF:{&SV} 
                    NO-LOCK NO-ERROR.
                IF NOT AVAIL {&cFileName} THEN DO:
                    MESSAGE
                        "The location code you entered does not exist."
                        VIEW-AS ALERT-BOX ERROR.
                    RUN resetRecord IN THIS-PROCEDURE.
                    RUN ipEnableFields IN THIS-PROCEDURE ("display").
                END.
                ELSE DO:
                    RUN moveit IN h_sdo (ROWID({&cFileName})). 
                    RUN resetRecord IN THIS-PROCEDURE.
                    RUN ipEnableFields IN THIS-PROCEDURE ("display").
                END.
            END.
        END.
        WHEN "work-center" THEN DO:
            FIND wkctr WHERE 
                wkctr.work-center = SELF:{&SV}
                NO-LOCK NO-ERROR.
            IF NOT AVAIL wkctr THEN DO:
                MESSAGE 
                    "Work Center code not on file."
                    VIEW-AS ALERT-BOX ERROR BUTTONS OK.
                lError = TRUE.
                APPLY "entry" TO rowobject.work-center.
                RETURN NO-APPLY.
            END.
            ELSE ASSIGN
                wkCtrDesc:{&SV} = wkctr.DESCRIPTION[1].
        END.
        WHEN "state" THEN DO:
            FIND FIRST state WHERE
                state.st = SELF:{&SV}
                NO-LOCK NO-ERROR.
            IF NOT AVAIL state THEN DO:
                MESSAGE
                    "State code not on file."
                    VIEW-AS ALERT-BOX WARNING.
            END.
            ELSE ASSIGN
                stateDesc:{&SV} = state.st-desc.
        END.
        WHEN "country-code" THEN DO:
            FIND FIRST country WHERE
                country.country-code = SELF:{&SV}
                NO-LOCK NO-ERROR.
            IF NOT AVAIL country THEN DO:
                MESSAGE
                    "Country code not on file."
                    VIEW-AS ALERT-BOX WARNING.
            END.
            ELSE ASSIGN
                countryDesc:{&SV} = country.DESCRIPTION.
        END.
    END CASE.
END.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME


&UNDEFINE SELF-NAME

&ANALYZE-SUSPEND _UIB-CODE-BLOCK _CUSTOM _MAIN-BLOCK vTableWin 


/* ***************************  Main Block  *************************** */

  &IF DEFINED(UIB_IS_RUNNING) <> 0 &THEN          
    RUN initializeObject.
  &ENDIF         
  
  /************************ INTERNAL PROCEDURES ********************/

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME


/* **********************  Internal Procedures  *********************** */

&ANALYZE-SUSPEND _UIB-CODE-BLOCK _PROCEDURE addRecord vTableWin 
PROCEDURE addRecord :
/*------------------------------------------------------------------------------
  Purpose:     Super Override
  Parameters:  
  Notes:       
------------------------------------------------------------------------------*/
  
  RUN SUPER.

    ASSIGN 
        rowobject.entity:{&SV} = IF AVAIL fa-control THEN fa-control.fa-entity ELSE ""
        faEntDesc:{&SV} = IF AVAIL fa-control THEN fa-control.entity-name ELSE ""
        lAddNew = YES.

    RUN ipEnableFields IN THIS-PROCEDURE ('add').

END PROCEDURE.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME

&ANALYZE-SUSPEND _UIB-CODE-BLOCK _PROCEDURE cancelRecord vTableWin 
PROCEDURE cancelRecord :
/*------------------------------------------------------------------------------
  Purpose:     Super Override
  Parameters:  
  Notes:       
------------------------------------------------------------------------------*/

  RUN SUPER.

    ASSIGN
        lAddNew = FALSE.

END PROCEDURE.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME

&ANALYZE-SUSPEND _UIB-CODE-BLOCK _PROCEDURE copyRecord vTableWin 
PROCEDURE copyRecord :
/*------------------------------------------------------------------------------
  Purpose:     Super Override
  Parameters:  
  Notes:       
------------------------------------------------------------------------------*/

  RUN SUPER.
  
    ASSIGN 
        lAddNew = TRUE.

    RUN ipEnableFields IN THIS-PROCEDURE ('add').

END PROCEDURE.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME

&ANALYZE-SUSPEND _UIB-CODE-BLOCK _PROCEDURE deleteRecord vTableWin 
PROCEDURE deleteRecord :
/*------------------------------------------------------------------------------
  Purpose:     Super Override
  Parameters:  
  Notes:       
------------------------------------------------------------------------------*/
    RUN VALUE("pt/hypdel.p") (INPUT "location",
                              INPUT ROWID(location),
                              INPUT NO,
                              INPUT-OUTPUT deleteok,
                              INPUT YES).
    IF NOT deleteOK THEN RETURN.

    MESSAGE 
        "Are you sure you want to delete this record?"
        VIEW-AS ALERT-BOX QUESTION BUTTONS YES-NO update do-delete.
    IF NOT do-delete THEN RETURN.

    {pt/audit.i 'location' 'DELETE' STRING(ROWID(location))}
      
  RUN SUPER.

END PROCEDURE.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME

&ANALYZE-SUSPEND _UIB-CODE-BLOCK _PROCEDURE disable_UI vTableWin  _DEFAULT-DISABLE
PROCEDURE disable_UI :
/*------------------------------------------------------------------------------
  Purpose:     DISABLE the User Interface
  Parameters:  <none>
  Notes:       Here we clean-up the user-interface by deleting
               dynamic widgets we have created and/or hide 
               frames.  This procedure is usually called when
               we are ready to "clean-up" after running.
------------------------------------------------------------------------------*/
  /* Hide all frames. */
  HIDE FRAME F-Main.
  IF THIS-PROCEDURE:PERSISTENT THEN DELETE PROCEDURE THIS-PROCEDURE.
END PROCEDURE.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME

&ANALYZE-SUSPEND _UIB-CODE-BLOCK _PROCEDURE displayRecord vTableWin 
PROCEDURE displayRecord :
/*------------------------------------------------------------------------------
  Purpose:     Super Override
  Parameters:  
  Notes:       
------------------------------------------------------------------------------*/

  RUN SUPER.

    FIND FIRST {&cFileName} WHERE
        {&cFileName}.{&cKeyField} = rowobject.{&cKeyField}:{&SV}
        NO-LOCK NO-ERROR.
    
    IF AVAIL {&cFileName} THEN DO:
        RUN ipFindRelatedRecords IN THIS-PROCEDURE.
        RUN ipSetDetails IN THIS-PROCEDURE.
        RUN ipEnableFields IN THIS-PROCEDURE ("Display").
        RUN ipMemoDisplay IN THIS-PROCEDURE.
    END.
    ELSE DO:
        RUN ipEnableFields IN THIS-PROCEDURE ("none").
    END.

END PROCEDURE.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME

&ANALYZE-SUSPEND _UIB-CODE-BLOCK _PROCEDURE initializeObject vTableWin 
PROCEDURE initializeObject :
/*------------------------------------------------------------------------------
  Purpose:     Super Override
  Parameters:  
  Notes:       
------------------------------------------------------------------------------*/
    FIND in-control OF entity 
        NO-LOCK NO-ERROR.

  RUN SUPER.

    IF functionname BEGINS "b." 
    OR functionname MATCHES "*inq*" THEN ASSIGN 
        lInquiry = TRUE.

    RUN ipSetSecurity IN THIS-PROCEDURE.
    RUN displayRecord IN THIS-PROCEDURE.

END PROCEDURE.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME

&ANALYZE-SUSPEND _UIB-CODE-BLOCK _PROCEDURE ipEnableFields vTableWin 
PROCEDURE ipEnableFields :
/*------------------------------------------------------------------------------
  Purpose:     
  Parameters:  <none>
  Notes:       
------------------------------------------------------------------------------*/
    DEF INPUT PARAMETER ipAction AS CHAR NO-UNDO.

    DISABLE ALL WITH FRAME {&FRAME-NAME}.
    
    IF lInquiry THEN ASSIGN
        ipAction = "none".

    CASE ipAction:
        WHEN "display" THEN DO:
            ENABLE
                btnLink
                btnFind
                rowobject.DESCRIPTION
                btnMemo
                rowobject.work-center
                rowobject.room
                rowobject.building
                rowobject.city
                rowobject.county
                rowobject.state
                rowobject.country-code
                WITH FRAME {&FRAME-NAME}.
            APPLY 'entry' TO rowobject.DESCRIPTION.
        END.
        WHEN "add" THEN DO:
            ENABLE 
                rowobject.location
                rowobject.DESCRIPTION
                rowobject.work-center
                rowobject.room
                rowobject.building
                rowobject.city
                rowobject.county
                rowobject.state
                rowobject.country-code
                WITH FRAME {&FRAME-NAME}.
            APPLY 'entry' TO rowobject.location.
        END.
        WHEN "none" THEN DO:
            ENABLE
                btnFind
                WITH FRAME {&FRAME-NAME}.
            APPLY 'entry' TO btnFind.
        END.
    END CASE.

END PROCEDURE.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME

&ANALYZE-SUSPEND _UIB-CODE-BLOCK _PROCEDURE ipFindRelatedRecords vTableWin 
PROCEDURE ipFindRelatedRecords :
/*------------------------------------------------------------------------------
  Purpose:     
  Parameters:  <none>
  Notes:       
------------------------------------------------------------------------------*/
    FIND FIRST wkctr WHERE
        wkctr.in-entity = (IF AVAIL in-control THEN in-control.in-entity ELSE fa-control.fa-entity) AND
        wkctr.work-center = rowobject.work-center:{&SV}
        NO-LOCK NO-ERROR.
    FIND state WHERE
        state.st = rowobject.state:{&SV}
        NO-LOCK NO-ERROR.
    FIND country WHERE
        country.country-code = rowobject.country-code:{&SV}
        NO-LOCK NO-ERROR.
END PROCEDURE.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME

&ANALYZE-SUSPEND _UIB-CODE-BLOCK _PROCEDURE ipMemoDisplay vTableWin 
PROCEDURE ipMemoDisplay :
/*------------------------------------------------------------------------------
  Purpose:     
  Parameters:  <none>
  Notes:       
------------------------------------------------------------------------------*/
    FIND FIRST z_memos WHERE 
        z_memos.file-name = wfilename AND 
        z_memos.key-list = wkeylist
        NO-LOCK NO-ERROR.
    IF AVAIL z_memos THEN ASSIGN
        btnMemo:SENSITIVE {&IN} = TRUE
        btnMemo:LABEL = IF lInquiry THEN "View Memos" ELSE "Update Memos".
    ELSE ASSIGN
        btnMemo:SENSITIVE = IF lInquiry THEN FALSE ELSE TRUE
        btnMemo:LABEL = "Create Memos".
    IF CAN-FIND(FIRST z_memos WHERE 
                z_memos.file-name = wfilename AND 
                z_memos.key-list = wkeylist AND
                z_memos.must-see = TRUE) THEN DO:
        RUN epMustSee IN hGenRules.
    END.

END PROCEDURE.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME

&ANALYZE-SUSPEND _UIB-CODE-BLOCK _PROCEDURE ipSetDetails vTableWin 
PROCEDURE ipSetDetails :
/*------------------------------------------------------------------------------
  Purpose:     
  Parameters:  <none>
  Notes:       
------------------------------------------------------------------------------*/
    ASSIGN
        wfilename = "location"
        wkeylist = rowobject.location:{&SV} + ","
        faEntDesc:{&SV} = IF AVAIL fa-control THEN fa-control.entity-name ELSE ""
        wkCtrDesc:{&SV} = IF AVAIL wkctr THEN wkctr.DESCRIPTION[1] ELSE ""
        stateDesc:{&SV} = IF AVAIL state THEN state.st-desc ELSE ""
        countryDesc:{&SV} = IF AVAIL country THEN country.DESCRIPTION ELSE "".

END PROCEDURE.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME

&ANALYZE-SUSPEND _UIB-CODE-BLOCK _PROCEDURE ipSetSecurity vTableWin 
PROCEDURE ipSetSecurity :
/*------------------------------------------------------------------------------
  Purpose:     
  Parameters:  <none>
  Notes:       
------------------------------------------------------------------------------*/
    {pt/ipSetSecurity.i}
END PROCEDURE.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME

&ANALYZE-SUSPEND _UIB-CODE-BLOCK _PROCEDURE ipValidateAll vTableWin 
PROCEDURE ipValidateAll :
/*------------------------------------------------------------------------------
  Purpose:     
  Parameters:  <none>
  Notes:       
------------------------------------------------------------------------------*/
    ASSIGN
        lError = FALSE.

    APPLY 'leave' TO rowobject.location {&IN}.
    IF lError THEN RETURN.
    APPLY 'leave' TO rowobject.work-center.
    IF lError THEN RETURN.
    APPLY 'leave' TO rowobject.state.
    IF lError THEN RETURN.
    APPLY 'leave' TO rowobject.country-code.
    IF lError THEN RETURN.

END PROCEDURE.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME

&ANALYZE-SUSPEND _UIB-CODE-BLOCK _PROCEDURE resetRecord vTableWin 
PROCEDURE resetRecord :
/*------------------------------------------------------------------------------
  Purpose:     Super Override
  Parameters:  
  Notes:       
------------------------------------------------------------------------------*/

  RUN SUPER.

    ASSIGN
        lModified = FALSE.

END PROCEDURE.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME

&ANALYZE-SUSPEND _UIB-CODE-BLOCK _PROCEDURE updateRecord vTableWin 
PROCEDURE updateRecord :
/*------------------------------------------------------------------------------
  Purpose:     Super Override
  Parameters:  
  Notes:       
------------------------------------------------------------------------------*/
    RUN ipValidateAll IN THIS-PROCEDURE.
    IF lError THEN RETURN.

  RUN SUPER.

    FIND location WHERE
        location.location = rowobject.location:{&SV} 
        NO-LOCK NO-ERROR.
    
    {pt/audit.i 'location' '' STRING(ROWID(location))}
    
    /* Update UDF value */
    IF SEARCH("udf/location.p") <> ? 
    OR SEARCH("udf/location.r") <> ? THEN 
        RUN VALUE("udf/location.p") ("update").

    ASSIGN 
        lAddNew = FALSE.


END PROCEDURE.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME

