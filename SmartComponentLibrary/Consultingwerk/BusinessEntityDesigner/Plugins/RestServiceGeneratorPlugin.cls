/**********************************************************************
 * Copyright (C) 2006-2013 by Consultingwerk Ltd. ("CW") -            *
 * www.consultingwerk.de and other contributors as listed             *
 * below.  All Rights Reserved.                                       *
 *                                                                    *
 *  Software is distributed on an "AS IS", WITHOUT WARRANTY OF ANY    *
 *   KIND, either express or implied.                                 *
 *                                                                    *
 *  Contributors:                                                     *
 *                                                                    *
 **********************************************************************/
/*------------------------------------------------------------------------
    File        : RestServiceGeneratorPlugin
    Purpose     : Business Entity Designer Plugin that allows to generate 
                  Proxy Classes for Business Entities. These proxy classes
                  allow to expose Business  Entities using the REST Adapter
                  to OpenEdge mobile or compatible clients. 
    Syntax      : 
    Description : Adds a "Include Files" and "Service Interface" buttons 
                  to the Ribbon of the Business Entity Designer. Those buttons
                  allow to generate include files (excluding any XML specific
                  properties in the source code) and REST Service Interface
                  classes that can be added to a REST service.
    Author(s)   : Mike Fechner / Consultingwerk Ltd.
    Created     : Fri Jun 07 21:40:37 CEST 2013
    Notes       : The use of the code generated by this plugin is no longer
                  recommended. We recommend customers to export Business 
                  Entities dynamically using the Generic Service Interface  
  ----------------------------------------------------------------------*/

ROUTINE-LEVEL ON ERROR UNDO, THROW.

{Consultingwerk/products.i}

USING Consultingwerk.BusinessEntityDesigner.*                                FROM PROPATH .
USING Consultingwerk.BusinessEntityDesigner.Generator.*                      FROM PROPATH .  
USING Consultingwerk.BusinessEntityDesigner.Plugins.*                        FROM PROPATH .  
USING Consultingwerk.BusinessEntityDesigner.Plugins.RestInterfaceGenerator.* FROM PROPATH .  
USING Consultingwerk.BusinessEntityDesigner.Services.*                       FROM PROPATH .
USING Consultingwerk.BusinessEntityDesigner.UI.*                             FROM PROPATH .
USING Consultingwerk.Util.*                                                  FROM PROPATH .  
USING Progress.Lang.*                                                        FROM PROPATH .
USING Infragistics.Win.UltraWinToolbars.*                                    FROM ASSEMBLY . 

CLASS Consultingwerk.BusinessEntityDesigner.Plugins.RestServiceGeneratorPlugin IMPLEMENTS IBusinessEntityDesignerPlugin: 

    { Consultingwerk/BusinessEntityDesigner/Services/dsBusinessEntity.i &REFERENCE-ONLY="REFERENCE-ONLY" }

    &scoped-define TempTableTemplate rest-temp-table.template
    &scoped-define DatasetTemplate rest-dataset.template

    DEFINE VARIABLE cUserName      AS CHARACTER NO-UNDO .
    DEFINE VARIABLE cIncludeFolder AS CHARACTER NO-UNDO.

    DEFINE VARIABLE oController AS BusinessEntityDatasetController NO-UNDO .
    DEFINE VARIABLE oForm       AS BusinessEntityDesignerForm      NO-UNDO .

    /*------------------------------------------------------------------------------
        Purpose: Locates a template file and throws an Error when the template 
                 cannot be located                                                                       
        Notes:                    
        @param pcFileName The relative name of the template file
        @return Full pathname of the template                                                     
    ------------------------------------------------------------------------------*/
    METHOD PROTECTED CHARACTER CheckTemplatePath (pcFileName AS CHARACTER):
        
        DEFINE VARIABLE cFileName AS CHARACTER NO-UNDO.
        
        ASSIGN cFileName = TemplateHelper:Find (pcFileName) .

        FILE-INFO:FILE-NAME = cFileName .
        
        IF FILE-INFO:FULL-PATHNAME > "":U THEN 
            RETURN FILE-INFO:FULL-PATHNAME . 
            
        UNDO, THROW NEW AppError (SUBSTITUTE ("The template file ~"&1~" cannot be found."{&TRAN},
                                              pcFileName), 0) .    
        
    END METHOD.
    
    /*------------------------------------------------------------------------------
        Purpose: Returns the child tables of the given temp-table                                                                        
        Notes:                                            
        @param pcParentTable The name of the parent table to return the child tables of
        @return Comma delimited list of child temp-tables of the parent table                            
    ------------------------------------------------------------------------------*/
    METHOD PROTECTED CHARACTER ChildTablesOf (pcParentTable AS CHARACTER):
        
        DEFINE BUFFER b_eDataRelation FOR eDataRelation .
        
        DEFINE VARIABLE cChildTables AS CHARACTER NO-UNDO.
        
        FOR EACH b_eDataRelation WHERE b_eDataRelation.ParentTempTableName = pcParentTable :
            
            ASSIGN cChildTables = cChildTables + b_eDataRelation.ChildTempTableName + ",":U +
                                  THIS-OBJECT:ChildTablesOf (b_eDataRelation.ChildTempTableName) + ",":U.
        END. 

        RETURN REPLACE (TRIM (cChildTables, ",":U), ",,":U, ",":U) .
        
    END METHOD.
        
    /*------------------------------------------------------------------------------
        Purpose: Generates the dataset include file                                                                       
        Notes:    
        @return The file name of the generated dataset include file                                                                    
    ------------------------------------------------------------------------------*/
    METHOD PROTECTED CHARACTER GenerateDataset ():

        DEFINE VARIABLE lcSource            AS LONGCHAR                                  NO-UNDO .
        DEFINE VARIABLE lcIncludes          AS LONGCHAR                                  NO-UNDO .
        DEFINE VARIABLE lcTables            AS LONGCHAR                                  NO-UNDO . 
        DEFINE VARIABLE cTopNavBuffers      AS CHARACTER                                 NO-UNDO .
        DEFINE VARIABLE cTables             AS CHARACTER                                 NO-UNDO .
        DEFINE VARIABLE i                   AS INTEGER                                   NO-UNDO .
        DEFINE VARIABLE lcRelations         AS LONGCHAR                                  NO-UNDO .
        DEFINE VARIABLE cOutputFile         AS CHARACTER                                 NO-UNDO .
        DEFINE VARIABLE cPath               AS CHARACTER                                 NO-UNDO .

        DEFINE VARIABLE oSettings           AS Consultingwerk.Framework.ISettingsService NO-UNDO . 
        DEFINE VARIABLE cSourceFolder       AS CHARACTER                                 NO-UNDO .

        DEFINE VARIABLE cTemplate           AS CHARACTER                                 NO-UNDO .

        DEFINE VARIABLE oWriteFileEventArgs AS WriteFileEventArgs                        NO-UNDO . 

        ASSIGN cTemplate = CheckTemplatePath ("OeMobile\{&DatasetTemplate}":U) .  
                
        FIND FIRST eBusinessEntity . 
                             
        COPY-LOB FROM FILE cTemplate TO lcSource .

        ASSIGN cTopNavBuffers = THIS-OBJECT:GetTopNavBuffers() .
        
        DO i = 1 TO NUM-ENTRIES (cTopNavBuffers):
            ASSIGN cTables = cTables + ENTRY (i, cTopNavBuffers) + ",":U +    
                                       THIS-OBJECT:ChildTablesOf (ENTRY (i, cTopNavBuffers))  + ",":U.
        END. 

        oSettings = {Consultingwerk/get-service.i Consultingwerk.Framework.ISettingsService} .
        
        ASSIGN cSourceFolder = oSettings:GetSetting ("RestInterface":U,
                                                     "RestInterfaceSourceFolder":U) . 
        
        FILE-INFO:FILE-NAME = SUBSTITUTE ("&1\AppServer":U, cSourceFolder) .
        
        IF FILE-INFO:FULL-PATHNAME > "":U THEN 
            cPath = FILE-INFO:FULL-PATHNAME .         
        ELSE DO:
            FILE-INFO:FILE-NAME = cSourceFolder . 

            IF FILE-INFO:FULL-PATHNAME > "":U THEN 
                cPath = FILE-INFO:FULL-PATHNAME .
            ELSE 
                cPath = ? .  
        END.

        IF cPath > "":U THEN 
            IF cIncludeFolder BEGINS cPath THEN 
                ASSIGN cPath = REPLACE (SUBSTRING (cIncludeFolder, LENGTH (cPath) + 2), "~\":U, "/":U) .
            ELSE 
                cPath = "":U .  
        ELSE 
            cPath = "":U .

        ASSIGN cTables = TRIM (cTables, ",":U) .

        DO i = 1 TO NUM-ENTRIES (cTables):
            FIND eTable WHERE eTable.TempTableName = ENTRY (i, cTables) NO-ERROR  . 

            IF NOT AVAILABLE eTable THEN NEXT .

            ASSIGN lcIncludes = lcIncludes +
                                SUBSTITUTE ("~{ &1&3&2.i &4~}":U, 
                                            cPath, 
                                            eTable.TempTableName,
                                            "/":U) + CHR (10)                                                                                        
                   lcTables   = lcTables + eTable.TempTableName + ", ":U . 

        END.

        FOR EACH eDataRelation WHERE eDataRelation.BusinessEntityName = eBusinessEntity.BusinessEntityName:
            ASSIGN lcRelations = lcRelations + 
                                 SUBSTITUTE ("    DATA-RELATION &1 FOR &2, &3 &4        RELATION-FIELDS (&5)":U,
                                             eDataRelation.DataRelationName,
                                             eDataRelation.ParentTempTableName,
                                             eDataRelation.ChildTempTableName,
                                             CHR(10),
                                             eDataRelation.RelationFields) + CHR(10) .
    
            IF eDataRelation.DataRelationReposition OR 
               eDataRelation.DataRelationNested     OR
               eDataRelation.DataRelationNotActive  OR 
               eDataRelation.DataRelationRecursive  THEN 
               
               ASSIGN lcRelations = lcRelations + "        ":U + 
                                    (IF eDataRelation.DataRelationReposition THEN "REPOSITION ":U ELSE "":U) +
                                    (IF eDataRelation.DataRelationNested     THEN "NESTED ":U + (IF eDataRelation.DataRelationForeignKeyHidden THEN "FOREIGN-KEY-HIDDEN ":U ELSE "":U) ELSE "":U) +
                                    (IF eDataRelation.DataRelationNotActive THEN "NOT-ACTIVE ":U ELSE "":U) +
                                    (IF eDataRelation.DataRelationRecursive THEN "RECURSIVE ":U ELSE "":U) + 
                                    CHR(10) 
                                    . 
        END.
        
        ASSIGN lcTables = TRIM (TRIM(lcTables), ",":U) .
        
        ASSIGN lcSource = SUBSTITUTE (lcSource,
                                      eBusinessEntity.DatasetName,
                                      lcTables,
                                      lcIncludes,
                                      lcRelations,
                                      STRING (NOW, "99.99.9999 HH:MM:SS":U),
                                      eBusinessEntity.BusinessEntityPurpose,
                                      eBusinessEntity.BusinessEntityDescription) .
        
        /* Mike Fechner, Consultingwerk Ltd. 18.06.2012
           user name, replace @USER@, with the current user name */                                      
        ASSIGN lcSource = REPLACE (lcSource, "@USER@":U, cUserName) 
               lcSource = REPLACE (lcSource, "@FILEANNOTATION@":U, BusinessEntityGenerator:GenerateFileAnnotation(eBusinessEntity.BusinessEntityPackage,
                                                                                                                  eBusinessEntity.BusinessEntityName,
                                                                                                                  "RestDataset":U))                       
               lcSource = StringHelper:FixLineEnding (lcSource) .           
        
        ASSIGN cOutputFile = TRIM(SUBSTITUTE ("&3&1/&2.i":U, 
                                              "":U, 
                                              eBusinessEntity.DatasetName,
                                              cIncludeFolder), "/":U) . 
        
        oWriteFileEventArgs = BusinessEntityGenerator:RaiseWriteFileEvent ("Rest Interface Dataset":U, cOutputFile) .

        IF VALID-OBJECT (oWriteFileEventArgs) THEN DO:
            IF oWriteFileEventArgs:Cancel THEN 
                RETURN cOutputFile .
                
            IF oWriteFileEventArgs:NewFileName > "":U THEN 
                cOutputFile = oWriteFileEventArgs:NewFileName . 
        END.
        
        COPY-LOB FROM lcSource TO FILE cOutputFile .

        RETURN cOutputFile . 
       
    END METHOD.
        
    /*------------------------------------------------------------------------------
        Purpose: Generates the Include Files with the data schema used by the 
                 REST Service "Business Entity" classes 
        Notes:   
        @param dsBusinessEntity Business Entity with the Design dataset, called with the BIND keyword
    ------------------------------------------------------------------------------*/
	METHOD PUBLIC VOID GenerateIncludeFiles (DATASET FOR dsBusinessEntity):
		
        DEFINE VARIABLE oFolderBrowserDialog AS System.Windows.Forms.FolderBrowserDialog NO-UNDO.
		DEFINE VARIABLE oDialogResult        AS System.Windows.Forms.DialogResult        NO-UNDO .
		DEFINE VARIABLE cSourceFolder        AS CHARACTER                                NO-UNDO .
		
        DEFINE VARIABLE oSettings AS Consultingwerk.Framework.ISettingsService NO-UNDO . 
        
        oSettings = {Consultingwerk/get-service.i Consultingwerk.Framework.ISettingsService} .
		
        ASSIGN cSourceFolder = oSettings:GetSetting ("RestInterface":U,
                                                     "RestInterfaceSourceFolder":U) . 

		oFolderBrowserDialog = NEW System.Windows.Forms.FolderBrowserDialog () .
		oFolderBrowserDialog:RootFolder = "System.Environment+SpecialFolder":MyComputer .
		
		FILE-INFO:FILE-NAME = SUBSTITUTE ("&1\AppServer":U, cSourceFolder) .
		
		IF FILE-INFO:FULL-PATHNAME > "":U THEN 
            oFolderBrowserDialog:SelectedPath = FILE-INFO:FULL-PATHNAME .        
        ELSE DO:
            FILE-INFO:FILE-NAME = cSourceFolder . 

            IF FILE-INFO:FULL-PATHNAME > "":U THEN 
                oFolderBrowserDialog:SelectedPath = FILE-INFO:FULL-PATHNAME . 
        END.
		
		oFolderBrowserDialog:ShowNewFolderButton = TRUE . 
		
		WAIT-FOR oFolderBrowserDialog:ShowDialog () SET oDialogResult . 
		
		{Consultingwerk/check-dialogresult-ok.i oDialogResult}
		
		ASSIGN cIncludeFolder = oFolderBrowserDialog:SelectedPath .

        THIS-OBJECT:GenerateTempTables () .
        THIS-OBJECT:GenerateDataset () .
		
	END METHOD .

    /*------------------------------------------------------------------------------
        Purpose: Generates the Service Interface class (called Business Entity in PDSOE) 
        Notes:   
        @param dsBusinessEntity Business Entity with the Design dataset, called with the BIND keyword
    ------------------------------------------------------------------------------*/
	METHOD PUBLIC VOID GenerateServiceInterface (DATASET FOR dsBusinessEntity):
		
        DEFINE VARIABLE oWizard      AS RestInterfaceWizard NO-UNDO .
        DEFINE VARIABLE cTables      AS CHARACTER           NO-UNDO .
        DEFINE VARIABLE cChildTables AS CHARACTER           NO-UNDO .
        DEFINE VARIABLE i            AS INTEGER             NO-UNDO .
        DEFINE VARIABLE j            AS INTEGER             NO-UNDO .

        oWizard = NEW RestInterfaceWizard () .
        oWizard:BusinessEntityName = oController:BusinessEntityViewerControl:SmartDataSource:GetFieldValues ("BusinessEntityName":U) . 
        oWizard:BusinessEntityPackage = oController:BusinessEntityViewerControl:SmartDataSource:GetFieldValues ("BusinessEntityPackage":U) .
        oWizard:DatasetName = oController:BusinessEntityViewerControl:SmartDataSource:GetFieldValues ("DatasetName":U) .
       
        cTables = THIS-OBJECT:GetTopNavBuffers() .
       
        DO i = 1 TO NUM-ENTRIES (cTables):
            oWizard:Tables:Add (ENTRY (i, cTables)) .
            
            cChildTables = THIS-OBJECT:ChildTablesOf (ENTRY (i, cTables)) .
            
            DO j = 1 TO NUM-ENTRIES (cChildTables):
                oWizard:Tables:Add (ENTRY (j, cChildTables)) .
            END.             
        END.
       
        oWizard:Owner = oForm . 
        
        WAIT-FOR oWizard:ShowDialog () .

	END METHOD .

    /*------------------------------------------------------------------------------
        Purpose: Generates the temp-table include files                                                                       
        Notes:        
        @return Comma-delimited list of the generated temp-table include files                                                                
    ------------------------------------------------------------------------------*/
    METHOD PROTECTED CHARACTER GenerateTempTables ():
        
        DEFINE VARIABLE lcSource            AS LONGCHAR           NO-UNDO . 
        DEFINE VARIABLE cFields             AS LONGCHAR           NO-UNDO .
        DEFINE VARIABLE cIndexes            AS LONGCHAR           NO-UNDO.
        DEFINE VARIABLE cBeforeTable        AS CHARACTER          NO-UNDO .
        DEFINE VARIABLE cTableOptions       AS CHARACTER          NO-UNDO.
        DEFINE VARIABLE i                   AS INTEGER            NO-UNDO .

        DEFINE VARIABLE cTemplate           AS CHARACTER          NO-UNDO.
        DEFINE VARIABLE cOutputFile         AS CHARACTER          NO-UNDO.
        DEFINE VARIABLE cReturn             AS CHARACTER          NO-UNDO.
        
        DEFINE VARIABLE oWriteFileEventArgs AS WriteFileEventArgs NO-UNDO . 
        
        ASSIGN cTemplate = CheckTemplatePath ("OeMobile\{&TempTableTemplate}":U) .  
        
        FIND FIRST eBusinessEntity . 
        
        FOR EACH eTable WHERE eTable.BusinessEntityName = eBusinessEntity.BusinessEntityName:
            COPY-LOB FROM FILE cTemplate TO lcSource .
            
            ASSIGN cFields = "":U .
            
            FOR EACH eField WHERE eField.TempTableName = eTable.TempTableName
                               BY eField.FieldOrder:
            
                ASSIGN cFields = cFields + 
                                 SUBSTITUTE ("    FIELD &1 AS &2":U,
                                             eField.FieldName,
                                             UPPER(eField.FieldDataType)) . 

                IF eField.FieldExtent > 0 THEN 
                    ASSIGN cFields = cFields + SUBSTITUTE (" EXTENT &1":U, eField.FieldExtent) .                             

                IF eField.FieldFormat > "":U AND eField.FieldDataType <> "RAW":U THEN 
                    ASSIGN cFields = cFields + SUBSTITUTE (" FORMAT ~"&1~":U":U, REPLACE(REPLACE (eField.FieldFormat, "~"":U, "~~~"":U), "~{":U, "~~~{":U)) .                             

                IF eField.FieldInitial > "":U THEN 
                    ASSIGN cFields = cFields + SUBSTITUTE (" INIT ~"&1~":U":U, REPLACE(REPLACE (eField.FieldInitial, "~"":U, "~~~"":U), "~{":U, "~~~{":U)) .                             
                
                IF eField.FieldLabel > "":U AND eField.FieldDataType <> "RAW":U  THEN 
                    ASSIGN cFields = cFields + SUBSTITUTE (" LABEL ~"&1~":T":U, REPLACE(REPLACE (eField.FieldLabel, "~"":U, "~~~"":U), "~{":U, "~~~{":U)) .                             

                IF eField.FieldCaseSensitive THEN 
                    ASSIGN cFields = cFields + " CASE-SENSITIVE":U .                 

                ASSIGN cFields = cFields + CHR (10) .                                             
            END.
            
            ASSIGN cIndexes = "":U .
            
            FOR EACH eIndex WHERE eIndex.TempTableName = eTable.TempTableName
                               BY eIndex.IndexOrder:
               
                IF eIndex.FieldNames > "":U THEN . 
                ELSE NEXT . 
                                  
                ASSIGN cIndexes = cIndexes + "    INDEX ":U + eIndex.IndexName .
                
                IF eIndex.IndexUnique OR eIndex.IndexPrimary OR eIndex.IndexWordIndex THEN DO:
                    ASSIGN cIndexes = cIndexes + " AS":U .
                    
                    IF eIndex.IndexUnique THEN
                        ASSIGN cIndexes = cIndexes + " UNIQUE":U .
                    IF eIndex.IndexPrimary THEN
                        ASSIGN cIndexes = cIndexes + " PRIMARY":U .
                    IF eIndex.IndexWordIndex THEN
                        ASSIGN cIndexes = cIndexes + " WORD-INDEX":U .
                END.       

                DO i = 1 TO NUM-ENTRIES (eIndex.FieldNames):
                    ASSIGN cIndexes = cIndexes + " ":U + ENTRY (i, eIndex.FieldNames) + " ":U
                                                       + ENTRY (i, eIndex.FieldSort).
                END.
                
                ASSIGN cIndexes = cIndexes + CHR (10) .                                             
            END.
            
            ASSIGN cTableOptions = "":U .
            
            ASSIGN cBeforeTable = (IF eTable.TempTableBeforeName > "":U THEN "BEFORE-TABLE":U ELSE "":U)
                   lcSource = SUBSTITUTE (lcSource, 
                                          eTable.TempTableName,
                                          eTable.TempTableBeforeName,
                                          cBeforeTable,
                                          cFields,
                                          cIndexes,
                                          STRING (NOW, "99.99.9999 HH:MM:SS":U),
                                          eTable.TempTablePurpose,
                                          eTable.TempTableDescription,
                                          cTableOptions) .

            /* Mike Fechner, Consultingwerk Ltd. 18.06.2012
               user name, replace @USER@, with the current user name */                                      
            ASSIGN lcSource = REPLACE (lcSource, "@USER@":U, cUserName) 
                   lcSource = REPLACE (lcSource, "@FILEANNOTATION@":U, BusinessEntityGenerator:GenerateFileAnnotation(eBusinessEntity.BusinessEntityPackage,
                                                                                                                  eBusinessEntity.BusinessEntityName,
                                                                                                                  "RestTempTable":U))                       
                   lcSource = StringHelper:FixLineEnding (lcSource) .           

            ASSIGN cOutputFile = TRIM(SUBSTITUTE ("&3&1/&2.i":U, 
                                                  "":U, 
                                                  eTable.TempTableName,
                                                  cIncludeFolder), "/":U) .                                          
                                          
            oWriteFileEventArgs = BusinessEntityGenerator:RaiseWriteFileEvent ("Rest Interface Temp-Table":U, cOutputFile) .
    
            IF VALID-OBJECT (oWriteFileEventArgs) THEN DO:
                IF oWriteFileEventArgs:Cancel THEN 
                    RETURN cOutputFile .
                    
                IF oWriteFileEventArgs:NewFileName > "":U THEN 
                    cOutputFile = oWriteFileEventArgs:NewFileName . 
            END.
                                          
            COPY-LOB FROM lcSource TO FILE cOutputFile .
                     
            ASSIGN cReturn = cReturn + cOutputFile + ",":U.                     
        END.

        RETURN TRIM (cReturn, ",":U) .

    END METHOD.
    
    /*------------------------------------------------------------------------------
        Purpose: Returns the comma delimited list of the top-nav buffers of the generated dataset                                                                        
        Notes:                                                                        
        @return The comma delimited list of the top-nav buffers
    ------------------------------------------------------------------------------*/
    METHOD PROTECTED CHARACTER GetTopNavBuffers ():
        
        DEFINE BUFFER b_eTable FOR eTable .
        DEFINE BUFFER b_eDataRelation FOR eDataRelation .

        DEFINE VARIABLE cTopNavBuffers AS CHARACTER NO-UNDO.
        DEFINE VARIABLE i              AS INTEGER   NO-UNDO.

        FOR EACH b_eTable:
            IF NOT CAN-FIND (b_eDataRelation WHERE b_eDataRelation.BusinessEntityName = b_eTable.BusinessEntityName
                                               AND b_eDataRelation.ChildTempTableName = b_eTable.TempTableName) THEN 

                ASSIGN cTopNavBuffers = cTopNavBuffers + ",":U + b_eTable.TempTableName .         
        END.
        
        RETURN TRIM (cTopNavBuffers, ",":U) .

    END METHOD.
        
    /*------------------------------------------------------------------------------
        Purpose: Method called when the Business Entity Designer will get closed                                                                      
        Notes:                                                                        
    ------------------------------------------------------------------------------*/
	METHOD PUBLIC VOID Shutdown ():

	END METHOD .
	
    /*------------------------------------------------------------------------------
        Purpose: Constructor for the RestServiceGeneratorPlugin class
        Notes:   
    ------------------------------------------------------------------------------*/
	CONSTRUCTOR PUBLIC RestServiceGeneratorPlugin ():
		SUPER ().
		
		ASSIGN cUserName = BusinessEntityGenerator:GetUserName() .
		
	END CONSTRUCTOR.

    /*------------------------------------------------------------------------------
        Purpose: Method called when the Business Entity Designer is starting and 
                 has loaded the plugin.                                                                      
        Notes:   Passes references to some key components of the Designer to 
                 the plugin, use this to initialize the plugin, subscribe to events                                                                     
        @param dsBusinessEntity Business Entity with the Design dataset, called with the BIND keyword
        @param poController The BusinessEntityDatasetController
        @param poForm The main Form of the BusinessEntityDesigner
        @param poToolbar The reference to the UltraToolbarsManager used by the BusinessEntityDesigner                                                                     
    ------------------------------------------------------------------------------*/
    METHOD PUBLIC VOID Startup (DATASET FOR dsBusinessEntity BIND, 
                                poController AS BusinessEntityDatasetController, 
                                poForm AS BusinessEntityDesignerForm, 
                                poToolbar AS Infragistics.Win.UltraWinToolbars.UltraToolbarsManager):
		
        DEFINE VARIABLE oGenerateIncludeFile AS ButtonTool  NO-UNDO .
        DEFINE VARIABLE oGenerateServiceFile AS ButtonTool  NO-UNDO .
        DEFINE VARIABLE oGroup               AS RibbonGroup NO-UNDO .
        DEFINE VARIABLE oTab                 AS RibbonTab   NO-UNDO .
		
        ASSIGN oController = poController  
               oForm       = poForm . 
		
        oGenerateIncludeFile = NEW ButtonTool ("RestService_Plugin_GenerateIncludeFiles":U) .
        oGenerateIncludeFile:SharedProps:Caption = "Include Files"{&TRAN} .
        oGenerateIncludeFile:SharedProps:DisplayStyle = ToolDisplayStyle:ImageAndText .
        poToolbar:Tools:Add (oGenerateIncludeFile) .        
		
		oGenerateIncludeFile:SharedProps:AppearancesLarge:Appearance:Image =  
            ImageHelper:Load ("Consultingwerk/BusinessEntityDesigner/UI/Images/code_edit_32.png":U) .		  
        oGenerateIncludeFile:SharedProps:AppearancesSmall:Appearance:Image =  
            ImageHelper:Load ("Consultingwerk/BusinessEntityDesigner/UI/Images/code_edit_16.png":U) .     

        oGenerateServiceFile = NEW ButtonTool ("RestService_Plugin_GenerateServiceInterface":U) .
        oGenerateServiceFile:SharedProps:Caption = "Service Interface"{&TRAN} .
        oGenerateServiceFile:SharedProps:DisplayStyle = ToolDisplayStyle:ImageAndText .
        poToolbar:Tools:Add (oGenerateServiceFile) .        
        
        oGenerateServiceFile:SharedProps:AppearancesLarge:Appearance:Image =  
            ImageHelper:Load ("Consultingwerk/BusinessEntityDesigner/UI/Images/gear_32.png":U) .         
        oGenerateServiceFile:SharedProps:AppearancesSmall:Appearance:Image =  
            ImageHelper:Load ("Consultingwerk/BusinessEntityDesigner/UI/Images/gear_16.png":U) .     
		
        IF poToolbar:Ribbon:Tabs:Exists ("Generate":U) THEN 
            oTab = poToolbar:Ribbon:Tabs["Generate":U] . 
        ELSE DO:  
            oTab = poToolbar:Ribbon:Tabs:Add ("Generate":U) . 
            oTab:Caption = "Generate":U . 
        END.
        		
        oGroup = oTab:Groups:Add ("plugin_RestService":U) .
        oGroup:Caption = "REST Adapter"{&TRAN} .
  
        oGroup:Tools:AddTool ("RestService_Plugin_GenerateIncludeFiles":U):InstanceProps:PreferredSizeOnRibbon = RibbonToolSize:Large .
        oGroup:Tools:AddTool ("RestService_Plugin_GenerateServiceInterface":U):InstanceProps:PreferredSizeOnRibbon = RibbonToolSize:Large .

        poToolbar:ToolClick:Subscribe (ToolClickHandler) .

	END METHOD .

    /*------------------------------------------------------------------------------
        Purpose: Handles the ToolClick event of the Business Entity Designer's 
                 UltraToolbarsManager                                                                         
        Notes:        
        @param sender The reference to the object that raised the event
        @param e The ToolClickEventArgs with the data for this event                                                          
    ------------------------------------------------------------------------------*/
    METHOD PROTECTED VOID ToolClickHandler (sender AS System.Object,
                                            e AS ToolClickEventArgs):
        
        CASE e:Tool:Key:
            WHEN "RestService_Plugin_GenerateIncludeFiles":U THEN 
                THIS-OBJECT:GenerateIncludeFiles (DATASET dsBusinessEntity) .
            WHEN "RestService_Plugin_GenerateServiceInterface":U THEN 
                THIS-OBJECT:GenerateServiceInterface (DATASET dsBusinessEntity) . 
        END.
        
        CATCH err AS Progress.Lang.Error :
            Consultingwerk.Util.ErrorHelper:ShowErrorMessage (err) .    
        END CATCH.
    END METHOD.

END CLASS.
