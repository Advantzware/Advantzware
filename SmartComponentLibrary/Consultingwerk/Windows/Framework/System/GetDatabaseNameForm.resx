<?xml version="1.0" encoding="utf-8" standalone="no"?><root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:xsd="http://www.w3.org/2001/XMLSchema" id="root">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace"/>
    <xsd:element msdata:IsDataSet="true" name="root">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element minOccurs="0" name="value" type="xsd:string"/>
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required"/>
              <xsd:attribute name="type" type="xsd:string"/>
              <xsd:attribute name="mimetype" type="xsd:string"/>
              <xsd:attribute ref="xml:space"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string"/>
              <xsd:attribute name="name" type="xsd:string"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element minOccurs="0" msdata:Ordinal="1" name="value" type="xsd:string"/>
                <xsd:element minOccurs="0" msdata:Ordinal="2" name="comment" type="xsd:string"/>
              </xsd:sequence>
              <xsd:attribute msdata:Ordinal="1" name="name" type="xsd:string" use="required"/>
              <xsd:attribute msdata:Ordinal="3" name="type" type="xsd:string"/>
              <xsd:attribute msdata:Ordinal="4" name="mimetype" type="xsd:string"/>
              <xsd:attribute ref="xml:space"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element minOccurs="0" msdata:Ordinal="1" name="value" type="xsd:string"/>
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required"/>
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"/>
  <data mimetype="application/x-microsoft.net.object.bytearray.base64" name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing">
    <value>
        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
</value>
  </data>
</root>