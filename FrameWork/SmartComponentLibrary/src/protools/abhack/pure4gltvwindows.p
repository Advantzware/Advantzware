/*------------------------------------------------------------------------------
         pure4gltvwindows.p   20-AUG-2007  by slacroix   
  Purpose:  copy of windows.p with private new GLOBAL shared VARIABLE to remain 
  independent from Dynamics issues that do not use a RETURN PARAMETER 
  Parameters:  <none>
  Notes:       
------------------------------------------------------------------------------*/
/* ====================================================================
   file      windows.p
   by        Jurjen Dijkstra, 1997 - 1999
             mailto:jurjen@global-shared.com
             http://www.global-shared.com
   language  Progress 8.2A
   purpose   declarations for windows API procedures
   ==================================================================== */

&GLOB DONTDEFINE-HPAPI
{protools/abhack/pure4gltvwindows.i}

PROCEDURE AdjustWindowRect EXTERNAL {&USER} :
  DEFINE INPUT  PARAMETER lpRect       AS LONG. /* get-pointer-value(memptr) */
  DEFINE INPUT  PARAMETER dwstyle      AS LONG.
  DEFINE INPUT  PARAMETER bMenu        AS {&BOOL}.
  DEFINE RETURN PARAMETER ReturnValue  AS {&BOOL}.
END PROCEDURE.

PROCEDURE ClientToScreen EXTERNAL {&USER} :
  DEFINE INPUT  PARAMETER win-handle  AS {&HWND}.
  DEFINE INPUT  PARAMETER lppoint     AS LONG.  /* get-pointer-value(memptr) */
  DEFINE RETURN PARAMETER ReturnValue AS {&BOOL}.
END PROCEDURE.

PROCEDURE CreateProcess{&A} EXTERNAL {&KERNEL} :
  DEFINE INPUT  PARAMETER lpApplicationName    AS LONG. /* NULL */
  DEFINE INPUT  PARAMETER lpCommandline        AS CHAR.
  DEFINE INPUT  PARAMETER lpProcessAttributes  AS LONG.
  DEFINE INPUT  PARAMETER lpThreadAttributes   AS LONG.
  DEFINE INPUT  PARAMETER bInheritHandles      AS {&BOOL}.
  DEFINE INPUT  PARAMETER dCreationFlags       AS LONG.
  DEFINE INPUT  PARAMETER lpEnvironment        AS LONG.
  DEFINE INPUT  PARAMETER lpCurrentDirectory   AS LONG.
  DEFINE INPUT  PARAMETER lpStartupInfo        AS LONG.
  DEFINE INPUT  PARAMETER lpProcessInformation AS LONG.
  DEFINE RETURN PARAMETER bResult              AS {&BOOL}.
END PROCEDURE.

PROCEDURE CreateWindowExA EXTERNAL {&USER} :
  DEFINE INPUT  PARAMETER dwExStyle    AS LONG.
  DEFINE INPUT  PARAMETER lpClassName  AS CHAR.
  DEFINE INPUT  PARAMETER lpWindowName AS CHAR.
  DEFINE INPUT  PARAMETER dwStyle      AS LONG.
  DEFINE INPUT  PARAMETER x            AS LONG.
  DEFINE INPUT  PARAMETER y            AS LONG.
  DEFINE INPUT  PARAMETER nWidth       AS LONG.
  DEFINE INPUT  PARAMETER nHeight      AS LONG.
  DEFINE INPUT  PARAMETER hWndParent   AS LONG.
  DEFINE INPUT  PARAMETER hMenu        AS LONG.
  DEFINE INPUT  PARAMETER hInstance    AS LONG.
  DEFINE INPUT  PARAMETER lpParam      AS LONG.
  DEFINE RETURN PARAMETER hwndCreated  AS LONG.
END PROCEDURE.

PROCEDURE CloseHandle EXTERNAL {&KERNEL} :
  DEFINE INPUT  PARAMETER hObject     AS LONG.
  DEFINE RETURN PARAMETER ReturnValue AS LONG.
END PROCEDURE.

PROCEDURE ClosePrinter EXTERNAL {&WINSPOOL} :
  DEFINE INPUT  PARAMETER VH_PRINTER_HANDLE AS LONG.
  DEFINE RETURN PARAMETER VI_RETURN_VALUE   AS {&BOOL}.
END PROCEDURE.

PROCEDURE CreateMutexA EXTERNAL {&KERNEL} :
  DEFINE INPUT  PARAMETER lpMutexAttributes AS LONG.
  DEFINE INPUT  PARAMETER bInitialOwner     AS LONG.
  DEFINE INPUT  PARAMETER lpName            AS CHAR.
  DEFINE RETURN PARAMETER hMutex            AS LONG.
END PROCEDURE.

PROCEDURE DeleteMenu EXTERNAL {&USER} :
  DEFINE INPUT  PARAMETER hMenu       AS {&INT}.
  DEFINE INPUT  PARAMETER uPosition   AS {&INT}.
  DEFINE INPUT  PARAMETER uFlags      AS {&INT}.
  DEFINE RETURN PARAMETER ReturnValue AS {&BOOL}.
END PROCEDURE.

PROCEDURE DrawMenuBar EXTERNAL {&USER} :
  DEFINE INPUT  PARAMETER hMenu      AS  LONG.
  DEFINE RETURN PARAMETER iRetCode   AS  LONG.
END PROCEDURE.

PROCEDURE Ellipse EXTERNAL {&GDI} :
  DEFINE INPUT  PARAMETER hdc         AS LONG.
  DEFINE INPUT  PARAMETER nLeftRect   AS LONG.
  DEFINE INPUT  PARAMETER nTopRect    AS LONG.
  DEFINE INPUT  PARAMETER nRightRect  AS LONG.
  DEFINE INPUT  PARAMETER nBottomRect AS LONG.
  DEFINE RETURN PARAMETER ReturnValue AS {&BOOL}.
END PROCEDURE.

PROCEDURE EndDoc EXTERNAL {&GDI} :
  DEFINE INPUT  PARAMETER  hdc AS LONG.
  DEFINE RETURN PARAMETER uRet AS LONG.
END PROCEDURE.

PROCEDURE EndPage EXTERNAL {&GDI} :
  DEFINE INPUT  PARAMETER hdc  AS LONG.
  DEFINE RETURN PARAMETER uRet AS LONG.
END PROCEDURE.

PROCEDURE EnumPrinters{&A} EXTERNAL {&WINSPOOL} :
  DEFINE INPUT  PARAMETER Flags        AS LONG.  /* Local, shared, network,etc.. */
  DEFINE INPUT  PARAMETER Name         AS CHAR.  /* LEAVE AS NULL ie.: 0 */
  DEFINE INPUT  PARAMETER Level        AS LONG.  /* Type of info to return: 1,2,5 on W95 */
  DEFINE INPUT  PARAMETER pPrinterEnum AS LONG.  /* points to PRINTER_INFO_n structures */
  DEFINE INPUT  PARAMETER cbBuf        AS LONG.  /* Tells function the size of pPrinterEnum */
  DEFINE OUTPUT PARAMETER pcbNeeded    AS LONG.  /* Number of bytes copied or required */
  DEFINE OUTPUT PARAMETER pcReturned   AS LONG.  /* Number of PRINTER_INFO_n   structures returned */
  DEFINE RETURN PARAMETER RetValue     AS LONG.  /* A Bool value = zero if failure */
END PROCEDURE.

PROCEDURE FindExecutable{&A} EXTERNAL {&SHELL} :
  DEFINE INPUT        PARAMETER lpFile      AS CHAR.
  DEFINE INPUT        PARAMETER lpDirectory AS CHAR.
  DEFINE INPUT-OUTPUT PARAMETER lpResult    AS CHAR.
  DEFINE RETURN       PARAMETER hInstance   AS {&INT}.
END PROCEDURE.

PROCEDURE FlashWindow EXTERNAL {&USER} :
  DEFINE INPUT  PARAMETER hwnd        AS {&HWND}.
  DEFINE INPUT  PARAMETER bInvert     AS {&BOOL}.
  DEFINE RETURN PARAMETER ReturnValue AS {&BOOL}.
END PROCEDURE.

PROCEDURE FormatMessage{&A} EXTERNAL {&KERNEL} :
  DEFINE INPUT  PARAMETER dwFlags      AS LONG.
  DEFINE INPUT  PARAMETER lpSource     AS LONG.
  DEFINE INPUT  PARAMETER dwMessageID  AS LONG.
  DEFINE INPUT  PARAMETER dwLanguageID AS LONG.
  DEFINE OUTPUT PARAMETER lpBuffer     AS CHAR.
  DEFINE INPUT  PARAMETER nSize        AS LONG.
  DEFINE INPUT  PARAMETER lpArguments  AS LONG.
  DEFINE RETURN PARAMETER nTextLength  AS LONG.
END PROCEDURE.

PROCEDURE FreeLibrary EXTERNAL {&KERNEL} :
  DEFINE INPUT  PARAMETER hproc       AS {&HINSTANCE}.
  DEFINE RETURN PARAMETER ReturnValue AS {&BOOL}.
END PROCEDURE.

PROCEDURE GetClientRect EXTERNAL {&USER} :
  DEFINE INPUT  PARAMETER hwnd        AS {&HWND}.
  DEFINE INPUT  PARAMETER lpRect      AS LONG. /* get-pointer-value(memptr) */
  DEFINE RETURN PARAMETER ReturnValue AS {&BOOL}.
END PROCEDURE.

PROCEDURE GetCursorPos EXTERNAL {&USER} :
  DEFINE INPUT  PARAMETER  lpPoint     AS LONG. /* memptr */
  DEFINE RETURN PARAMETER  ReturnValue AS LONG.
END PROCEDURE.

PROCEDURE GetDateFormatA EXTERNAL {&KERNEL} :
  DEFINE INPUT        PARAMETER Locale      AS LONG.
  DEFINE INPUT        PARAMETER dwFlags     AS LONG.
  DEFINE INPUT        PARAMETER lpTime      AS LONG.
  DEFINE INPUT        PARAMETER lpFormat    AS LONG.
  DEFINE INPUT-OUTPUT PARAMETER lpDateStr   AS CHAR.
  DEFINE INPUT        PARAMETER cchDate     AS LONG.
  DEFINE RETURN       PARAMETER cchReturned AS LONG.
END PROCEDURE.

PROCEDURE GetDC EXTERNAL {&USER} :
  DEFINE INPUT  PARAMETER hwnd AS {&HWND}.
  DEFINE RETURN PARAMETER hdc  AS {&INT}.
END PROCEDURE.

PROCEDURE GetDeviceCaps EXTERNAL {&GDI} :
  DEFINE INPUT  PARAMETER  hdc        AS {&INT}.
  DEFINE INPUT  PARAMETER  nIndex     AS {&INT}.
  DEFINE RETURN PARAMETER  capability AS {&INT}.
END PROCEDURE.

PROCEDURE GetLastError EXTERNAL {&KERNEL} :
  DEFINE RETURN PARAMETER dwMessageID AS {&INT}.
END PROCEDURE.

PROCEDURE GetLocaleInfoA EXTERNAL {&KERNEL} :
  DEFINE INPUT        PARAMETER Locale      AS LONG.
  DEFINE INPUT        PARAMETER dwFlags     AS LONG.
  DEFINE INPUT-OUTPUT PARAMETER lpLCData    AS CHAR.
  DEFINE INPUT        PARAMETER cchData     AS LONG.
  DEFINE RETURN       PARAMETER cchReturned AS LONG.
END PROCEDURE.

PROCEDURE GetMenu EXTERNAL {&USER} :
  DEFINE INPUT  PARAMETER ProgHwnd AS LONG.
  DEFINE RETURN PARAMETER MenuHnd  AS LONG.
END PROCEDURE.

PROCEDURE GetMenuItemCount EXTERNAL {&USER} :
  DEFINE INPUT  PARAMETER hMenu    AS  LONG.
  DEFINE RETURN PARAMETER iCount   AS  LONG.
END PROCEDURE.

PROCEDURE GetModuleFileName{&A} EXTERNAL {&KERNEL} :
  DEFINE INPUT  PARAMETER hInst        AS {&INT}.
  DEFINE OUTPUT PARAMETER lpszFileName AS CHAR.
  DEFINE INPUT  PARAMETER cbFileName   AS {&INT}.
  DEFINE RETURN PARAMETER bSuccess     AS {&INT}.
END PROCEDURE.

PROCEDURE GetParent EXTERNAL {&USER} :
  DEFINE INPUT  PARAMETER thishwnd   AS {&HWND}.
  DEFINE RETURN PARAMETER parenthwnd AS {&HWND}.
END PROCEDURE.

PROCEDURE GetPrivateProfileString{&A} EXTERNAL {&KERNEL} :
  DEFINE INPUT  PARAMETER lpszSection     AS CHAR.
  DEFINE INPUT  PARAMETER lpszEntry       AS LONG.
  DEFINE INPUT  PARAMETER lpszDefault     AS CHAR.
  DEFINE INPUT  PARAMETER memBuffer       AS LONG. /* memptr */
  DEFINE INPUT  PARAMETER cbReturnBuffer  AS {&INT}.
  DEFINE INPUT  PARAMETER lpszFilename    AS CHAR.
  DEFINE RETURN PARAMETER cbReturnedChars AS {&INT}.
END PROCEDURE.

PROCEDURE GetProfileString{&A} EXTERNAL {&KERNEL} :
  DEFINE INPUT  PARAMETER lpAppName        AS CHAR.
  DEFINE INPUT  PARAMETER lpKeyName        AS CHAR.
  DEFINE INPUT  PARAMETER lpDefault        AS CHAR.
  DEFINE OUTPUT PARAMETER lpReturnedString AS CHAR.
  DEFINE INPUT  PARAMETER nSize            AS {&INT}.
  DEFINE RETURN PARAMETER nReturnedChars   AS {&INT}.
END PROCEDURE.

PROCEDURE GetSubMenu EXTERNAL {&USER} :
  DEFINE INPUT  PARAMETER MenuHnd    AS LONG.
  DEFINE INPUT  PARAMETER nPos       AS LONG.
  DEFINE RETURN PARAMETER SubMenuHnd AS LONG.
END PROCEDURE.

PROCEDURE GetSysColor EXTERNAL {&USER} :
  DEFINE INPUT  PARAMETER nIndex     AS LONG.
  DEFINE RETURN PARAMETER dwRgbValue AS LONG.
END PROCEDURE.

PROCEDURE GetSystemMenu EXTERNAL {&USER} :
  DEFINE INPUT  PARAMETER hwnd    AS {&HWND}.
  DEFINE INPUT  PARAMETER bRevert AS {&BOOL}.
  DEFINE RETURN PARAMETER hMenu   AS {&INT}.
END PROCEDURE.

PROCEDURE GetTimeFormatA EXTERNAL {&KERNEL} :
  DEFINE INPUT        PARAMETER Locale      AS LONG.
  DEFINE INPUT        PARAMETER dwFlags     AS LONG.
  DEFINE INPUT        PARAMETER lpTime      AS LONG.
  DEFINE INPUT        PARAMETER lpFormat    AS LONG.
  DEFINE INPUT-OUTPUT PARAMETER lpTimeStr   AS CHAR.
  DEFINE INPUT        PARAMETER cchTime     AS LONG.
  DEFINE RETURN       PARAMETER cchReturned AS LONG.
END PROCEDURE.

&IF "{&OPSYS}"="WIN32" &THEN
  PROCEDURE GetUserName{&A} EXTERNAL {&ADVAPI} :
    DEFINE INPUT-OUTPUT PARAMETER lpBuffer    AS CHAR.
    DEFINE INPUT-OUTPUT PARAMETER nSize       AS LONG.
    DEFINE RETURN       PARAMETER ReturnValue AS {&BOOL}.
  END PROCEDURE.
&ELSE
  /* There is no 16-bit equivalent for this function.
     Create a stub OR create a wrapper to a thunked call.
     This would be a stub: */
  PROCEDURE GetUserName{&A} :
    DEFINE INPUT-OUTPUT PARAMETER lpBuffer    AS CHAR.
    DEFINE INPUT-OUTPUT PARAMETER nSize       AS INTEGER.
    DEFINE OUTPUT       PARAMETER ReturnValue AS INTEGER.
    ASSIGN lpBuffer = ""
           ReturnValue = 1.
  END PROCEDURE.
&ENDIF

PROCEDURE GetVersionExA EXTERNAL {&KERNEL} :
  DEFINE INPUT  PARAMETER lpVersionInfo AS LONG.
  DEFINE RETURN PARAMETER ReturnValue   AS {&BOOL}.
END PROCEDURE.

PROCEDURE GetWindowLong{&A} EXTERNAL {&USER} :
  DEFINE INPUT  PARAMETER phwnd       AS {&HWND}.
  DEFINE INPUT  PARAMETER cindex      AS {&INT}.
  DEFINE RETURN PARAMETER currentlong AS LONG.
END PROCEDURE.

PROCEDURE GetWindowRect EXTERNAL {&USER} :
  DEFINE INPUT  PARAMETER hwnd        AS {&HWND}.
  DEFINE INPUT  PARAMETER lpRect      AS LONG. /* get-pointer-value(memptr) */
  DEFINE RETURN PARAMETER ReturnValue AS {&BOOL}.
END PROCEDURE.

PROCEDURE GetWindowsDirectoryA EXTERNAL {&KERNEL} :
  DEFINE OUTPUT PARAMETER lpBuffer AS CHAR.
  DEFINE INPUT  PARAMETER uSize    AS LONG.
  DEFINE RETURN PARAMETER uRet     AS LONG.
END PROCEDURE.

PROCEDURE InvalidateRect EXTERNAL {&USER} :
  DEFINE INPUT  PARAMETER hWnd        AS {&HWND}.
  DEFINE INPUT  PARAMETER lpRect      AS {&INT}.
  DEFINE INPUT  PARAMETER bErase      AS {&BOOL}.
  DEFINE RETURN PARAMETER ReturnValue AS {&BOOL}.
END PROCEDURE.

PROCEDURE LoadLibrary{&A} EXTERNAL {&KERNEL} :
  DEFINE INPUT  PARAMETER libname AS CHAR.
  DEFINE RETURN PARAMETER hproc   AS {&HINSTANCE}.
END PROCEDURE.

PROCEDURE MAPISendMail EXTERNAL {&MAPI} :
  DEFINE INPUT  PARAMETER lhSession  AS LONG.
  DEFINE INPUT  PARAMETER ulUIParam  AS LONG.
  DEFINE INPUT  PARAMETER lpMessage  AS LONG. /* get-pointer-value(memptr) */
  DEFINE INPUT  PARAMETER flFlags    AS LONG.
  DEFINE INPUT  PARAMETER ulReserved AS LONG.
  DEFINE RETURN PARAMETER wretcode   AS {&INT}.
END PROCEDURE.

PROCEDURE mciGetErrorString{&A} EXTERNAL {&MMEDIA} :
  DEFINE INPUT  PARAMETER mciError       AS {&INT}.
  DEFINE OUTPUT PARAMETER lpszErrorText  AS CHAR.
  DEFINE INPUT  PARAMETER cchErrorText   AS {&INT}.
  DEFINE RETURN PARAMETER ReturnValue    AS {&BOOL}.
END PROCEDURE.

PROCEDURE mciSendCommand{&A} EXTERNAL {&MMEDIA} :
  DEFINE INPUT  PARAMETER IDDevice   AS {&INT}.
  DEFINE INPUT  PARAMETER uMsg       AS {&INT}.
  DEFINE INPUT  PARAMETER fdwCommand AS {&INT}.
  DEFINE INPUT  PARAMETER dwParam    AS LONG.
  DEFINE RETURN PARAMETER mciError   AS {&INT}.
END PROCEDURE.

PROCEDURE OpenPrinter{&A} EXTERNAL {&WINSPOOL} :
  DEFINE INPUT  PARAMETER PC_PRINTER_NAME   AS CHAR.
  DEFINE INPUT  PARAMETER VM_PRINTER_HANDLE AS LONG.
  DEFINE INPUT  PARAMETER VM_DEFAULTS       AS LONG.
  DEFINE RETURN PARAMETER VI_RETURN_VALUE   AS {&BOOL}.
END PROCEDURE.

PROCEDURE PostMessage{&A} EXTERNAL {&USER} :
  DEFINE INPUT  PARAMETER hwnd        AS {&HWND}.
  DEFINE INPUT  PARAMETER umsg        AS {&INT}.
  DEFINE INPUT  PARAMETER wparam      AS {&INT}.
  DEFINE INPUT  PARAMETER lparam      AS LONG.
  DEFINE RETURN PARAMETER ReturnValue AS {&BOOL}.
END PROCEDURE.

PROCEDURE PrinterProperties EXTERNAL {&WINSPOOL} :
  DEFINE INPUT  PARAMETER VH_PARENT         AS LONG.
  DEFINE INPUT  PARAMETER VH_PRINTER_HANDLE AS LONG.
  DEFINE RETURN PARAMETER VI_RETURN_VALUE   AS {&BOOL}.
END PROCEDURE.

PROCEDURE RegOpenKeyA EXTERNAL {&ADVAPI} :
  DEFINE INPUT  PARAMETER hkey       AS LONG.
  DEFINE INPUT  PARAMETER lpszSubKey AS CHAR.
  DEFINE OUTPUT PARAMETER phkResult  AS LONG.
  DEFINE RETURN PARAMETER lpResult   AS LONG.
END PROCEDURE.

PROCEDURE RegCloseKey EXTERNAL {&ADVAPI} :
  DEFINE INPUT  PARAMETER hkey     AS LONG.
  DEFINE RETURN PARAMETER lpresult AS LONG.
END PROCEDURE.

PROCEDURE RegEnumKeyA EXTERNAL {&ADVAPI} :
  DEFINE INPUT  PARAMETER hKey        AS LONG.
  DEFINE INPUT  PARAMETER iSubKey     AS LONG.
  DEFINE OUTPUT PARAMETER lpszName    AS CHAR.
  DEFINE INPUT  PARAMETER cchName     AS LONG.
  DEFINE RETURN PARAMETER lpresult    AS LONG.
END PROCEDURE.

PROCEDURE RegQueryValueExA EXTERNAL {&ADVAPI} :
  DEFINE INPUT        PARAMETER hkey         AS LONG.
  DEFINE INPUT        PARAMETER lpValueName  AS CHAR.
  DEFINE INPUT        PARAMETER lpdwReserved AS LONG.
  DEFINE OUTPUT       PARAMETER lpdwType     AS LONG.
  DEFINE INPUT        PARAMETER lpbData      AS LONG. /* memptr */
  DEFINE INPUT-OUTPUT PARAMETER lpcbData     AS LONG.
  DEFINE RETURN       PARAMETER lpresult     AS LONG.
END PROCEDURE.

PROCEDURE RegSetValueExA EXTERNAL {&ADVAPI} :
  DEFINE INPUT  PARAMETER hkey         AS LONG.
  DEFINE INPUT  PARAMETER lpValueName  AS CHAR.
  DEFINE INPUT  PARAMETER Reserved     AS LONG.
  DEFINE INPUT  PARAMETER dwType       AS LONG.
  DEFINE INPUT  PARAMETER lpData       AS LONG. /* memptr */
  DEFINE INPUT  PARAMETER cbData       AS LONG.
  DEFINE RETURN PARAMETER lpresult     AS LONG.
END PROCEDURE.

PROCEDURE ReleaseDC EXTERNAL {&USER} :
  DEFINE INPUT  PARAMETER hwnd AS {&HWND}.
  DEFINE INPUT  PARAMETER hdc  AS {&INT}.
  DEFINE RETURN PARAMETER ok   AS {&INT}.
END PROCEDURE.

PROCEDURE RemoveMenu EXTERNAL {&USER} :
  DEFINE INPUT  PARAMETER hMenu      AS  LONG.
  DEFINE INPUT  PARAMETER nPosition  AS  LONG.
  DEFINE INPUT  PARAMETER wFlags     AS  LONG.
  DEFINE RETURN PARAMETER iRetCode   AS  LONG.
END PROCEDURE.

PROCEDURE ScreenToClient EXTERNAL {&USER} :
  DEFINE INPUT  PARAMETER hWnd        AS LONG.
  DEFINE INPUT  PARAMETER lpPoint     AS LONG. /* memptr */
  DEFINE RETURN PARAMETER ReturnValue AS LONG.
END PROCEDURE.

PROCEDURE SendMessage{&A} EXTERNAL {&USER} :
  DEFINE INPUT  PARAMETER hwnd        AS {&HWND}.
  DEFINE INPUT  PARAMETER umsg        AS {&INT}.
  DEFINE INPUT  PARAMETER wparam      AS {&INT}.
  DEFINE INPUT  PARAMETER lparam      AS LONG.
  DEFINE RETURN PARAMETER ReturnValue AS LONG.
END PROCEDURE.

PROCEDURE SetCursorPos EXTERNAL {&USER} :
  DEFINE INPUT  PARAMETER x-pos       AS {&INT}.
  DEFINE INPUT  PARAMETER y-pos       AS {&INT}.
  DEFINE RETURN PARAMETER ReturnValue AS {&BOOL}.
END PROCEDURE.

PROCEDURE SetParent EXTERNAL {&USER} :
  DEFINE INPUT  PARAMETER  hwndChild     AS {&HWND}.
  DEFINE INPUT  PARAMETER  hwndNewParent AS {&HWND}.
  DEFINE RETURN PARAMETER hwndOldParent  AS {&HWND}.
END PROCEDURE.

PROCEDURE SetSysColors EXTERNAL {&USER} :
  DEFINE INPUT  PARAMETER cDspElements   AS LONG.
  DEFINE INPUT  PARAMETER lpnDspElements AS LONG.
  DEFINE INPUT  PARAMETER lpdwRgbValues  AS LONG.
  DEFINE RETURN PARAMETER ReturnValue    AS {&BOOL}.
END PROCEDURE.

PROCEDURE SetWindowContextHelpId EXTERNAL {&USER} :
  DEFINE INPUT  PARAMETER hwnd        AS {&HWND}.
  DEFINE INPUT  PARAMETER ContextID   AS {&INT}.
  DEFINE RETURN PARAMETER ReturnValue AS {&BOOL}.
END PROCEDURE.

PROCEDURE SetWindowLong{&A} EXTERNAL {&USER} :
  DEFINE INPUT  PARAMETER phwnd   AS {&HWND}.
  DEFINE INPUT  PARAMETER cindex  AS {&INT}.
  DEFINE INPUT  PARAMETER newlong AS LONG.
  DEFINE RETURN PARAMETER oldlong AS LONG.
END PROCEDURE.

PROCEDURE SetWindowPos EXTERNAL {&USER} :
  DEFINE INPUT  PARAMETER hwnd            AS {&HWND}.
  DEFINE INPUT  PARAMETER hwndInsertAfter AS {&HWND}.
  DEFINE INPUT  PARAMETER x               AS {&INT}.
  DEFINE INPUT  PARAMETER y               AS {&INT}.
  DEFINE INPUT  PARAMETER cx              AS {&INT}.
  DEFINE INPUT  PARAMETER cy              AS {&INT}.
  DEFINE INPUT  PARAMETER fuFlags         AS LONG.
  DEFINE RETURN PARAMETER ReturnValue     AS {&BOOL}.
END PROCEDURE.

PROCEDURE SHBrowseForFolder EXTERNAL {&SHELL} :
  DEFINE INPUT  PARAMETER  lpbi         AS LONG.
  DEFINE RETURN PARAMETER  lpItemIDList AS LONG.
END PROCEDURE.

PROCEDURE SHGetPathFromIDList EXTERNAL {&SHELL} :
  DEFINE INPUT  PARAMETER  lpItemIDList AS LONG.
  DEFINE OUTPUT PARAMETER  pszPath      AS CHAR.
  DEFINE RETURN PARAMETER  ReturnValue  AS {&BOOL}.
END PROCEDURE.

PROCEDURE ShellExecute{&A} EXTERNAL {&SHELL} :
  DEFINE INPUT  PARAMETER hwnd          AS {&HWND}.
  DEFINE INPUT  PARAMETER lpOperation   AS CHAR.
  DEFINE INPUT  PARAMETER lpFile        AS CHAR.
  DEFINE INPUT  PARAMETER lpParameters  AS CHAR.
  DEFINE INPUT  PARAMETER lpDirectory   AS CHAR.
  DEFINE INPUT  PARAMETER nShowCmd      AS {&INT}.
  DEFINE RETURN PARAMETER hInstance     AS {&INT}.
END PROCEDURE.

PROCEDURE ShellExecuteExA EXTERNAL {&SHELL} :
  DEFINE INPUT  PARAMETER lpExecInfo  AS LONG.
  DEFINE RETURN PARAMETER ReturnValue AS {&BOOL}.
END PROCEDURE.

PROCEDURE ShowScrollBar EXTERNAL {&USER} :
  DEFINE INPUT  PARAMETER hWnd        AS {&HWND}.
  DEFINE INPUT  PARAMETER fnBar       AS {&INT}.
  DEFINE INPUT  PARAMETER fShow       AS {&BOOL}.
  DEFINE RETURN PARAMETER ReturnValue AS {&BOOL}.
END PROCEDURE.

PROCEDURE ShowWindow EXTERNAL {&USER} :
  DEFINE INPUT  PARAMETER hWnd        AS {&HWND}.
  DEFINE INPUT  PARAMETER nCmdShow    AS {&INT}.
  DEFINE RETURN PARAMETER ReturnValue AS {&BOOL}.
END PROCEDURE.

PROCEDURE StartDoc{&A} EXTERNAL {&GDI} :
  DEFINE INPUT  PARAMETER hdc   AS LONG.
  DEFINE INPUT  PARAMETER lpdi  AS LONG.
  DEFINE RETURN PARAMETER JobId AS LONG.
END PROCEDURE.

PROCEDURE StartPage EXTERNAL {&GDI} :
  DEFINE INPUT  PARAMETER hdc  AS LONG.
  DEFINE RETURN PARAMETER uRet AS LONG.
END PROCEDURE.

PROCEDURE SystemParametersInfo{&A} EXTERNAL {&USER} :
  DEFINE INPUT  PARAMETER uiAction    AS {&INT}.
  DEFINE INPUT  PARAMETER uiParam     AS {&INT}.
  DEFINE INPUT  PARAMETER pvParam     AS LONG.  /* get-pointer-value(memptr) */
  DEFINE INPUT  PARAMETER fWinIni     AS {&INT}.
  DEFINE RETURN PARAMETER ReturnValue AS {&BOOL}.
END PROCEDURE.

PROCEDURE TextOut{&A} EXTERNAL {&GDI} :
  DEFINE INPUT  PARAMETER hdc      AS LONG.
  DEFINE INPUT  PARAMETER nXstart  AS LONG.
  DEFINE INPUT  PARAMETER nYstart  AS LONG.
  DEFINE INPUT  PARAMETER lpString AS CHAR.
  DEFINE INPUT  PARAMETER cbString AS LONG.
  DEFINE RETURN PARAMETER uRet     AS LONG.
END PROCEDURE.

PROCEDURE WaitForSingleObject EXTERNAL {&KERNEL} :
  DEFINE INPUT  PARAMETER hObject     AS {&INT}.
  DEFINE INPUT  PARAMETER dwTimeout   AS LONG.
  DEFINE RETURN PARAMETER ReturnValue AS LONG.
END PROCEDURE.

PROCEDURE WinExec EXTERNAL {&KERNEL} :
  DEFINE INPUT  PARAMETER lpszCmdLine AS CHAR.
  DEFINE INPUT  PARAMETER fuCmdShow   AS {&INT}.
  DEFINE RETURN PARAMETER nTask       AS {&INT}.
END PROCEDURE.

PROCEDURE WinHelp{&A} EXTERNAL {&USER} :
  DEFINE INPUT  PARAMETER hwndmain    AS {&HWND}.
  DEFINE INPUT  PARAMETER lpszHelp    AS CHAR.
  DEFINE INPUT  PARAMETER uCommand    AS {&INT}.
  DEFINE INPUT  PARAMETER dwData      AS LONG.
  DEFINE RETURN PARAMETER ReturnValue AS {&BOOL}.
END PROCEDURE.

PROCEDURE WritePrivateProfileString{&A} EXTERNAL {&KERNEL} :
  DEFINE INPUT  PARAMETER lpszSection  AS CHAR.
  DEFINE INPUT  PARAMETER lpszEntry    AS CHAR.
  DEFINE INPUT  PARAMETER lpszString   AS CHAR.
  DEFINE INPUT  PARAMETER lpszFilename AS CHAR.
  DEFINE RETURN PARAMETER lpszValue    AS {&INT}.
END PROCEDURE.

PROCEDURE Sleep EXTERNAL {&KERNEL} :
  DEFINE INPUT PARAMETER dwMilliseconds AS LONG.
END PROCEDURE.

PROCEDURE OpenProcess EXTERNAL {&KERNEL} :
  DEFINE INPUT  PARAMETER dwDesiredAccess AS LONG.
  DEFINE INPUT  PARAMETER bInheritHandle  AS LONG.
  DEFINE INPUT  PARAMETER dwProcessId     AS LONG.
  DEFINE RETURN PARAMETER hProcess        AS LONG.
END PROCEDURE.

PROCEDURE GetExitCodeProcess EXTERNAL {&KERNEL} :
  DEFINE INPUT  PARAMETER hProcess    AS LONG.
  DEFINE OUTPUT PARAMETER ExitCode    AS LONG.
  DEFINE RETURN PARAMETER ReturnValue AS LONG.
END PROCEDURE.

PROCEDURE WaitForInputIdle EXTERNAL {&USER} :
  DEFINE INPUT  PARAMETER hProcess        AS LONG.
  DEFINE INPUT  PARAMETER dwMilliseconds  AS LONG.
  DEFINE RETURN PARAMETER ReturnValue     AS LONG.
END PROCEDURE.

PROCEDURE TerminateProcess EXTERNAL {&KERNEL} :
  DEFINE INPUT  PARAMETER hProcess    AS LONG.
  DEFINE INPUT  PARAMETER uExitCode   AS LONG.
  DEFINE RETURN PARAMETER ReturnValue AS LONG.
END PROCEDURE.


