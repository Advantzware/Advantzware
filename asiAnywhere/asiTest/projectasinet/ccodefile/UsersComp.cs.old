using System;
using System.Data;
using System.Configuration;
using System.Web;
using System.Web.Security;
using System.Web.UI;
using System.Web.UI.WebControls;
using System.Web.UI.WebControls.WebParts;
using System.Web.UI.HtmlControls;
using System.Web.Caching;
using ASINET;
using ASIDataNS;

using Progress.Open4GL.Proxy;

/// <summary>
/// Summary description for UserComp
/// </summary>
[System.ComponentModel.DataObject]
public class UserComp : AppServerConnect.AppServer
{
	public UserComp()
	{
		//
		// TODO: Add constructor logic here
		//
	}

    [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
    public dsUserCompDataSet SelectUserComp(string prmAction)
    {
        
        dsUserCompDataSet dsUserComp = new dsUserCompDataSet();
        dsUserComp = null;
        AppServerConnect();
        aoObject.UsersComp_c(prmAction, "",  ref dsUserComp);
        AppServerDisconnect();
        
        return dsUserComp;
    }

    [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, false)]
    public dsUserCompDataSet SelectUserComp(string prmAction, string prmItem )
    {
        
        dsUserCompDataSet dsUserComp = new dsUserCompDataSet();
        dsUserComp = null;
        
        AppServerConnect();
        aoObject.UsersComp_c(prmAction, prmItem,  ref dsUserComp);
        AppServerDisconnect();
        HttpContext.Current.Cache.Insert("CompData", dsUserComp, null, DateTime.Now.AddMinutes(10), System.Web.Caching.Cache.NoSlidingExpiration);
        return dsUserComp;
    }

    [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Update, true)]
    public dsUserCompDataSet UpdateUserComp(CompData itData)
    {
        dsUserCompDataSet dsUserCompChange = new dsUserCompDataSet();
        dsUserCompDataSet dsUserComp = new dsUserCompDataSet();
        dsUserComp = null;
        dsUserComp = (dsUserCompDataSet)HttpContext.Current.Cache.Get("CompData");
        
        dsUserComp.ttUserComp[0].company_default = itData.company_default;
        dsUserCompChange = (dsUserCompDataSet)dsUserComp.GetChanges();
        AppServerConnect();
        aoObject.UsersComp_c("Update", "",  ref dsUserComp);
        AppServerDisconnect();

        return dsUserComp;
    }

    [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Delete, true)]
    public dsUserCompDataSet DeleteUserComp(CompData itData)
    {
        dsUserCompDataSet dsUserCompChange = new dsUserCompDataSet();
        dsUserCompDataSet dsUserComp = new dsUserCompDataSet();
        dsUserComp = null;
        dsUserComp = (dsUserCompDataSet)HttpContext.Current.Cache.Get("CompData");
        dsUserComp.ttUserComp[0].Delete();
        dsUserCompChange = (dsUserCompDataSet)dsUserComp.GetChanges();
        AppServerConnect();
        aoObject.UsersComp_c("Delete", "",  ref dsUserCompChange);
        AppServerDisconnect();

        return dsUserComp;
    }

    [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, true)]
    public dsUserCompDataSet InsertUserComp(CompData itData)
    {
        dsUserCompDataSet dsUserComp = new dsUserCompDataSet();
        dsUserCompDataSet.ttUserCompRow dsUserCompRow;

        //dsUserComp = null;
        dsUserCompRow = dsUserComp.ttUserComp.NewttUserCompRow();
        dsUserCompRow.company = itData.company;
        dsUserCompRow.company_default = itData.company_default;
        dsUserComp.ttUserComp.AddttUserCompRow(dsUserCompRow);
        
        AppServerConnect();
        aoObject.UsersComp_c("Insert", "",  ref dsUserComp);
        AppServerDisconnect();

        return dsUserComp;
    }
}

public class CompData
{
        
    private string _company;
    private bool _company_default;
    
    public string company
    {
        get { return _company; }
        set { _company = value; }
    }
    
    public bool company_default
    {
        get { return _company_default; }
        set { _company_default = value; }
    }
public CompData()
    {
    }
}
