        1   /*******************************************************************************
        2    *******************************************************************************
        3    **                                                                           **
        4    **                                                                           **
        5    **  Copyright 2003-2012 Tom Bascom, Greenfield Technologies                  **
        6    **  http://www.greenfieldtech.com                                            **
        7    **                                                                           **
        8    **  ProTop is free software; you can redistribute it and/or modify it        **
        9    **  under the terms of the GNU General Public License (GPL) as published     **
       10    **  by the Free Software Foundation; either version 2 of the License, or     **
       11    **  at your option) any later version.                                       **
       12    **                                                                           **
       13    **  ProTop is distributed in the hope that it will be useful, but WITHOUT    **
       14    **  ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or    **
       15    **  FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License     **
       16    **  for more details.                                                        **
       17    **                                                                           **
       18    **  See TERMS.TXT for more information regarding the Terms and Conditions    **
       19    **  of use and alternative licensing options for this software.              **
       20    **                                                                           **
       21    **  A copy of the GPL is in GPL.TXT which was provided with this package.    **
       22    **                                                                           **
       23    **  See http://www.fsf.org for more information about the GPL.               **
       24    **                                                                           **
       25    **                                                                           **
       26    *******************************************************************************
       27    *******************************************************************************
       28    *
       29    * aiinfo.p
       30    *
       31    * ai ainfo
       32    *
       33    *
       34    * Author:
       35    *
       36    *      Tom Bascom, Greenfield Technologies
       37    *      http://www.greenfieldtech.com
       38    *      September 5, 2003
       39    *
       40    */
       41   
       42   
       43   /*******************************************************************************
       44    *******************************************************************************
       45    **                                                                           **
       46    **                                                                           **
       47    **  Copyright 2003-2006 Tom Bascom, Greenfield Technologies                  **
       48    **  http://www.greenfieldtech.com                                            **
       49    **                                                                           **
       50    **  ProTop is free software; you can redistribute it and/or modify it        **
       51    **  under the terms of the GNU General Public License (GPL) as published     **
       52    **  by the Free Software Foundation; either version 2 of the License, or     **
       53    **  at your option) any later version.                                       **
       54    **                                                                           **
       55    **  ProTop is distributed in the hope that it will be useful, but WITHOUT    **
       56    **  ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or    **
       57    **  FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License     **
       58    **  for more details.                                                        **
       59    **                                                                           **
       60    **  See TERMS.TXT for more information regarding the Terms and Conditions    **
       61    **  of use and alternative licensing options for this software.              **
       62    **                                                                           **
       63    **  A copy of the GPL is in GPL.TXT which was provided with this package.    **
       64    **                                                                           **
       65    **  See http://www.fsf.org for more information about the GPL.               **
       66    **                                                                           **
       67    **                                                                           **
       68    *******************************************************************************
       69    *******************************************************************************
       70    *
       71    * protop.i
       72    *
       73    * Header file for protop family of programs
       74    *
       75    *
       76    * Known Bugs & Issues:
       77    *
       78    *
       79    * To Do:
       80    *
       81    *
       82    * Author:
       83    *
       84    *      Tom Bascom, Greenfield Technologies
       85    *      http://www.greenfieldtech.com
       86    *      August 28, 2003
       87    *
       88    */
       89   
       90   &IF DECIMAL(SUBSTRING(PROVERSION,1,INDEX(PROVERSION,".") + 1)) >= 11.4 &THEN
       91   &global-define  FASTLOCK        true
       92   &ELSE
       93   &global-define  FASTLOCK        false
       94   &ENDIF
       95   
       96   &IF DECIMAL(SUBSTRING(PROVERSION,1,INDEX(PROVERSION,".") + 1)) >= 11.0 &THEN
       97   &global-define  OE11            "yes"
       98   &global-define  xDEBUGTT        false
       99   &ENDIF
      100   
      101   &IF DECIMAL(SUBSTRING(PROVERSION,1,INDEX(PROVERSION,".") + 1)) >= 10.2 AND PROVERSION >= "10.2B" &THEN
      102   &global-define  NOSERIALIZE     serialize-hidden
      103   &ENDIF
      104   
      105   &IF DECIMAL(SUBSTRING(PROVERSION,1,INDEX(PROVERSION,".") + 1)) >= 10.1 AND PROVERSION >= "10.1B" &THEN
      106   &global-define  BIGINT          int64
      107   &ELSE
      108   &global-define  BIGINT          decimal
      109   &ENDIF
      110   
      111   
      112   /* lib/v9.i
      113    *
      114    */
      115   
      116   &IF DECIMAL(SUBSTRING(PROVERSION,1,INDEX(PROVERSION,".") + 1)) < 10.0 &THEN
      117   &global-define  CPYLOB  "no"
      118   &global-define  NOW     substitute( "&1 &2", today, string( time, "hh:mm:ss" ))
      119   &global-define  LNGCR   character
      120   &global-define  DTZ     integer
      121   &global-define  BIGINT  decimal
      122   &ELSE
      123   &global-define  OE10    "yes"
      124   &global-define  NOW     now
      125   &global-define  LNGCR   longchar
      126   &global-define  DTZ     datetime-tz
      127   &global-define  BIGINT  int64
      128   &ENDIF
      129    
      130   
      131   /* use extended _connect fields: -client, -cache*
      132    */
      133   
      134   &IF DECIMAL(SUBSTRING(PROVERSION,1,INDEX(PROVERSION,".") + 1)) >= 10.1 AND PROVERSION >= "10.1C" &THEN
      135   &global-define  CONNECTX        "yes"
      136   &ELSE
      137   &global-define  CONNECTX        "no"
      138   &ENDIF
      139   
      140   define stream inStrm.
      141   
      142   define new global shared variable dbgMode as integer no-undo initial 1.
      143   
      144   /* The values for these are defined in etc/protop.cfg and set by lib/protop-cfg.p
      145    *
      146    * someday everyone will have OO and I will replace these with a gsv class
      147    * or something of that ilk
      148    *
      149    */
      150   
      151   define new global shared variable pt_shortname   as character no-undo.
      152   define new global shared variable pt_uniqName    as character no-undo.
      153   define new global shared variable pt_server      as character no-undo.
      154   define new global shared variable pt_resrcType   as character no-undo.
      155   
      156   define new global shared variable pt_tmpdir      as character no-undo initial "/tmp".
      157   define new global shared variable pt_logdir      as character no-undo initial "/tmp".
      158   define new global shared variable pt_rptdir      as character no-undo initial "/tmp".
      159   define new global shared variable pt_logname     as character no-undo initial "&5.&2.&3".
      160   define new global shared variable pt_mailcmd     as character no-undo initial 'mailx "-s &1" '.
      161   
      162   define new global shared variable pt_votrx       as integer   no-undo initial 1800.
      163   define new global shared variable pt_lktbllim    as integer   no-undo initial 0.
      164   define new global shared variable pt_bkupstale   as integer   no-undo initial 26.
      165   define new global shared variable pt_bogomips    as integer   no-undo initial 1000000.
      166   define new global shared variable pt_ioresp      as integer   no-undo initial 100.
      167   define new global shared variable pt_ioFileName  as character no-undo.
      168   define new global shared variable pt_dfCmd       as character no-undo.
      169   
      170   define new global shared variable pt_AICheckInterval   as integer no-undo initial 60.
      171   define new global shared variable pt_PICACheckInterval as integer no-undo initial 60.
      172   define new global shared variable pt_appsrvStuck       as integer no-undo initial 120.
      173   
      174   define new global shared variable pt_bibkupAlert as integer   no-undo.          /* alert on long bi backup phase                */
      175   define new global shared variable pt_bibkupAlarm as integer   no-undo.          /* alarm on long bi backup phase                */
      176   define new global shared variable pt_bibkupPage  as integer   no-undo.          /* page  on long bi backup phase                */
      177   
      178   define new global shared variable pt_bkupAlert   as integer   no-undo.          /* alert on long db backup                      */
      179   define new global shared variable pt_bkupAlarm   as integer   no-undo.          /* alarm on long db backup                      */
      180   define new global shared variable pt_bkupPage    as integer   no-undo.          /* page  on long db backup                      */
      181   
      182   define new global shared variable pt_userLock    as logical   no-undo.          /* enable _userLock  data?                      */
      183   define new global shared variable pt_doZippy     as logical   no-undo.          /* enable "user experience" (aka "zippy")?      */
      184   define new global shared variable pt_useRFUtil   as logical   no-undo.          /* use rfutil to gather after-imaging status?   */
      185   
      186   define new global shared variable pt_updAreaData as integer   no-undo.          /* how often should we report storage area xref details from dbanalys? */
      187   
      188   define new global shared variable pt_zoomTo      as integer no-undo.            /* new zoomed monInt                            */
      189   
      190   define new global shared variable ptDBName     as character no-undo.                    /* the db logical name          */
      191   define new global shared variable rowLimit     as integer   no-undo initial 100.        /* 50?                          */
      192   
      193   /* do-sumSample() manipulates these -- ugly, ugly, ugly... (obsolete?)
      194    * 
      195    */
      196   
      197   define new global shared variable stime as integer no-undo.                     /* start time                           */
      198   define new global shared variable ltime as integer no-undo.                     /* last time                            */
      199   define new global shared variable xtime as integer no-undo.                     /* total time                           */
      200   define new global shared variable itime as integer no-undo.                     /* iteration time                       */
      201   
      202   define new global shared variable chkp-base   as integer no-undo initial ?.     /* cover for the lack of a VST field    */
      203   
      204                                                                                   /* corresponding to base checkpoint#    */
      205   /** Global Shared Temp Table Definitions
      206    **
      207    ** Yup, they're shared.  But this stuff makes no sense across session boundaries anyway.
      208    ** And a shared temp-table is logically the same as a db table so who really cares?
      209    **
      210    **/
      211   
      212   /* cache _File and _Index records so that we don't keep hitting the db to translate
      213    */
      214   
      215   define new global shared temp-table tt_tbl no-undo
      216     field xid      as integer                                             /* _File._File-Num              */
      217     field tstatid  as integer                                             /* _TableStat._TableStat-Id     */
      218     field areaNum  as integer                                             /* _Storage-Object._Area-Number */
      219     field tblPool  as character                                           /* get-bits( _object-attrib, 7, 1 ) = 1 */
      220     field tblname  as character                                           /* _File._File-Name             */
      221     index xid-idx is unique primary xid.
      222   
      223   define new global shared temp-table tt_idx no-undo
      224     field xid      as integer                                             /* _Index._Idx-Num              */
      225     field istatid  as integer                                             /* _IndexStat._IndexStat-Id     */
      226     field idxname  as character                                           /* _Index._Idx-Name             */
      227     field idxnote  as character
      228     field idxRoot  as int64                                           /* _Storage-Object._Object-Root */
      229     field tblnum   as integer                                             /* _File._File-Num              */
      230     field areaNum  as integer                                             /* _Storage-Object._Area-Number */
      231     field idxPool  as character                                           /* get-bits( _object-attrib, 7, 1 ) = 1 */
      232     field tblname  as character                                           /* _File._File-Name             */
      233     index xid-idx is unique primary xid.
      234   
      235   define new global shared temp-table tt_areaExtent no-undo
      236     field areaNum  as integer                                             /* _areaExtent._Area-Number     */
      237     field extNum   as integer                                             /* _areaExtent._Extent-Number   */
      238   
      239     field extSize  as decimal                                             /* _areaExtent._Extent-Size     */
      240     field extType  as integer                                             /* _areaExtent._Extent-Type     */
      241     field extPath  as character                                           /* _areaExtent._Extent-Path     */
      242   
      243     index ae-idx is unique primary areaNum extNum.
      244   
      245   define new global shared temp-table tt_area no-undo
      246     field xid      as integer    format ">>>9"
      247     field SANum    as integer    format ">>>9"        label "#"
      248     field areaPool as character  format "x(2)"        label "BX"
      249   /*field areaStatus-Id as {&BIGINT} format ">>>9"    label "Id" */
      250     field SAName   as character  format "x(30)"       label "Area Name"
      251     field allocGB  as decimal    format ">>>>>9.99"   label "Allocated"
      252     field varGB    as decimal    format ">>>>>9.99"   label "Variable"
      253     field totGB    as decimal    format ">>>>>>9.99"  label "Tot GB"
      254     field hiGB     as decimal    format ">>>>>9.99"   label "Hi Water" serialize-hidden
      255     field freeGB   as decimal    format ">>>>>9.99"   label "Free GB"
      256     field pctAlloc as decimal    format ">>>>>9%"     label "%Alloc"
      257     field pctLastX as decimal    format ">>>>9%"      label "%LastX"
      258   
      259     field blkszkb as integer     format ">>9"         label "BSZ"
      260     field rpb     as integer     format ">>9"         label "RPB"
      261     field clstrsz as integer     format ">>9"         label "CSZ"
      262   
      263     field numTbls as integer     format ">>>>9"       label "#Tbls"
      264     field numIdxs as integer     format ">>>>9"       label "#Idxs"
      265     field numLOBs as integer     format ">>>>9"       label "#LOBs"
      266   
      267     field numExts as integer     format ">>>>9"       label "#Exts"
      268     field hasVar  as logical     format "Yes/No"      label "Var?"
      269   
      270     field xnote   as character   format "x"           label "*"
      271   
      272     field areaMaxPct as decimal  format ">>9.999%"    label "Max%"
      273     field idx3264    as decimal  format ">>9.999%"    label "Bug%"
      274   
      275     index pctAlloc-idx is primary pctAlloc descending
      276     index pctLastX-idx pctLastX pctAlloc descending
      277     index allocGB-idx allocGB descending
      278     index totGB-idx totGB descending
      279     index xid-idx is unique xid
      280     index SANum-idx is unique SANum
      281     index SAName-idx is unique SAName
      282   .
      283   
      284   *** Encrypted Source ***
      285   *** Encrypted Source ***
      286   *** Encrypted Source ***
      287   *** Encrypted Source ***
      288   *** Encrypted Source ***
      289   *** Encrypted Source ***
      290   *** Encrypted Source ***
      291   *** Encrypted Source ***
      292   *** Encrypted Source ***
      293   *** Encrypted Source ***
      294   *** Encrypted Source ***
      295   *** Encrypted Source ***
      296   *** Encrypted Source ***
      297   *** Encrypted Source ***
      298   *** Encrypted Source ***
      299   *** Encrypted Source ***
      300   *** Encrypted Source ***
      301   *** Encrypted Source ***
      302   *** Encrypted Source ***
      303   *** Encrypted Source ***
      304   *** Encrypted Source ***
      305   *** Encrypted Source ***
      306   *** Encrypted Source ***
      307   *** Encrypted Source ***
      308   *** Encrypted Source ***
      309   *** Encrypted Source ***
      310   *** Encrypted Source ***
      311   *** Encrypted Source ***
      312   *** Encrypted Source ***
      313   *** Encrypted Source ***
      314   *** Encrypted Source ***
      315   *** Encrypted Source ***
      316   *** Encrypted Source ***
      317   *** Encrypted Source ***
      318   *** Encrypted Source ***
      319   *** Encrypted Source ***
      320   *** Encrypted Source ***
      321   *** Encrypted Source ***
      322   *** Encrypted Source ***
      323   *** Encrypted Source ***
      324   *** Encrypted Source ***
      325   *** Encrypted Source ***
      326   *** Encrypted Source ***
      327   *** Encrypted Source ***
      328   *** Encrypted Source ***
      329   *** Encrypted Source ***
      330   *** Encrypted Source ***
      331   *** Encrypted Source ***
      332   *** Encrypted Source ***
      333   *** Encrypted Source ***
      334   *** Encrypted Source ***
      335   *** Encrypted Source ***
      336   *** Encrypted Source ***
      337   *** Encrypted Source ***
      338   *** Encrypted Source ***
      339   *** Encrypted Source ***
      340   *** Encrypted Source ***
      341   *** Encrypted Source ***
      342   *** Encrypted Source ***
      343   *** Encrypted Source ***
      344   *** Encrypted Source ***
      345   *** Encrypted Source ***
      346   *** Encrypted Source ***
      347   *** Encrypted Source ***
      348   *** Encrypted Source ***
      349   *** Encrypted Source ***
      350   *** Encrypted Source ***
      351   *** Encrypted Source ***
      352   *** Encrypted Source ***
      353   *** Encrypted Source ***
      354    
      355   
      356   /*******************************************************************************
      357    *******************************************************************************
      358    **                                                                           **
      359    **                                                                           **
      360    **  Copyright 2003-2006 Tom Bascom, Greenfield Technologies                  **
      361    **  http://www.greenfieldtech.com                                            **
      362    **                                                                           **
      363    **  ProTop is free software; you can redistribute it and/or modify it        **
      364    **  under the terms of the GNU General Public License (GPL) as published     **
      365    **  by the Free Software Foundation; either version 2 of the License, or     **
      366    **  at your option) any later version.                                       **
      367    **                                                                           **
      368    **  ProTop is distributed in the hope that it will be useful, but WITHOUT    **
      369    **  ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or    **
      370    **  FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License     **
      371    **  for more details.                                                        **
      372    **                                                                           **
      373    **  See TERMS.TXT for more information regarding the Terms and Conditions    **
      374    **  of use and alternative licensing options for this software.              **
      375    **                                                                           **
      376    **  A copy of the GPL is in GPL.TXT which was provided with this package.    **
      377    **                                                                           **
      378    **  See http://www.fsf.org for more information about the GPL.               **
      379    **                                                                           **
      380    **                                                                           **
      381    *******************************************************************************
      382    *******************************************************************************
      383    *
      384    * protoplib.i
      385    *
      386    * ProTop infrastructure library definitions
      387    *
      388    */
      389   
      390   function uDateTime returns integer () in super.
      391   function string2uDateTime returns integer( input p_text as character ) in super.
      392   function searchDir returns character ( input xDir as character ) in super.
      393   function unsignMe returns decimal ( input s as decimal, input i as integer ) in super.
      394   function hr returns decimal ( input lr as decimal, input osr as decimal, output hr-str as character, output hr as decimal, output mr as decimal ) in super.
      395   function do-SumSample returns logical ( output p_index as integer, output p_time  as integer ) in super.
      396   function myPID returns character () in super.
      397   function hilite returns logical ( input b as handle, input p_metric as character, input p_value as character, output p_attr as character ) in super.
      398   
      399   /* end protoplib.i */
      400    
      401   
      402   /*******************************************************************************
      403    *******************************************************************************
      404    **                                                                           **
      405    **                                                                           **
      406    **  Copyright 2003-2006 Tom Bascom, Greenfield Technologies                  **
      407    **  http://www.greenfieldtech.com                                            **
      408    **                                                                           **
      409    **  ProTop is free software; you can redistribute it and/or modify it        **
      410    **  under the terms of the GNU General Public License (GPL) as published     **
      411    **  by the Free Software Foundation; either version 2 of the License, or     **
      412    **  at your option) any later version.                                       **
      413    **                                                                           **
      414    **  ProTop is distributed in the hope that it will be useful, but WITHOUT    **
      415    **  ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or    **
      416    **  FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License     **
      417    **  for more details.                                                        **
      418    **                                                                           **
      419    **  See TERMS.TXT for more information regarding the Terms and Conditions    **
      420    **  of use and alternative licensing options for this software.              **
      421    **                                                                           **
      422    **  A copy of the GPL is in GPL.TXT which was provided with this package.    **
      423    **                                                                           **
      424    **  See http://www.fsf.org for more information about the GPL.               **
      425    **                                                                           **
      426    **                                                                           **
      427    *******************************************************************************
      428    *******************************************************************************
      429    *
      430    * vstlib.i
      431    *
      432    * VST library definitions
      433    *
      434    */
      435   
      436   function aiInfo returns character ( input vAiFile as character, output vAiGenNum as integer ) in super.
      437   function chkai returns integer ( output ai_exts as integer, output ai_full as integer, output ai_empty as integer ) in super.
      438   function chkarea returns integer ( input threshold as decimal, output worst as decimal ) in super.
      439   function chkptNum returns integer ( input-output oldbi as integer ) in super.
      440   
      441   function connectFlags returns character ( input cnxId as integer ) in super.
      442   function connectName returns character ( input cnxId as integer, input cnxFlags as character ) in super.
      443   function lastStatement returns character( input cnxId as integer, output lineNum as integer, output procName as character ) in super.
      444   
      445   function isAIEnabled returns logical () in super.
      446   function isReplSource returns logical () in super.
      447   function isReplTarget returns logical () in super.
      448   function isBackupRunning returns logical () in super.
      449   function isWorkgroup returns logical () in super.
      450   
      451   function getStartupX returns character ( input v as character, input p1 as character, input p2 as character ) in super.
      452   
      453   /* end vstlib.i */
      454    
      455   
      456   function add2ds returns logical ( input h as handle ) in super.
      457   function getTempTableHandle returns handle ( input n as character ) in super.
      458   
      459   /* end protop.i */
      460    
      461   
      462   /*******************************************************************************
      463    *******************************************************************************
      464    **                                                                           **
      465    **                                                                           **
      466    **  Copyright 2003-2012 Tom Bascom, Greenfield Technologies                  **
      467    **  http://www.greenfieldtech.com                                            **
      468    **                                                                           **
      469    **  ProTop is free software; you can redistribute it and/or modify it        **
      470    **  under the terms of the GNU General Public License (GPL) as published     **
      471    **  by the Free Software Foundation; either version 2 of the License, or     **
      472    **  at your option) any later version.                                       **
      473    **                                                                           **
      474    **  ProTop is distributed in the hope that it will be useful, but WITHOUT    **
      475    **  ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or    **
      476    **  FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License     **
      477    **  for more details.                                                        **
      478    **                                                                           **
      479    **  See TERMS.TXT for more information regarding the Terms and Conditions    **
      480    **  of use and alternative licensing options for this software.              **
      481    **                                                                           **
      482    **  A copy of the GPL is in GPL.TXT which was provided with this package.    **
      483    **                                                                           **
      484    **  See http://www.fsf.org for more information about the GPL.               **
      485    **                                                                           **
      486    **                                                                           **
      487    *******************************************************************************
      488    *******************************************************************************
      489    *
      490    * tick.i
      491    *
      492    *
      493    * common routine to handle "clock ticks"
      494    *
      495    *
      496    * Author:
      497    *
      498    *      Tom Bascom, Greenfield Technologies
      499    *      http://www.greenfieldtech.com
      500    *      January 21, 2012
      501    *
      502    */
      503   
      504   
      505   /* lib/v9.i
      506    *
      507    */
      508   
      509   &IF DECIMAL(SUBSTRING(PROVERSION,1,INDEX(PROVERSION,".") + 1)) < 10.0 &THEN
      510   &global-define  CPYLOB  "no"
      511   &global-define  NOW     substitute( "&1 &2", today, string( time, "hh:mm:ss" ))
      512   &global-define  LNGCR   character
      513   &global-define  DTZ     integer
      514   &global-define  BIGINT  decimal
      515   &ELSE
      516   &global-define  OE10    "yes"
      517   &global-define  NOW     now
      518   &global-define  LNGCR   longchar
      519   &global-define  DTZ     datetime-tz
      520   &global-define  BIGINT  int64
      521   &ENDIF
      522    
      523   
      524   define new global shared variable rawMode  as integer no-undo initial 5.
      525   define new global shared variable timeMode as integer no-undo initial 2.
      526   
      527   define new global shared variable x as integer no-undo initial 5.
      528   define new global shared variable z as decimal no-undo.
      529   
      530   define variable y as decimal no-undo.
      531   
      532   define variable initTick as integer no-undo.
      533   define variable prevTick as integer no-undo.
      534   
      535   
      536   procedure updTick:
      537   
      538   &IF DEFINED( OE10 ) &THEN
      539     if initTick = 0 then initTick = mtime.
      540     assign
      541       x = rawMode /* ( if rawMode then 4 else 5 ) */
      542       z = mtime - prevTick
      543       z = ( if z >= 0 then z else 86400000 - prevTick + mtime )   /* handle rolling over midnight */
      544       z = z / 1000
      545       y = mtime - initTick
      546       y = y / 1000
      547       prevTick = mtime
      548     .
      549   &ELSE
      550     if initTick = 0 then initTick = etime.
      551     assign
      552       x = rawMode /* ( if rawMode then 4 else 5 ) */
      553       z = etime - prevTick
      554       z = ( if z >= 0 then z else 5000 )   /* etime doesn't rollover at midnite -- but a mistaken etime(yes) somewhere would be bad... */
      555       z = z / 1000
      556       y = etime - initTick
      557       y = y / 1000
      558       prevTick = etime
      559     .
      560   &ENDIF
      561   
      562     /* if rawMode <> 5 then z = 1. */
      563   
      564     if timeMode = 1 then z = 1.
      565   
      566     return.
      567   
      568   end.
      569   
      570   /* end tick.i */
      571    
      572   
      573   define output parameter dcDescription as character no-undo initial "aiInfo".
      574   
      575   define temp-table tt_aiinfo no-undo
      576     field xid        as integer   format ">>9"             label "Id"
      577     field aiName     as character format "x(60)"           label "Extent"
      578     field aiExtType  as character format "x(8)"            label "Extent Type"
      579     field aiSize     as integer   format ">>>>>>>>>>>"     label "Size"
      580     field aiSeqNum   as integer   format "->>>>>>>>>"      label "AI Seq#"
      581     field aiStatus   as character format "x(20)"           label "Status"
      582     field xtra       as character format "x(38)"           label " "
      583   
      584     index aiName-idx  is unique primary aiName
      585   .
      586   
      587   
      588   /* lib/dumpTT.i
      589    *
      590    * simplified to a single line -- include should be eliminated.
      591    *
      592    */
      593   
      594   &IF DECIMAL(SUBSTRING(PROVERSION,1,INDEX(PROVERSION,".") + 1)) >= 10.1 &THEN
      595   /*** +++
      596   file-info:file-name = "./ptdefs".
      597   if file-info:full-pathname <> ? and index( file-info:file-type, "d" ) > 0 and index( file-info:file-type, "w" ) > 0 then
      598     do:
      599   
      600       file-info:file-name = "./ptdefs/{1}.xsd".
      601   
      602       if true /* file-info:full-pathname = ? or file-info:file-size = 0 */ then
      603         do:
      604   
      605           temp-table {1}:write-xmlschema(
      606             "file",
      607   /*        substitute( "ptdefs/&1.xsd", "{1}" ), */
      608   /*        "./ptdefs/{1}.xsd", */
      609             ( if opsys = "unix" then "./ptdefs/{1}.xsd" else ".~\ptdefs~\{1}.xsd" ),
      610             true
      611   
      612         &IF DECIMAL(SUBSTRING(PROVERSION,1,INDEX(PROVERSION,".") + 1)) >= 10.2
      613         &THEN
      614             , ?, ?, ?
      615         &ENDIF
      616   
      617       ).
      618   
      619       end.
      620   
      621     end.
      622    +++ ***/
      623   &ENDIF
      624    
      625   
      626   define variable hasAIInfo as logical no-undo.
      627   define variable useRFUtil as logical no-undo.
      628   
      629   procedure chkAIInfo:
      630   
      631     hasAIInfo = no.
      632     find dictdb._File  no-lock where _File-Name = "_AreaStatus".
      633     find dictdb._Field no-lock where _Field._File-recid = recid( _File ) and _Field-Name = "_AreaStatus-AI-Seq" no-error.
      634     if available _Field then hasAIInfo = yes.
      635   
      636     return.
      637   
      638   end.
      639   
      640   
      641   procedure mon-init:
      642   
      643     run chkAIInfo.
      644   
      645     useRFUtil = ( if os-getenv( "USERFUTIL" ) = "yes" then yes else no ).
      646   
      647     return.
      648   
      649   end.
      650   
      651   
      652   procedure mon-update:
      653   
      654     define input parameter argList as character no-undo.
      655   
      656     define variable stuff as character no-undo extent 8.
      657   
      658     empty temp-table tt_aiinfo.
      659   
      660     /*
      661      * rfutil /home/tom/tmp/s2k -C aimage list
      662      * OpenEdge Release 11.7.2 as of Tue Oct 24 18:20:59 EDT 2017
      663      * 
      664      * Extent:  1
      665      * Status:  Empty
      666      *   Type:  Variable Length
      667      *   Path:  /home/tom/tmp/s2k.a1
      668      *   Size:  120
      669      *   Used:  0
      670      *  Start:  N/A
      671      * LastOp:  N/A
      672      *  Seqno:  0
      673      * 
      674      * Extent:  2
      675      * Status:  Empty
      676      *   Type:  Variable Length
      677      *   Path:  /home/tom/tmp/s2k.a2
      678      *   Size:  120
      679      *   Used:  0
      680      *  Start:  N/A
      681      * LastOp:  N/A
      682      *  Seqno:  0
      683      * 
      684      * Extent:  3
      685      * Status:  Busy
      686      *   Type:  Variable Length
      687      *   Path:  /home/tom/tmp/s2k.a3
      688      *   Size:  120
      689      *   Used:  7
      690      *  Start:  Thu Jun 14 14:51:42 2018
      691      * LastOp:  N/A
      692      *  Seqno:  15
      693      *
      694      * ...
      695      *
      696      */
      697   
      698     if hasAIInfo = no or useRFUtil = yes then
      699       do:
      700   
      701         if opsys = "unix" then
      702           input stream inStrm through value( substitute(      "rfutil &1 -C aimage list -cpinternal &2 -cpstream &3", pdbname(1), session:cpinternal, session:cpstream )).
      703          else
      704           input stream inStrm through value( substitute( "call rfutil &1 -C aimage list -cpinternal &2 -cpstream &3", pdbname(1), session:cpinternal, session:cpstream )).
      705   
      706         repeat:
      707   
      708           stuff = "".
      709           import stream inStrm stuff.
      710   
      711           if stuff[1] = "Extent:" then
      712             do:
      713               create tt_aiinfo.
      714               tt_aiinfo.xid = integer( trim( stuff[2] )) no-error.
      715             end.
      716            else if stuff[1] = "Status:" then tt_aiinfo.aiStatus = stuff[2].
      717            else if stuff[1] = "Type:"   then tt_aiinfo.aiExtType = stuff[2].
      718            else if stuff[1] = "Path:"   then tt_aiinfo.aiName = stuff[2].
      719            else if stuff[1] = "Size:"   then tt_aiinfo.aiSize = integer( trim( stuff[2] )) no-error.
      720            else if stuff[1] = "Seqno:"  then tt_aiinfo.aiSeqNum = integer( trim( stuff[2] )) no-error.
      721   
      722         end.
      723   
      724         input stream inStrm close.
      725   
      726       end.
      727      else
      728       do:
      729   
      730         for each _areaStatus no-lock where _areaStatus-areaName begins "after image area":
      731   
      732           file-info:file-name = _areaStatus-lastExtent.
      733   
      734           create tt_aiinfo.
      735           assign
      736             tt_aiinfo.xid    = _areaStatus-areaNum
      737             tt_aiinfo.aiName = _areaStatus-lastExtent
      738             tt_aiinfo.aiSize = file-info:file-size
      739           .
      740   
      741           find tt_AreaExtent no-lock where tt_areaExtent.extPath = _areaStatus-lastExtent no-error.
      742           if available tt_areaExtent then
      743             tt_aiinfo.aiExtType  = ( if tt_areaExtent.extType >= 4 and tt_areaExtent.extType <= 7 then "Variable" else "Fixed" ).
      744   
      745           if hasAIInfo = yes then
      746             assign
      747               tt_aiinfo.aiStatus = ( buffer _areaStatus:handle:buffer-field( "_areaStatus-State" ):buffer-value )
      748               tt_aiinfo.aiSeqNum = ( buffer _areaStatus:handle:buffer-field( "_areaStatus-AI-Seq" ):buffer-value )
      749             .
      750   
      751           end.
      752   
      753       end.
      754   
      755   
      756     add2ds( temp-table tt_aiinfo:default-buffer-handle ).
      757   
      758     return.
      759   
      760   end.
      761   
      762   return.
