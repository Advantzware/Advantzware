        1   /*******************************************************************************
        2    *******************************************************************************
        3    **                                                                           **
        4    **                                                                           **
        5    **  Copyright 2003-2012 Tom Bascom, Greenfield Technologies                  **
        6    **  http://www.greenfieldtech.com                                            **
        7    **                                                                           **
        8    **  ProTop is free software; you can redistribute it and/or modify it        **
        9    **  under the terms of the GNU General Public License (GPL) as published     **
       10    **  by the Free Software Foundation; either version 2 of the License, or     **
       11    **  at your option) any later version.                                       **
       12    **                                                                           **
       13    **  ProTop is distributed in the hope that it will be useful, but WITHOUT    **
       14    **  ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or    **
       15    **  FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License     **
       16    **  for more details.                                                        **
       17    **                                                                           **
       18    **  See TERMS.TXT for more information regarding the Terms and Conditions    **
       19    **  of use and alternative licensing options for this software.              **
       20    **                                                                           **
       21    **  A copy of the GPL is in GPL.TXT which was provided with this package.    **
       22    **                                                                           **
       23    **  See http://www.fsf.org for more information about the GPL.               **
       24    **                                                                           **
       25    **                                                                           **
       26    *******************************************************************************
       27    *******************************************************************************
       28    *
       29    * pasoe.p
       30    *
       31    *
       32    * pasoe (aka "pacific") info
       33    *
       34    *
       35    * Author:
       36    *
       37    *      Tom Bascom, Greenfield Technologies
       38    *      http://www.greenfieldtech.com
       39    *      September 5, 2003
       40    *
       41    */
       42   
       43   &IF DECIMAL(SUBSTRING(PROVERSION,1,INDEX(PROVERSION,".") + 1)) >= 12.0 &THEN
       44   
       45   block-level on error undo, throw.
       46   
       47   using Progress.Json.ObjectModel.JsonObject.
       48   using Progress.Json.ObjectModel.JsonArray.
       49   using Progress.Json.ObjectModel.JsonDataType.
       50   using Progress.Json.ObjectModel.ObjectModelParser.
       51   using OpenEdge.Core.JsonDataTypeEnum.
       52   
       53   &ENDIF
       54   
       55   
       56   /*******************************************************************************
       57    *******************************************************************************
       58    **                                                                           **
       59    **                                                                           **
       60    **  Copyright 2003-2006 Tom Bascom, Greenfield Technologies                  **
       61    **  http://www.greenfieldtech.com                                            **
       62    **                                                                           **
       63    **  ProTop is free software; you can redistribute it and/or modify it        **
       64    **  under the terms of the GNU General Public License (GPL) as published     **
       65    **  by the Free Software Foundation; either version 2 of the License, or     **
       66    **  at your option) any later version.                                       **
       67    **                                                                           **
       68    **  ProTop is distributed in the hope that it will be useful, but WITHOUT    **
       69    **  ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or    **
       70    **  FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License     **
       71    **  for more details.                                                        **
       72    **                                                                           **
       73    **  See TERMS.TXT for more information regarding the Terms and Conditions    **
       74    **  of use and alternative licensing options for this software.              **
       75    **                                                                           **
       76    **  A copy of the GPL is in GPL.TXT which was provided with this package.    **
       77    **                                                                           **
       78    **  See http://www.fsf.org for more information about the GPL.               **
       79    **                                                                           **
       80    **                                                                           **
       81    *******************************************************************************
       82    *******************************************************************************
       83    *
       84    * protop.i
       85    *
       86    * Header file for protop family of programs
       87    *
       88    *
       89    * Known Bugs & Issues:
       90    *
       91    *
       92    * To Do:
       93    *
       94    *
       95    * Author:
       96    *
       97    *      Tom Bascom, Greenfield Technologies
       98    *      http://www.greenfieldtech.com
       99    *      August 28, 2003
      100    *
      101    */
      102   
      103   &IF DECIMAL(SUBSTRING(PROVERSION,1,INDEX(PROVERSION,".") + 1)) >= 11.4 &THEN
      104   &global-define  FASTLOCK        true
      105   &ELSE
      106   &global-define  FASTLOCK        false
      107   &ENDIF
      108   
      109   &IF DECIMAL(SUBSTRING(PROVERSION,1,INDEX(PROVERSION,".") + 1)) >= 11.0 &THEN
      110   &global-define  OE11            "yes"
      111   &global-define  xDEBUGTT        false
      112   &ENDIF
      113   
      114   &IF DECIMAL(SUBSTRING(PROVERSION,1,INDEX(PROVERSION,".") + 1)) >= 10.2 AND PROVERSION >= "10.2B" &THEN
      115   &global-define  NOSERIALIZE     serialize-hidden
      116   &ENDIF
      117   
      118   &IF DECIMAL(SUBSTRING(PROVERSION,1,INDEX(PROVERSION,".") + 1)) >= 10.1 AND PROVERSION >= "10.1B" &THEN
      119   &global-define  BIGINT          int64
      120   &ELSE
      121   &global-define  BIGINT          decimal
      122   &ENDIF
      123   
      124   
      125   /* lib/v9.i
      126    *
      127    */
      128   
      129   &IF DECIMAL(SUBSTRING(PROVERSION,1,INDEX(PROVERSION,".") + 1)) < 10.0 &THEN
      130   &global-define  CPYLOB  "no"
      131   &global-define  NOW     substitute( "&1 &2", today, string( time, "hh:mm:ss" ))
      132   &global-define  LNGCR   character
      133   &global-define  DTZ     integer
      134   &global-define  BIGINT  decimal
      135   &ELSE
      136   &global-define  OE10    "yes"
      137   &global-define  NOW     now
      138   &global-define  LNGCR   longchar
      139   &global-define  DTZ     datetime-tz
      140   &global-define  BIGINT  int64
      141   &ENDIF
      142    
      143   
      144   /* use extended _connect fields: -client, -cache*
      145    */
      146   
      147   &IF DECIMAL(SUBSTRING(PROVERSION,1,INDEX(PROVERSION,".") + 1)) >= 10.1 AND PROVERSION >= "10.1C" &THEN
      148   &global-define  CONNECTX        "yes"
      149   &ELSE
      150   &global-define  CONNECTX        "no"
      151   &ENDIF
      152   
      153   define stream inStrm.
      154   
      155   define new global shared variable dbgMode as integer no-undo initial 1.
      156   
      157   /* The values for these are defined in etc/protop.cfg and set by lib/protop-cfg.p
      158    *
      159    * someday everyone will have OO and I will replace these with a gsv class
      160    * or something of that ilk
      161    *
      162    */
      163   
      164   define new global shared variable pt_shortname   as character no-undo.
      165   define new global shared variable pt_uniqName    as character no-undo.
      166   define new global shared variable pt_server      as character no-undo.
      167   define new global shared variable pt_resrcType   as character no-undo.
      168   
      169   define new global shared variable pt_tmpdir      as character no-undo initial "/tmp".
      170   define new global shared variable pt_logdir      as character no-undo initial "/tmp".
      171   define new global shared variable pt_rptdir      as character no-undo initial "/tmp".
      172   define new global shared variable pt_logname     as character no-undo initial "&5.&2.&3".
      173   define new global shared variable pt_mailcmd     as character no-undo initial 'mailx "-s &1" '.
      174   
      175   define new global shared variable pt_votrx       as integer   no-undo initial 1800.
      176   define new global shared variable pt_lktbllim    as integer   no-undo initial 0.
      177   define new global shared variable pt_bkupstale   as integer   no-undo initial 26.
      178   define new global shared variable pt_bogomips    as integer   no-undo initial 1000000.
      179   define new global shared variable pt_ioresp      as integer   no-undo initial 100.
      180   define new global shared variable pt_ioFileName  as character no-undo.
      181   define new global shared variable pt_dfCmd       as character no-undo.
      182   
      183   define new global shared variable pt_AICheckInterval   as integer no-undo initial 60.
      184   define new global shared variable pt_PICACheckInterval as integer no-undo initial 60.
      185   define new global shared variable pt_appsrvStuck       as integer no-undo initial 120.
      186   
      187   define new global shared variable pt_bibkupAlert as integer   no-undo.          /* alert on long bi backup phase                */
      188   define new global shared variable pt_bibkupAlarm as integer   no-undo.          /* alarm on long bi backup phase                */
      189   define new global shared variable pt_bibkupPage  as integer   no-undo.          /* page  on long bi backup phase                */
      190   
      191   define new global shared variable pt_bkupAlert   as integer   no-undo.          /* alert on long db backup                      */
      192   define new global shared variable pt_bkupAlarm   as integer   no-undo.          /* alarm on long db backup                      */
      193   define new global shared variable pt_bkupPage    as integer   no-undo.          /* page  on long db backup                      */
      194   
      195   define new global shared variable pt_userLock    as logical   no-undo.          /* enable _userLock  data?                      */
      196   define new global shared variable pt_doZippy     as logical   no-undo.          /* enable "user experience" (aka "zippy")?      */
      197   define new global shared variable pt_useRFUtil   as logical   no-undo.          /* use rfutil to gather after-imaging status?   */
      198   
      199   define new global shared variable pt_updAreaData as integer   no-undo.          /* how often should we report storage area xref details from dbanalys? */
      200   
      201   define new global shared variable pt_zoomTo      as integer no-undo.            /* new zoomed monInt                            */
      202   
      203   define new global shared variable ptDBName     as character no-undo.                    /* the db logical name          */
      204   define new global shared variable rowLimit     as integer   no-undo initial 100.        /* 50?                          */
      205   
      206   /* do-sumSample() manipulates these -- ugly, ugly, ugly... (obsolete?)
      207    * 
      208    */
      209   
      210   define new global shared variable stime as integer no-undo.                     /* start time                           */
      211   define new global shared variable ltime as integer no-undo.                     /* last time                            */
      212   define new global shared variable xtime as integer no-undo.                     /* total time                           */
      213   define new global shared variable itime as integer no-undo.                     /* iteration time                       */
      214   
      215   define new global shared variable chkp-base   as integer no-undo initial ?.     /* cover for the lack of a VST field    */
      216   
      217                                                                                   /* corresponding to base checkpoint#    */
      218   /** Global Shared Temp Table Definitions
      219    **
      220    ** Yup, they're shared.  But this stuff makes no sense across session boundaries anyway.
      221    ** And a shared temp-table is logically the same as a db table so who really cares?
      222    **
      223    **/
      224   
      225   /* cache _File and _Index records so that we don't keep hitting the db to translate
      226    */
      227   
      228   define new global shared temp-table tt_tbl no-undo
      229     field xid      as integer                                             /* _File._File-Num              */
      230     field tstatid  as integer                                             /* _TableStat._TableStat-Id     */
      231     field areaNum  as integer                                             /* _Storage-Object._Area-Number */
      232     field tblPool  as character                                           /* get-bits( _object-attrib, 7, 1 ) = 1 */
      233     field tblname  as character                                           /* _File._File-Name             */
      234     index xid-idx is unique primary xid.
      235   
      236   define new global shared temp-table tt_idx no-undo
      237     field xid      as integer                                             /* _Index._Idx-Num              */
      238     field istatid  as integer                                             /* _IndexStat._IndexStat-Id     */
      239     field idxname  as character                                           /* _Index._Idx-Name             */
      240     field idxnote  as character
      241     field idxRoot  as int64                                           /* _Storage-Object._Object-Root */
      242     field tblnum   as integer                                             /* _File._File-Num              */
      243     field areaNum  as integer                                             /* _Storage-Object._Area-Number */
      244     field idxPool  as character                                           /* get-bits( _object-attrib, 7, 1 ) = 1 */
      245     field tblname  as character                                           /* _File._File-Name             */
      246     index xid-idx is unique primary xid.
      247   
      248   define new global shared temp-table tt_areaExtent no-undo
      249     field areaNum  as integer                                             /* _areaExtent._Area-Number     */
      250     field extNum   as integer                                             /* _areaExtent._Extent-Number   */
      251   
      252     field extSize  as decimal                                             /* _areaExtent._Extent-Size     */
      253     field extType  as integer                                             /* _areaExtent._Extent-Type     */
      254     field extPath  as character                                           /* _areaExtent._Extent-Path     */
      255   
      256     index ae-idx is unique primary areaNum extNum.
      257   
      258   define new global shared temp-table tt_area no-undo
      259     field xid      as integer    format ">>>9"
      260     field SANum    as integer    format ">>>9"        label "#"
      261     field areaPool as character  format "x(2)"        label "BX"
      262   /*field areaStatus-Id as {&BIGINT} format ">>>9"    label "Id" */
      263     field SAName   as character  format "x(30)"       label "Area Name"
      264     field allocGB  as decimal    format ">>>>>9.99"   label "Allocated"
      265     field varGB    as decimal    format ">>>>>9.99"   label "Variable"
      266     field totGB    as decimal    format ">>>>>>9.99"  label "Tot GB"
      267     field hiGB     as decimal    format ">>>>>9.99"   label "Hi Water" serialize-hidden
      268     field freeGB   as decimal    format ">>>>>9.99"   label "Free GB"
      269     field pctAlloc as decimal    format ">>>>>9%"     label "%Alloc"
      270     field pctLastX as decimal    format ">>>>9%"      label "%LastX"
      271   
      272     field blkszkb as integer     format ">>9"         label "BSZ"
      273     field rpb     as integer     format ">>9"         label "RPB"
      274     field clstrsz as integer     format ">>9"         label "CSZ"
      275   
      276     field numTbls as integer     format ">>>>9"       label "#Tbls"
      277     field numIdxs as integer     format ">>>>9"       label "#Idxs"
      278     field numLOBs as integer     format ">>>>9"       label "#LOBs"
      279   
      280     field numExts as integer     format ">>>>9"       label "#Exts"
      281     field hasVar  as logical     format "Yes/No"      label "Var?"
      282   
      283     field xnote   as character   format "x"           label "*"
      284   
      285     field areaMaxPct as decimal  format ">>9.999%"    label "Max%"
      286     field idx3264    as decimal  format ">>9.999%"    label "Bug%"
      287   
      288     index pctAlloc-idx is primary pctAlloc descending
      289     index pctLastX-idx pctLastX pctAlloc descending
      290     index allocGB-idx allocGB descending
      291     index totGB-idx totGB descending
      292     index xid-idx is unique xid
      293     index SANum-idx is unique SANum
      294     index SAName-idx is unique SAName
      295   .
      296   
      297   *** Encrypted Source ***
      298   *** Encrypted Source ***
      299   *** Encrypted Source ***
      300   *** Encrypted Source ***
      301   *** Encrypted Source ***
      302   *** Encrypted Source ***
      303   *** Encrypted Source ***
      304   *** Encrypted Source ***
      305   *** Encrypted Source ***
      306   *** Encrypted Source ***
      307   *** Encrypted Source ***
      308   *** Encrypted Source ***
      309   *** Encrypted Source ***
      310   *** Encrypted Source ***
      311   *** Encrypted Source ***
      312   *** Encrypted Source ***
      313   *** Encrypted Source ***
      314   *** Encrypted Source ***
      315   *** Encrypted Source ***
      316   *** Encrypted Source ***
      317   *** Encrypted Source ***
      318   *** Encrypted Source ***
      319   *** Encrypted Source ***
      320   *** Encrypted Source ***
      321   *** Encrypted Source ***
      322   *** Encrypted Source ***
      323   *** Encrypted Source ***
      324   *** Encrypted Source ***
      325   *** Encrypted Source ***
      326   *** Encrypted Source ***
      327   *** Encrypted Source ***
      328   *** Encrypted Source ***
      329   *** Encrypted Source ***
      330   *** Encrypted Source ***
      331   *** Encrypted Source ***
      332   *** Encrypted Source ***
      333   *** Encrypted Source ***
      334   *** Encrypted Source ***
      335   *** Encrypted Source ***
      336   *** Encrypted Source ***
      337   *** Encrypted Source ***
      338   *** Encrypted Source ***
      339   *** Encrypted Source ***
      340   *** Encrypted Source ***
      341   *** Encrypted Source ***
      342   *** Encrypted Source ***
      343   *** Encrypted Source ***
      344   *** Encrypted Source ***
      345   *** Encrypted Source ***
      346   *** Encrypted Source ***
      347   *** Encrypted Source ***
      348   *** Encrypted Source ***
      349   *** Encrypted Source ***
      350   *** Encrypted Source ***
      351   *** Encrypted Source ***
      352   *** Encrypted Source ***
      353   *** Encrypted Source ***
      354   *** Encrypted Source ***
      355   *** Encrypted Source ***
      356   *** Encrypted Source ***
      357   *** Encrypted Source ***
      358   *** Encrypted Source ***
      359   *** Encrypted Source ***
      360   *** Encrypted Source ***
      361   *** Encrypted Source ***
      362   *** Encrypted Source ***
      363   *** Encrypted Source ***
      364   *** Encrypted Source ***
      365   *** Encrypted Source ***
      366   *** Encrypted Source ***
      367    
      368   
      369   /*******************************************************************************
      370    *******************************************************************************
      371    **                                                                           **
      372    **                                                                           **
      373    **  Copyright 2003-2006 Tom Bascom, Greenfield Technologies                  **
      374    **  http://www.greenfieldtech.com                                            **
      375    **                                                                           **
      376    **  ProTop is free software; you can redistribute it and/or modify it        **
      377    **  under the terms of the GNU General Public License (GPL) as published     **
      378    **  by the Free Software Foundation; either version 2 of the License, or     **
      379    **  at your option) any later version.                                       **
      380    **                                                                           **
      381    **  ProTop is distributed in the hope that it will be useful, but WITHOUT    **
      382    **  ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or    **
      383    **  FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License     **
      384    **  for more details.                                                        **
      385    **                                                                           **
      386    **  See TERMS.TXT for more information regarding the Terms and Conditions    **
      387    **  of use and alternative licensing options for this software.              **
      388    **                                                                           **
      389    **  A copy of the GPL is in GPL.TXT which was provided with this package.    **
      390    **                                                                           **
      391    **  See http://www.fsf.org for more information about the GPL.               **
      392    **                                                                           **
      393    **                                                                           **
      394    *******************************************************************************
      395    *******************************************************************************
      396    *
      397    * protoplib.i
      398    *
      399    * ProTop infrastructure library definitions
      400    *
      401    */
      402   
      403   function uDateTime returns integer () in super.
      404   function string2uDateTime returns integer( input p_text as character ) in super.
      405   function searchDir returns character ( input xDir as character ) in super.
      406   function unsignMe returns decimal ( input s as decimal, input i as integer ) in super.
      407   function hr returns decimal ( input lr as decimal, input osr as decimal, output hr-str as character, output hr as decimal, output mr as decimal ) in super.
      408   function do-SumSample returns logical ( output p_index as integer, output p_time  as integer ) in super.
      409   function myPID returns character () in super.
      410   function hilite returns logical ( input b as handle, input p_metric as character, input p_value as character, output p_attr as character ) in super.
      411   
      412   /* end protoplib.i */
      413    
      414   
      415   /*******************************************************************************
      416    *******************************************************************************
      417    **                                                                           **
      418    **                                                                           **
      419    **  Copyright 2003-2006 Tom Bascom, Greenfield Technologies                  **
      420    **  http://www.greenfieldtech.com                                            **
      421    **                                                                           **
      422    **  ProTop is free software; you can redistribute it and/or modify it        **
      423    **  under the terms of the GNU General Public License (GPL) as published     **
      424    **  by the Free Software Foundation; either version 2 of the License, or     **
      425    **  at your option) any later version.                                       **
      426    **                                                                           **
      427    **  ProTop is distributed in the hope that it will be useful, but WITHOUT    **
      428    **  ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or    **
      429    **  FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License     **
      430    **  for more details.                                                        **
      431    **                                                                           **
      432    **  See TERMS.TXT for more information regarding the Terms and Conditions    **
      433    **  of use and alternative licensing options for this software.              **
      434    **                                                                           **
      435    **  A copy of the GPL is in GPL.TXT which was provided with this package.    **
      436    **                                                                           **
      437    **  See http://www.fsf.org for more information about the GPL.               **
      438    **                                                                           **
      439    **                                                                           **
      440    *******************************************************************************
      441    *******************************************************************************
      442    *
      443    * vstlib.i
      444    *
      445    * VST library definitions
      446    *
      447    */
      448   
      449   function aiInfo returns character ( input vAiFile as character, output vAiGenNum as integer ) in super.
      450   function chkai returns integer ( output ai_exts as integer, output ai_full as integer, output ai_empty as integer ) in super.
      451   function chkarea returns integer ( input threshold as decimal, output worst as decimal ) in super.
      452   function chkptNum returns integer ( input-output oldbi as integer ) in super.
      453   
      454   function connectFlags returns character ( input cnxId as integer ) in super.
      455   function connectName returns character ( input cnxId as integer, input cnxFlags as character ) in super.
      456   function lastStatement returns character( input cnxId as integer, output lineNum as integer, output procName as character ) in super.
      457   
      458   function isAIEnabled returns logical () in super.
      459   function isReplSource returns logical () in super.
      460   function isReplTarget returns logical () in super.
      461   function isBackupRunning returns logical () in super.
      462   function isWorkgroup returns logical () in super.
      463   
      464   function getStartupX returns character ( input v as character, input p1 as character, input p2 as character ) in super.
      465   
      466   /* end vstlib.i */
      467    
      468   
      469   function add2ds returns logical ( input h as handle ) in super.
      470   function getTempTableHandle returns handle ( input n as character ) in super.
      471   
      472   /* end protop.i */
      473    
      474   
      475   /*******************************************************************************
      476    *******************************************************************************
      477    **                                                                           **
      478    **                                                                           **
      479    **  Copyright 2003-2012 Tom Bascom, Greenfield Technologies                  **
      480    **  http://www.greenfieldtech.com                                            **
      481    **                                                                           **
      482    **  ProTop is free software; you can redistribute it and/or modify it        **
      483    **  under the terms of the GNU General Public License (GPL) as published     **
      484    **  by the Free Software Foundation; either version 2 of the License, or     **
      485    **  at your option) any later version.                                       **
      486    **                                                                           **
      487    **  ProTop is distributed in the hope that it will be useful, but WITHOUT    **
      488    **  ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or    **
      489    **  FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License     **
      490    **  for more details.                                                        **
      491    **                                                                           **
      492    **  See TERMS.TXT for more information regarding the Terms and Conditions    **
      493    **  of use and alternative licensing options for this software.              **
      494    **                                                                           **
      495    **  A copy of the GPL is in GPL.TXT which was provided with this package.    **
      496    **                                                                           **
      497    **  See http://www.fsf.org for more information about the GPL.               **
      498    **                                                                           **
      499    **                                                                           **
      500    *******************************************************************************
      501    *******************************************************************************
      502    *
      503    * tick.i
      504    *
      505    *
      506    * common routine to handle "clock ticks"
      507    *
      508    *
      509    * Author:
      510    *
      511    *      Tom Bascom, Greenfield Technologies
      512    *      http://www.greenfieldtech.com
      513    *      January 21, 2012
      514    *
      515    */
      516   
      517   
      518   /* lib/v9.i
      519    *
      520    */
      521   
      522   &IF DECIMAL(SUBSTRING(PROVERSION,1,INDEX(PROVERSION,".") + 1)) < 10.0 &THEN
      523   &global-define  CPYLOB  "no"
      524   &global-define  NOW     substitute( "&1 &2", today, string( time, "hh:mm:ss" ))
      525   &global-define  LNGCR   character
      526   &global-define  DTZ     integer
      527   &global-define  BIGINT  decimal
      528   &ELSE
      529   &global-define  OE10    "yes"
      530   &global-define  NOW     now
      531   &global-define  LNGCR   longchar
      532   &global-define  DTZ     datetime-tz
      533   &global-define  BIGINT  int64
      534   &ENDIF
      535    
      536   
      537   define new global shared variable rawMode  as integer no-undo initial 5.
      538   define new global shared variable timeMode as integer no-undo initial 2.
      539   
      540   define new global shared variable x as integer no-undo initial 5.
      541   define new global shared variable z as decimal no-undo.
      542   
      543   define variable y as decimal no-undo.
      544   
      545   define variable initTick as integer no-undo.
      546   define variable prevTick as integer no-undo.
      547   
      548   
      549   procedure updTick:
      550   
      551   &IF DEFINED( OE10 ) &THEN
      552     if initTick = 0 then initTick = mtime.
      553     assign
      554       x = rawMode /* ( if rawMode then 4 else 5 ) */
      555       z = mtime - prevTick
      556       z = ( if z >= 0 then z else 86400000 - prevTick + mtime )   /* handle rolling over midnight */
      557       z = z / 1000
      558       y = mtime - initTick
      559       y = y / 1000
      560       prevTick = mtime
      561     .
      562   &ELSE
      563     if initTick = 0 then initTick = etime.
      564     assign
      565       x = rawMode /* ( if rawMode then 4 else 5 ) */
      566       z = etime - prevTick
      567       z = ( if z >= 0 then z else 5000 )   /* etime doesn't rollover at midnite -- but a mistaken etime(yes) somewhere would be bad... */
      568       z = z / 1000
      569       y = etime - initTick
      570       y = y / 1000
      571       prevTick = etime
      572     .
      573   &ENDIF
      574   
      575     /* if rawMode <> 5 then z = 1. */
      576   
      577     if timeMode = 1 then z = 1.
      578   
      579     return.
      580   
      581   end.
      582   
      583   /* end tick.i */
      584    
      585   
      586   define output parameter dcDescription as character no-undo initial "pasoeInfo".
      587   
      588   define temp-table tt_pasoeInfo no-undo
      589     field xid       as integer  format ">>9" label "Id"
      590     field zLevel        as integer
      591     field zOrder        as integer
      592     field probeName    as character format "x(47)" label "Probe Name"
      593     field colorCode     as character                label "Color Code"
      594     field probeHealth   as decimal initial ?        label "Health"
      595     field probeValue    as decimal initial ?        label "Value"
      596     field probeMarginal as logical initial ?        label "Marginal"
      597     field probeCritical as logical initial ?        label "Critical"
      598     field probeFailOnCritical as logical initial ?  label "Fail"
      599     field probeIgnore   as logical initial ?        label "Ignore"
      600     field probeFailedBy as character format "x(40)" label "Failed By"
      601     index xid-idx is unique primary xid ascending
      602   .
      603   
      604   
      605   /* lib/dumpTT.i
      606    *
      607    * simplified to a single line -- include should be eliminated.
      608    *
      609    */
      610   
      611   &IF DECIMAL(SUBSTRING(PROVERSION,1,INDEX(PROVERSION,".") + 1)) >= 10.1 &THEN
      612   /*** +++
      613   file-info:file-name = "./ptdefs".
      614   if file-info:full-pathname <> ? and index( file-info:file-type, "d" ) > 0 and index( file-info:file-type, "w" ) > 0 then
      615     do:
      616   
      617       file-info:file-name = "./ptdefs/{1}.xsd".
      618   
      619       if true /* file-info:full-pathname = ? or file-info:file-size = 0 */ then
      620         do:
      621   
      622           temp-table {1}:write-xmlschema(
      623             "file",
      624   /*        substitute( "ptdefs/&1.xsd", "{1}" ), */
      625   /*        "./ptdefs/{1}.xsd", */
      626             ( if opsys = "unix" then "./ptdefs/{1}.xsd" else ".~\ptdefs~\{1}.xsd" ),
      627             true
      628   
      629         &IF DECIMAL(SUBSTRING(PROVERSION,1,INDEX(PROVERSION,".") + 1)) >= 10.2
      630         &THEN
      631             , ?, ?, ?
      632         &ENDIF
      633   
      634       ).
      635   
      636       end.
      637   
      638     end.
      639    +++ ***/
      640   &ENDIF
      641    
      642   
      643   
      644   define variable seqId     as integer     no-undo.
      645   define variable probeTS   as datetime-tz no-undo.
      646   
      647   &IF DECIMAL(SUBSTRING(PROVERSION,1,INDEX(PROVERSION,".") + 1)) >= 12.0 &THEN
      648   
      649   procedure load_probe:
      650   
      651     define input parameter pProbe    as JsonObject.
      652     define input parameter pParentId as integer.
      653     define input parameter pIdx      as integer.
      654   
      655     define variable loop       as integer no-undo.
      656     define variable cnt        as integer no-undo.
      657     define variable valueData  as character no-undo.
      658     define variable valueType  as integer no-undo.
      659   
      660     define buffer lbProbe for tt_pasoeInfo.
      661   
      662     define variable probes     as JsonArray no-undo.
      663     define variable resultData as JsonObject no-undo.
      664   
      665     create lbProbe.
      666     assign
      667       seqId               = seqId + 1
      668       lbProbe.xid         = seqId
      669       lbProbe.zLevel      = pParentId
      670       lbProbe.zOrder      = pIdx
      671     .
      672   
      673     if pProbe:Has('name') and pProbe:GetType('name') eq JsonDataType:STRING then
      674       lbProbe.probeName = fill( " ", pParentId * 2 ) + pProbe:GetCharacter('name').
      675   
      676     if pProbe:Has('color') and pProbe:GetType('color') eq JsonDataType:STRING then
      677       lbProbe.colorCode = pProbe:GetCharacter('color').
      678   
      679     if pProbe:Has('timestamp') and pProbe:GetType('timestamp') eq JsonDataType:STRING then
      680       probeTS = pProbe:GetDatetimeTZ('timestamp').
      681   
      682     if  pProbe:Has('result') and pProbe:GetType('result') eq JsonDataType:OBJECT then
      683       do:
      684   
      685         assign
      686           resultData = pProbe:GetJsonObject('result')
      687           valueType  = resultData:GetType('value')
      688           valueData  = resultData:GetJsonText('value')
      689         .
      690   
      691         if resultData:Has('health') and resultData:GetType('health') eq JsonDataType:NUMBER then
      692           lbProbe.probeHealth = resultData:GetDecimal('health').
      693   
      694         if resultData:Has('value') and resultData:GetType('value') eq JsonDataType:NUMBER then
      695           lbProbe.probeValue = resultData:GetDecimal('value').
      696   
      697         if resultData:Has('marginal') and resultData:GetType('marginal') eq JsonDataType:BOOLEAN then
      698           lbProbe.probeMarginal = resultData:GetLogical('marginal').
      699   
      700         if resultData:Has('critical') and resultData:GetType('critical') eq JsonDataType:BOOLEAN then
      701           lbProbe.probeCritical = resultData:GetLogical('critical').
      702   
      703         if resultData:Has('ignore') and resultData:GetType('ignore') eq JsonDataType:BOOLEAN then
      704           lbProbe.probeIgnore = resultData:GetLogical('ignore').
      705   
      706         if resultData:Has('failOnCritical') and resultData:GetType('failOnCritical') eq JsonDataType:BOOLEAN then
      707           lbProbe.probefailOnCritical = resultData:GetLogical('failOnCritical').
      708   
      709         if resultData:Has('failedBy') and resultData:GetType('failedBy') eq JsonDataType:STRING then
      710           lbProbe.probeFailedBy = resultData:GetCharacter('failedBy').
      711   
      712       end.
      713   
      714     if pProbe:Has('probes') and pProbe:GetType('probes') eq JsonDataType:ARRAY then       
      715       do:
      716   
      717         assign
      718           probes = pProbe:GetJsonArray('probes')
      719           cnt    = probes:Length
      720         .
      721   
      722         do loop = 1 to cnt:
      723           run load_probe ( probes:GetJsonObject(loop), pParentId + 1, loop ).
      724         end.
      725   
      726       end.
      727   
      728     delete object resultData.
      729   
      730     return.
      731   
      732   end.
      733   
      734   &ENDIF
      735   
      736   
      737   procedure mon-init:
      738   
      739     return.
      740   
      741   end.
      742   
      743   
      744   procedure mon-update:
      745   
      746     define input parameter argList as character no-undo.
      747   
      748     define variable jsonFile as character no-undo.
      749     define variable errFile  as character no-undo.
      750   
      751     empty temp-table tt_pasoeInfo.
      752   
      753     seqId = 0.
      754   
      755   &IF DECIMAL(SUBSTRING(PROVERSION,1,INDEX(PROVERSION,".") + 1)) < 12.0 &THEN
      756   
      757     create tt_pasoeInfo.
      758     assign
      759       tt_pasoeInfo.xid         = 1
      760       tt_pasoeInfo.zLevel      = 0
      761       tt_pasoeInfo.zOrder      = 0
      762       tt_pasoeInfo.probeName   = "PASOE is only supported with OE12 or greater".
      763     .
      764   
      765   &ELSE
      766   
      767     define variable probeData as JsonObject no-undo.
      768   
      769     if opsys = "unix" then
      770       do:
      771         jsonFile = substitute( "&1/&2.&3", pt_tmpdir, pt_shortname, "pasoe.json" ).
      772         errFile  = substitute( "&1/&2.&3", pt_tmpdir, pt_shortname, "pasoe.err" ).
      773         os-command value( substitute( "pasoehc.sh > &1 2>&2", jsonFile, errFile )).
      774       end.
      775      else
      776       do:
      777         jsonFile = substitute( "&1~\&2.&3", pt_tmpdir, pt_shortname, "pasoe.json" ).
      778         errFile  = substitute( "&1~\&2.&3", pt_tmpdir, pt_shortname, "pasoe.err" ).
      779         os-command value( substitute( "pasoehc.bat > &1 2>&2", jsonFile, errFile )).
      780       end.
      781   
      782     probeData = cast(( new ObjectModelParser()):ParseFile( jsonFile ), JsonObject ).
      783   
      784     run load_Probe( probeData, 0, 0 ).
      785   
      786     delete object probeData.
      787   
      788   &ENDIF
      789   
      790     add2ds( temp-table tt_pasoeInfo:default-buffer-handle ).
      791   
      792     return.
      793   
      794   end.
      795   
      796   return.
