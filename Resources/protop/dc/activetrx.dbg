        1   /*******************************************************************************
        2    *******************************************************************************
        3    **                                                                           **
        4    **                                                                           **
        5    **  Copyright 2003-2006 Tom Bascom, Greenfield Technologies                  **
        6    **  http://www.greenfieldtech.com                                            **
        7    **                                                                           **
        8    **  ProTop is free software; you can redistribute it and/or modify it        **
        9    **  under the terms of the GNU General Public License (GPL) as published     **
       10    **  by the Free Software Foundation; either version 2 of the License, or     **
       11    **  at your option) any later version.                                       **
       12    **                                                                           **
       13    **  ProTop is distributed in the hope that it will be useful, but WITHOUT    **
       14    **  ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or    **
       15    **  FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License     **
       16    **  for more details.                                                        **
       17    **                                                                           **
       18    **  See TERMS.TXT for more information regarding the Terms and Conditions    **
       19    **  of use and alternative licensing options for this software.              **
       20    **                                                                           **
       21    **  A copy of the GPL is in GPL.TXT which was provided with this package.    **
       22    **                                                                           **
       23    **  See http://www.fsf.org for more information about the GPL.               **
       24    **                                                                           **
       25    **                                                                           **
       26    *******************************************************************************
       27    *******************************************************************************
       28    *
       29    * activetrx.p
       30    *
       31    *
       32    * Active trx monitoring (all TRX *except* "Allocated").
       33    *
       34    *
       35    * Author:
       36    *
       37    *      Tom Bascom, Greenfield Technologies
       38    *      http://www.greenfieldtech.com
       39    *      August 28, 2003
       40    *
       41    */
       42   
       43   
       44   /*******************************************************************************
       45    *******************************************************************************
       46    **                                                                           **
       47    **                                                                           **
       48    **  Copyright 2003-2006 Tom Bascom, Greenfield Technologies                  **
       49    **  http://www.greenfieldtech.com                                            **
       50    **                                                                           **
       51    **  ProTop is free software; you can redistribute it and/or modify it        **
       52    **  under the terms of the GNU General Public License (GPL) as published     **
       53    **  by the Free Software Foundation; either version 2 of the License, or     **
       54    **  at your option) any later version.                                       **
       55    **                                                                           **
       56    **  ProTop is distributed in the hope that it will be useful, but WITHOUT    **
       57    **  ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or    **
       58    **  FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License     **
       59    **  for more details.                                                        **
       60    **                                                                           **
       61    **  See TERMS.TXT for more information regarding the Terms and Conditions    **
       62    **  of use and alternative licensing options for this software.              **
       63    **                                                                           **
       64    **  A copy of the GPL is in GPL.TXT which was provided with this package.    **
       65    **                                                                           **
       66    **  See http://www.fsf.org for more information about the GPL.               **
       67    **                                                                           **
       68    **                                                                           **
       69    *******************************************************************************
       70    *******************************************************************************
       71    *
       72    * protop.i
       73    *
       74    * Header file for protop family of programs
       75    *
       76    *
       77    * Known Bugs & Issues:
       78    *
       79    *
       80    * To Do:
       81    *
       82    *
       83    * Author:
       84    *
       85    *      Tom Bascom, Greenfield Technologies
       86    *      http://www.greenfieldtech.com
       87    *      August 28, 2003
       88    *
       89    */
       90   
       91   &IF DECIMAL(SUBSTRING(PROVERSION,1,INDEX(PROVERSION,".") + 1)) >= 11.4 &THEN
       92   &global-define  FASTLOCK        true
       93   &ELSE
       94   &global-define  FASTLOCK        false
       95   &ENDIF
       96   
       97   &IF DECIMAL(SUBSTRING(PROVERSION,1,INDEX(PROVERSION,".") + 1)) >= 11.0 &THEN
       98   &global-define  OE11            "yes"
       99   &global-define  xDEBUGTT        false
      100   &ENDIF
      101   
      102   &IF DECIMAL(SUBSTRING(PROVERSION,1,INDEX(PROVERSION,".") + 1)) >= 10.2 AND PROVERSION >= "10.2B" &THEN
      103   &global-define  NOSERIALIZE     serialize-hidden
      104   &ENDIF
      105   
      106   &IF DECIMAL(SUBSTRING(PROVERSION,1,INDEX(PROVERSION,".") + 1)) >= 10.1 AND PROVERSION >= "10.1B" &THEN
      107   &global-define  BIGINT          int64
      108   &ELSE
      109   &global-define  BIGINT          decimal
      110   &ENDIF
      111   
      112   
      113   /* lib/v9.i
      114    *
      115    */
      116   
      117   &IF DECIMAL(SUBSTRING(PROVERSION,1,INDEX(PROVERSION,".") + 1)) < 10.0 &THEN
      118   &global-define  CPYLOB  "no"
      119   &global-define  NOW     substitute( "&1 &2", today, string( time, "hh:mm:ss" ))
      120   &global-define  LNGCR   character
      121   &global-define  DTZ     integer
      122   &global-define  BIGINT  decimal
      123   &ELSE
      124   &global-define  OE10    "yes"
      125   &global-define  NOW     now
      126   &global-define  LNGCR   longchar
      127   &global-define  DTZ     datetime-tz
      128   &global-define  BIGINT  int64
      129   &ENDIF
      130    
      131   
      132   /* use extended _connect fields: -client, -cache*
      133    */
      134   
      135   &IF DECIMAL(SUBSTRING(PROVERSION,1,INDEX(PROVERSION,".") + 1)) >= 10.1 AND PROVERSION >= "10.1C" &THEN
      136   &global-define  CONNECTX        "yes"
      137   &ELSE
      138   &global-define  CONNECTX        "no"
      139   &ENDIF
      140   
      141   define stream inStrm.
      142   
      143   define new global shared variable dbgMode as integer no-undo initial 1.
      144   
      145   /* The values for these are defined in etc/protop.cfg and set by lib/protop-cfg.p
      146    *
      147    * someday everyone will have OO and I will replace these with a gsv class
      148    * or something of that ilk
      149    *
      150    */
      151   
      152   define new global shared variable pt_shortname   as character no-undo.
      153   define new global shared variable pt_uniqName    as character no-undo.
      154   define new global shared variable pt_server      as character no-undo.
      155   define new global shared variable pt_resrcType   as character no-undo.
      156   
      157   define new global shared variable pt_tmpdir      as character no-undo initial "/tmp".
      158   define new global shared variable pt_logdir      as character no-undo initial "/tmp".
      159   define new global shared variable pt_rptdir      as character no-undo initial "/tmp".
      160   define new global shared variable pt_logname     as character no-undo initial "&5.&2.&3".
      161   define new global shared variable pt_mailcmd     as character no-undo initial 'mailx "-s &1" '.
      162   
      163   define new global shared variable pt_votrx       as integer   no-undo initial 1800.
      164   define new global shared variable pt_lktbllim    as integer   no-undo initial 0.
      165   define new global shared variable pt_bkupstale   as integer   no-undo initial 26.
      166   define new global shared variable pt_bogomips    as integer   no-undo initial 1000000.
      167   define new global shared variable pt_ioresp      as integer   no-undo initial 100.
      168   define new global shared variable pt_ioFileName  as character no-undo.
      169   define new global shared variable pt_dfCmd       as character no-undo.
      170   
      171   define new global shared variable pt_AICheckInterval   as integer no-undo initial 60.
      172   define new global shared variable pt_PICACheckInterval as integer no-undo initial 60.
      173   define new global shared variable pt_appsrvStuck       as integer no-undo initial 120.
      174   
      175   define new global shared variable pt_bibkupAlert as integer   no-undo.          /* alert on long bi backup phase                */
      176   define new global shared variable pt_bibkupAlarm as integer   no-undo.          /* alarm on long bi backup phase                */
      177   define new global shared variable pt_bibkupPage  as integer   no-undo.          /* page  on long bi backup phase                */
      178   
      179   define new global shared variable pt_bkupAlert   as integer   no-undo.          /* alert on long db backup                      */
      180   define new global shared variable pt_bkupAlarm   as integer   no-undo.          /* alarm on long db backup                      */
      181   define new global shared variable pt_bkupPage    as integer   no-undo.          /* page  on long db backup                      */
      182   
      183   define new global shared variable pt_userLock    as logical   no-undo.          /* enable _userLock  data?                      */
      184   define new global shared variable pt_doZippy     as logical   no-undo.          /* enable "user experience" (aka "zippy")?      */
      185   define new global shared variable pt_useRFUtil   as logical   no-undo.          /* use rfutil to gather after-imaging status?   */
      186   
      187   define new global shared variable pt_updAreaData as integer   no-undo.          /* how often should we report storage area xref details from dbanalys? */
      188   
      189   define new global shared variable pt_zoomTo      as integer no-undo.            /* new zoomed monInt                            */
      190   
      191   define new global shared variable ptDBName     as character no-undo.                    /* the db logical name          */
      192   define new global shared variable rowLimit     as integer   no-undo initial 100.        /* 50?                          */
      193   
      194   /* do-sumSample() manipulates these -- ugly, ugly, ugly... (obsolete?)
      195    * 
      196    */
      197   
      198   define new global shared variable stime as integer no-undo.                     /* start time                           */
      199   define new global shared variable ltime as integer no-undo.                     /* last time                            */
      200   define new global shared variable xtime as integer no-undo.                     /* total time                           */
      201   define new global shared variable itime as integer no-undo.                     /* iteration time                       */
      202   
      203   define new global shared variable chkp-base   as integer no-undo initial ?.     /* cover for the lack of a VST field    */
      204   
      205                                                                                   /* corresponding to base checkpoint#    */
      206   /** Global Shared Temp Table Definitions
      207    **
      208    ** Yup, they're shared.  But this stuff makes no sense across session boundaries anyway.
      209    ** And a shared temp-table is logically the same as a db table so who really cares?
      210    **
      211    **/
      212   
      213   /* cache _File and _Index records so that we don't keep hitting the db to translate
      214    */
      215   
      216   define new global shared temp-table tt_tbl no-undo
      217     field xid      as integer                                             /* _File._File-Num              */
      218     field tstatid  as integer                                             /* _TableStat._TableStat-Id     */
      219     field areaNum  as integer                                             /* _Storage-Object._Area-Number */
      220     field tblPool  as character                                           /* get-bits( _object-attrib, 7, 1 ) = 1 */
      221     field tblname  as character                                           /* _File._File-Name             */
      222     index xid-idx is unique primary xid.
      223   
      224   define new global shared temp-table tt_idx no-undo
      225     field xid      as integer                                             /* _Index._Idx-Num              */
      226     field istatid  as integer                                             /* _IndexStat._IndexStat-Id     */
      227     field idxname  as character                                           /* _Index._Idx-Name             */
      228     field idxnote  as character
      229     field idxRoot  as int64                                           /* _Storage-Object._Object-Root */
      230     field tblnum   as integer                                             /* _File._File-Num              */
      231     field areaNum  as integer                                             /* _Storage-Object._Area-Number */
      232     field idxPool  as character                                           /* get-bits( _object-attrib, 7, 1 ) = 1 */
      233     field tblname  as character                                           /* _File._File-Name             */
      234     index xid-idx is unique primary xid.
      235   
      236   define new global shared temp-table tt_areaExtent no-undo
      237     field areaNum  as integer                                             /* _areaExtent._Area-Number     */
      238     field extNum   as integer                                             /* _areaExtent._Extent-Number   */
      239   
      240     field extSize  as decimal                                             /* _areaExtent._Extent-Size     */
      241     field extType  as integer                                             /* _areaExtent._Extent-Type     */
      242     field extPath  as character                                           /* _areaExtent._Extent-Path     */
      243   
      244     index ae-idx is unique primary areaNum extNum.
      245   
      246   define new global shared temp-table tt_area no-undo
      247     field xid      as integer    format ">>>9"
      248     field SANum    as integer    format ">>>9"        label "#"
      249     field areaPool as character  format "x(2)"        label "BX"
      250   /*field areaStatus-Id as {&BIGINT} format ">>>9"    label "Id" */
      251     field SAName   as character  format "x(30)"       label "Area Name"
      252     field allocGB  as decimal    format ">>>>>9.99"   label "Allocated"
      253     field varGB    as decimal    format ">>>>>9.99"   label "Variable"
      254     field totGB    as decimal    format ">>>>>>9.99"  label "Tot GB"
      255     field hiGB     as decimal    format ">>>>>9.99"   label "Hi Water" serialize-hidden
      256     field freeGB   as decimal    format ">>>>>9.99"   label "Free GB"
      257     field pctAlloc as decimal    format ">>>>>9%"     label "%Alloc"
      258     field pctLastX as decimal    format ">>>>9%"      label "%LastX"
      259   
      260     field blkszkb as integer     format ">>9"         label "BSZ"
      261     field rpb     as integer     format ">>9"         label "RPB"
      262     field clstrsz as integer     format ">>9"         label "CSZ"
      263   
      264     field numTbls as integer     format ">>>>9"       label "#Tbls"
      265     field numIdxs as integer     format ">>>>9"       label "#Idxs"
      266     field numLOBs as integer     format ">>>>9"       label "#LOBs"
      267   
      268     field numExts as integer     format ">>>>9"       label "#Exts"
      269     field hasVar  as logical     format "Yes/No"      label "Var?"
      270   
      271     field xnote   as character   format "x"           label "*"
      272   
      273     field areaMaxPct as decimal  format ">>9.999%"    label "Max%"
      274     field idx3264    as decimal  format ">>9.999%"    label "Bug%"
      275   
      276     index pctAlloc-idx is primary pctAlloc descending
      277     index pctLastX-idx pctLastX pctAlloc descending
      278     index allocGB-idx allocGB descending
      279     index totGB-idx totGB descending
      280     index xid-idx is unique xid
      281     index SANum-idx is unique SANum
      282     index SAName-idx is unique SAName
      283   .
      284   
      285   *** Encrypted Source ***
      286   *** Encrypted Source ***
      287   *** Encrypted Source ***
      288   *** Encrypted Source ***
      289   *** Encrypted Source ***
      290   *** Encrypted Source ***
      291   *** Encrypted Source ***
      292   *** Encrypted Source ***
      293   *** Encrypted Source ***
      294   *** Encrypted Source ***
      295   *** Encrypted Source ***
      296   *** Encrypted Source ***
      297   *** Encrypted Source ***
      298   *** Encrypted Source ***
      299   *** Encrypted Source ***
      300   *** Encrypted Source ***
      301   *** Encrypted Source ***
      302   *** Encrypted Source ***
      303   *** Encrypted Source ***
      304   *** Encrypted Source ***
      305   *** Encrypted Source ***
      306   *** Encrypted Source ***
      307   *** Encrypted Source ***
      308   *** Encrypted Source ***
      309   *** Encrypted Source ***
      310   *** Encrypted Source ***
      311   *** Encrypted Source ***
      312   *** Encrypted Source ***
      313   *** Encrypted Source ***
      314   *** Encrypted Source ***
      315   *** Encrypted Source ***
      316   *** Encrypted Source ***
      317   *** Encrypted Source ***
      318   *** Encrypted Source ***
      319   *** Encrypted Source ***
      320   *** Encrypted Source ***
      321   *** Encrypted Source ***
      322   *** Encrypted Source ***
      323   *** Encrypted Source ***
      324   *** Encrypted Source ***
      325   *** Encrypted Source ***
      326   *** Encrypted Source ***
      327   *** Encrypted Source ***
      328   *** Encrypted Source ***
      329   *** Encrypted Source ***
      330   *** Encrypted Source ***
      331   *** Encrypted Source ***
      332   *** Encrypted Source ***
      333   *** Encrypted Source ***
      334   *** Encrypted Source ***
      335   *** Encrypted Source ***
      336   *** Encrypted Source ***
      337   *** Encrypted Source ***
      338   *** Encrypted Source ***
      339   *** Encrypted Source ***
      340   *** Encrypted Source ***
      341   *** Encrypted Source ***
      342   *** Encrypted Source ***
      343   *** Encrypted Source ***
      344   *** Encrypted Source ***
      345   *** Encrypted Source ***
      346   *** Encrypted Source ***
      347   *** Encrypted Source ***
      348   *** Encrypted Source ***
      349   *** Encrypted Source ***
      350   *** Encrypted Source ***
      351   *** Encrypted Source ***
      352   *** Encrypted Source ***
      353   *** Encrypted Source ***
      354   *** Encrypted Source ***
      355    
      356   
      357   /*******************************************************************************
      358    *******************************************************************************
      359    **                                                                           **
      360    **                                                                           **
      361    **  Copyright 2003-2006 Tom Bascom, Greenfield Technologies                  **
      362    **  http://www.greenfieldtech.com                                            **
      363    **                                                                           **
      364    **  ProTop is free software; you can redistribute it and/or modify it        **
      365    **  under the terms of the GNU General Public License (GPL) as published     **
      366    **  by the Free Software Foundation; either version 2 of the License, or     **
      367    **  at your option) any later version.                                       **
      368    **                                                                           **
      369    **  ProTop is distributed in the hope that it will be useful, but WITHOUT    **
      370    **  ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or    **
      371    **  FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License     **
      372    **  for more details.                                                        **
      373    **                                                                           **
      374    **  See TERMS.TXT for more information regarding the Terms and Conditions    **
      375    **  of use and alternative licensing options for this software.              **
      376    **                                                                           **
      377    **  A copy of the GPL is in GPL.TXT which was provided with this package.    **
      378    **                                                                           **
      379    **  See http://www.fsf.org for more information about the GPL.               **
      380    **                                                                           **
      381    **                                                                           **
      382    *******************************************************************************
      383    *******************************************************************************
      384    *
      385    * protoplib.i
      386    *
      387    * ProTop infrastructure library definitions
      388    *
      389    */
      390   
      391   function uDateTime returns integer () in super.
      392   function string2uDateTime returns integer( input p_text as character ) in super.
      393   function searchDir returns character ( input xDir as character ) in super.
      394   function unsignMe returns decimal ( input s as decimal, input i as integer ) in super.
      395   function hr returns decimal ( input lr as decimal, input osr as decimal, output hr-str as character, output hr as decimal, output mr as decimal ) in super.
      396   function do-SumSample returns logical ( output p_index as integer, output p_time  as integer ) in super.
      397   function myPID returns character () in super.
      398   function hilite returns logical ( input b as handle, input p_metric as character, input p_value as character, output p_attr as character ) in super.
      399   
      400   /* end protoplib.i */
      401    
      402   
      403   /*******************************************************************************
      404    *******************************************************************************
      405    **                                                                           **
      406    **                                                                           **
      407    **  Copyright 2003-2006 Tom Bascom, Greenfield Technologies                  **
      408    **  http://www.greenfieldtech.com                                            **
      409    **                                                                           **
      410    **  ProTop is free software; you can redistribute it and/or modify it        **
      411    **  under the terms of the GNU General Public License (GPL) as published     **
      412    **  by the Free Software Foundation; either version 2 of the License, or     **
      413    **  at your option) any later version.                                       **
      414    **                                                                           **
      415    **  ProTop is distributed in the hope that it will be useful, but WITHOUT    **
      416    **  ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or    **
      417    **  FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License     **
      418    **  for more details.                                                        **
      419    **                                                                           **
      420    **  See TERMS.TXT for more information regarding the Terms and Conditions    **
      421    **  of use and alternative licensing options for this software.              **
      422    **                                                                           **
      423    **  A copy of the GPL is in GPL.TXT which was provided with this package.    **
      424    **                                                                           **
      425    **  See http://www.fsf.org for more information about the GPL.               **
      426    **                                                                           **
      427    **                                                                           **
      428    *******************************************************************************
      429    *******************************************************************************
      430    *
      431    * vstlib.i
      432    *
      433    * VST library definitions
      434    *
      435    */
      436   
      437   function aiInfo returns character ( input vAiFile as character, output vAiGenNum as integer ) in super.
      438   function chkai returns integer ( output ai_exts as integer, output ai_full as integer, output ai_empty as integer ) in super.
      439   function chkarea returns integer ( input threshold as decimal, output worst as decimal ) in super.
      440   function chkptNum returns integer ( input-output oldbi as integer ) in super.
      441   
      442   function connectFlags returns character ( input cnxId as integer ) in super.
      443   function connectName returns character ( input cnxId as integer, input cnxFlags as character ) in super.
      444   function lastStatement returns character( input cnxId as integer, output lineNum as integer, output procName as character ) in super.
      445   
      446   function isAIEnabled returns logical () in super.
      447   function isReplSource returns logical () in super.
      448   function isReplTarget returns logical () in super.
      449   function isBackupRunning returns logical () in super.
      450   function isWorkgroup returns logical () in super.
      451   
      452   function getStartupX returns character ( input v as character, input p1 as character, input p2 as character ) in super.
      453   
      454   /* end vstlib.i */
      455    
      456   
      457   function add2ds returns logical ( input h as handle ) in super.
      458   function getTempTableHandle returns handle ( input n as character ) in super.
      459   
      460   /* end protop.i */
      461    
      462   
      463   define output parameter dcDescription as character no-undo initial "ActiveTRX".
      464   
      465   define temp-table tt_trx no-undo
      466     field xid       as integer   format ">>>>>>>>>9"    label "Id"
      467     field usrnum    as integer   format ">>>>9"         label "Usr#"
      468   &IF DEFINED( OE11 ) &THEN
      469     field tId       as integer   format "->>>>9"        label "Tenant"
      470   &ENDIF
      471     field userName  as character format "x(15)"         label "Name"
      472     field userPID   as character format "x(8)"          label "PID"
      473     field userFlags as character format "x(5)"          label "Flags"
      474     field userDev   as character format "x(16)"         label "Device"
      475     field trx-num   as integer   format ">>>>>>>>>9"    label "TRX#"
      476     field trx-rl    as integer   format ">>>>>>>>9"     label "BI Clstr"
      477     field trx-st    as character format "x(4)"          label "Stat"
      478     field xtime     as character format "x(13)"         label "Start"
      479     field duraStr   as character format "x(12)"         label "    Duration"
      480   &IF DEFINED( OE11 ) &THEN
      481     field trx-wait  as character format "x(55)"         label "Wait Resource (dbkey)"
      482   &ELSE
      483     field trx-wait  as character format "x(62)"         label "Wait Resource (dbkey)"
      484   &ENDIF
      485     field duration  as integer   format ">>>>>9"        label " Len" serialize-hidden
      486   
      487     index xid-idx is unique xid
      488     index duraStr-idx is primary duraStr descending
      489   
      490   &IF DEFINED( OE11 ) &THEN
      491     index tId-idx   tId
      492   &ENDIF
      493   
      494   .
      495   
      496   
      497   /* lib/dumpTT.i
      498    *
      499    * simplified to a single line -- include should be eliminated.
      500    *
      501    */
      502   
      503   &IF DECIMAL(SUBSTRING(PROVERSION,1,INDEX(PROVERSION,".") + 1)) >= 10.1 &THEN
      504   /*** +++
      505   file-info:file-name = "./ptdefs".
      506   if file-info:full-pathname <> ? and index( file-info:file-type, "d" ) > 0 and index( file-info:file-type, "w" ) > 0 then
      507     do:
      508   
      509       file-info:file-name = "./ptdefs/{1}.xsd".
      510   
      511       if true /* file-info:full-pathname = ? or file-info:file-size = 0 */ then
      512         do:
      513   
      514           temp-table {1}:write-xmlschema(
      515             "file",
      516   /*        substitute( "ptdefs/&1.xsd", "{1}" ), */
      517   /*        "./ptdefs/{1}.xsd", */
      518             ( if opsys = "unix" then "./ptdefs/{1}.xsd" else ".~\ptdefs~\{1}.xsd" ),
      519             true
      520   
      521         &IF DECIMAL(SUBSTRING(PROVERSION,1,INDEX(PROVERSION,".") + 1)) >= 10.2
      522         &THEN
      523             , ?, ?, ?
      524         &ENDIF
      525   
      526       ).
      527   
      528       end.
      529   
      530     end.
      531    +++ ***/
      532   &ENDIF
      533    
      534   
      535   define new global shared variable rowLimit as integer no-undo.
      536   
      537   procedure mon-init:
      538   
      539     empty temp-table tt_trx.
      540   
      541     return.
      542   
      543   end.
      544   
      545   procedure mon-update:
      546   
      547     define input parameter argList as character no-undo.
      548   
      549     define variable i as integer no-undo.
      550   
      551     empty temp-table tt_trx.      /* Yes, empty it every time -- this is a snapshot       */
      552   
      553     /* Get open transaction data from _Trans VST
      554      *
      555      */
      556   
      557     find dictdb._ActSummary no-lock.
      558   
      559     for each dictdb._Trans no-lock where _Trans-usrnum <> ? /* and _Trans-state <> "allocated" */ /* and _Trans-duration <> ? */ by _Trans-duration descending:
      560   
      561       if _Trans-duration >= _Summary-upTime then next.            /* every now and then a crazy duration appears */
      562   
      563       i = i + 1.
      564   
      565       create tt_trx.
      566       assign
      567         tt_trx.xid      = _Trans-id
      568         tt_trx.xtime    = ( if _Trans-txtime <> ? then substring( _Trans-txtime, 12 ) else "" )
      569         tt_trx.usrnum   = _Trans-usrnum
      570         tt_trx.trx-num  = _Trans-num
      571         tt_trx.trx-rl   = _Trans-counter
      572         tt_trx.trx-st   = _Trans-state
      573         tt_trx.duration = ( if _Trans-duration <> ? then _Trans-duration else 0 )
      574         tt_trx.duraStr  = string( integer( truncate( tt_trx.duration / 86400, 0 )), ">>>" ) + " " + string( tt_trx.duration, "hh:mm:ss" )
      575       .
      576   
      577       case tt_trx.trx-st:
      578         when "ALLOCATED"  then tt_trx.trx-st = "ALLO".
      579         when "ACTIVE"     then tt_trx.trx-st = "ACTV".
      580         when "DEAD"       then tt_trx.trx-st = "DEAD".
      581         when "COMMITTING" then tt_trx.trx-st = "COMM".
      582         when "PREPARING"  then tt_trx.trx-st = "PRPG".
      583         when "PREPARED"   then tt_trx.trx-st = "PRPD".
      584       end.
      585   
      586       /* get some info about the session that started the trx
      587        *
      588        */
      589   
      590       /* About usr#
      591        *
      592        * PROMON = usr#
      593        * .lg file = usr#
      594        * _myconnection.myconn-userid = usr#
      595        * _connection._connect-usr = usr#
      596        * _connection._connection-id = usr# + 1
      597        *
      598        * _connection-id is a *much* more efficient way to access _connect -- thus we
      599        * jump through hoops (add one to the usr#)
      600        *
      601        */
      602   
      603       find dictdb._Connect no-lock where _Connect-id = _Trans-usrnum + 1 no-error.
      604   
      605       if available _Connect then
      606         assign
      607           tt_trx.userFlags = connectFlags( _Connect-Id )
      608           tt_trx.userName  = connectName( _Connect-Id, tt_trx.userFlags )
      609           tt_trx.userPID   = string( _connect-PID )
      610           tt_trx.userDev   = _connect-Device
      611           tt_trx.trx-wait  = ( if available _Connect then ( string( _Connect-wait ) + " " + string( _Connect-wait1 )) else "" )
      612         .
      613   
      614       /* if ( rowLimit > 0 ) and ( i >= rowLimit ) then leave. */         /* need a sort order!   */
      615   
      616     end.
      617   
      618     add2ds( temp-table tt_trx:default-buffer-handle ).
      619   
      620     return.
      621   
      622   end.
      623   
      624   *** Encrypted Source ***
      625   *** Encrypted Source ***
      626   *** Encrypted Source ***
      627   *** Encrypted Source ***
      628   *** Encrypted Source ***
      629   *** Encrypted Source ***
      630   *** Encrypted Source ***
      631   *** Encrypted Source ***
      632   *** Encrypted Source ***
      633   *** Encrypted Source ***
      634   *** Encrypted Source ***
      635   *** Encrypted Source ***
      636   *** Encrypted Source ***
      637   *** Encrypted Source ***
      638   *** Encrypted Source ***
      639   *** Encrypted Source ***
      640   *** Encrypted Source ***
      641   *** Encrypted Source ***
      642   *** Encrypted Source ***
      643   *** Encrypted Source ***
      644   *** Encrypted Source ***
      645   *** Encrypted Source ***
      646   *** Encrypted Source ***
      647   *** Encrypted Source ***
      648   *** Encrypted Source ***
      649   *** Encrypted Source ***
      650   *** Encrypted Source ***
      651   *** Encrypted Source ***
      652   *** Encrypted Source ***
      653   *** Encrypted Source ***
      654   *** Encrypted Source ***
      655   *** Encrypted Source ***
      656   *** Encrypted Source ***
      657   *** Encrypted Source ***
      658   *** Encrypted Source ***
      659   *** Encrypted Source ***
      660   *** Encrypted Source ***
      661   *** Encrypted Source ***
      662   *** Encrypted Source ***
      663   *** Encrypted Source ***
      664   *** Encrypted Source ***
      665   *** Encrypted Source ***
      666   *** Encrypted Source ***
      667   *** Encrypted Source ***
      668   *** Encrypted Source ***
      669   *** Encrypted Source ***
      670   *** Encrypted Source ***
      671   *** Encrypted Source ***
      672   *** Encrypted Source ***
      673   *** Encrypted Source ***
      674   *** Encrypted Source ***
      675   *** Encrypted Source ***
      676   *** Encrypted Source ***
      677   *** Encrypted Source ***
      678   *** Encrypted Source ***
      679   *** Encrypted Source ***
      680   *** Encrypted Source ***
      681   *** Encrypted Source ***
      682   *** Encrypted Source ***
      683   *** Encrypted Source ***
      684   *** Encrypted Source ***
      685   *** Encrypted Source ***
      686   *** Encrypted Source ***
      687   *** Encrypted Source ***
      688   *** Encrypted Source ***
      689   *** Encrypted Source ***
      690   *** Encrypted Source ***
      691   *** Encrypted Source ***
      692   *** Encrypted Source ***
      693   *** Encrypted Source ***
      694   *** Encrypted Source ***
      695   *** Encrypted Source ***
      696   *** Encrypted Source ***
      697   *** Encrypted Source ***
      698   *** Encrypted Source ***
      699   *** Encrypted Source ***
      700   *** Encrypted Source ***
      701   *** Encrypted Source ***
      702   *** Encrypted Source ***
      703   *** Encrypted Source ***
      704   *** Encrypted Source ***
      705   *** Encrypted Source ***
      706   *** Encrypted Source ***
      707   *** Encrypted Source ***
      708   *** Encrypted Source ***
      709   *** Encrypted Source ***
      710   *** Encrypted Source ***
      711    
      712   
      713   return.
