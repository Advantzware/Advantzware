        1   /*******************************************************************************
        2    *******************************************************************************
        3    **                                                                           **
        4    **                                                                           **
        5    **  Copyright 2003-2012 Tom Bascom, Greenfield Technologies                  **
        6    **  http://www.greenfieldtech.com                                            **
        7    **                                                                           **
        8    **  ProTop is free software; you can redistribute it and/or modify it        **
        9    **  under the terms of the GNU General Public License (GPL) as published     **
       10    **  by the Free Software Foundation; either version 2 of the License, or     **
       11    **  at your option) any later version.                                       **
       12    **                                                                           **
       13    **  ProTop is distributed in the hope that it will be useful, but WITHOUT    **
       14    **  ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or    **
       15    **  FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License     **
       16    **  for more details.                                                        **
       17    **                                                                           **
       18    **  See TERMS.TXT for more information regarding the Terms and Conditions    **
       19    **  of use and alternative licensing options for this software.              **
       20    **                                                                           **
       21    **  A copy of the GPL is in GPL.TXT which was provided with this package.    **
       22    **                                                                           **
       23    **  See http://www.fsf.org for more information about the GPL.               **
       24    **                                                                           **
       25    **                                                                           **
       26    *******************************************************************************
       27    *******************************************************************************
       28    *
       29    * replication.p
       30    *
       31    *
       32    * Replication Information.
       33    *
       34    *
       35    * Author:
       36    *
       37    *      Tom Bascom, Greenfield Technologies
       38    *      http://www.greenfieldtech.com
       39    *      September 5, 2003
       40    *
       41    */
       42   
       43   
       44   /*******************************************************************************
       45    *******************************************************************************
       46    **                                                                           **
       47    **                                                                           **
       48    **  Copyright 2003-2006 Tom Bascom, Greenfield Technologies                  **
       49    **  http://www.greenfieldtech.com                                            **
       50    **                                                                           **
       51    **  ProTop is free software; you can redistribute it and/or modify it        **
       52    **  under the terms of the GNU General Public License (GPL) as published     **
       53    **  by the Free Software Foundation; either version 2 of the License, or     **
       54    **  at your option) any later version.                                       **
       55    **                                                                           **
       56    **  ProTop is distributed in the hope that it will be useful, but WITHOUT    **
       57    **  ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or    **
       58    **  FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License     **
       59    **  for more details.                                                        **
       60    **                                                                           **
       61    **  See TERMS.TXT for more information regarding the Terms and Conditions    **
       62    **  of use and alternative licensing options for this software.              **
       63    **                                                                           **
       64    **  A copy of the GPL is in GPL.TXT which was provided with this package.    **
       65    **                                                                           **
       66    **  See http://www.fsf.org for more information about the GPL.               **
       67    **                                                                           **
       68    **                                                                           **
       69    *******************************************************************************
       70    *******************************************************************************
       71    *
       72    * protop.i
       73    *
       74    * Header file for protop family of programs
       75    *
       76    *
       77    * Known Bugs & Issues:
       78    *
       79    *
       80    * To Do:
       81    *
       82    *
       83    * Author:
       84    *
       85    *      Tom Bascom, Greenfield Technologies
       86    *      http://www.greenfieldtech.com
       87    *      August 28, 2003
       88    *
       89    */
       90   
       91   &IF DECIMAL(SUBSTRING(PROVERSION,1,INDEX(PROVERSION,".") + 1)) >= 11.4 &THEN
       92   &global-define  FASTLOCK        true
       93   &ELSE
       94   &global-define  FASTLOCK        false
       95   &ENDIF
       96   
       97   &IF DECIMAL(SUBSTRING(PROVERSION,1,INDEX(PROVERSION,".") + 1)) >= 11.0 &THEN
       98   &global-define  OE11            "yes"
       99   &global-define  xDEBUGTT        false
      100   &ENDIF
      101   
      102   &IF DECIMAL(SUBSTRING(PROVERSION,1,INDEX(PROVERSION,".") + 1)) >= 10.2 AND PROVERSION >= "10.2B" &THEN
      103   &global-define  NOSERIALIZE     serialize-hidden
      104   &ENDIF
      105   
      106   &IF DECIMAL(SUBSTRING(PROVERSION,1,INDEX(PROVERSION,".") + 1)) >= 10.1 AND PROVERSION >= "10.1B" &THEN
      107   &global-define  BIGINT          int64
      108   &ELSE
      109   &global-define  BIGINT          decimal
      110   &ENDIF
      111   
      112   
      113   /* lib/v9.i
      114    *
      115    */
      116   
      117   &IF DECIMAL(SUBSTRING(PROVERSION,1,INDEX(PROVERSION,".") + 1)) < 10.0 &THEN
      118   &global-define  CPYLOB  "no"
      119   &global-define  NOW     substitute( "&1 &2", today, string( time, "hh:mm:ss" ))
      120   &global-define  LNGCR   character
      121   &global-define  DTZ     integer
      122   &global-define  BIGINT  decimal
      123   &ELSE
      124   &global-define  OE10    "yes"
      125   &global-define  NOW     now
      126   &global-define  LNGCR   longchar
      127   &global-define  DTZ     datetime-tz
      128   &global-define  BIGINT  int64
      129   &ENDIF
      130    
      131   
      132   /* use extended _connect fields: -client, -cache*
      133    */
      134   
      135   &IF DECIMAL(SUBSTRING(PROVERSION,1,INDEX(PROVERSION,".") + 1)) >= 10.1 AND PROVERSION >= "10.1C" &THEN
      136   &global-define  CONNECTX        "yes"
      137   &ELSE
      138   &global-define  CONNECTX        "no"
      139   &ENDIF
      140   
      141   define stream inStrm.
      142   
      143   define new global shared variable dbgMode as integer no-undo initial 1.
      144   
      145   /* The values for these are defined in etc/protop.cfg and set by lib/protop-cfg.p
      146    *
      147    * someday everyone will have OO and I will replace these with a gsv class
      148    * or something of that ilk
      149    *
      150    */
      151   
      152   define new global shared variable pt_shortname   as character no-undo.
      153   define new global shared variable pt_uniqName    as character no-undo.
      154   define new global shared variable pt_server      as character no-undo.
      155   define new global shared variable pt_resrcType   as character no-undo.
      156   
      157   define new global shared variable pt_tmpdir      as character no-undo initial "/tmp".
      158   define new global shared variable pt_logdir      as character no-undo initial "/tmp".
      159   define new global shared variable pt_rptdir      as character no-undo initial "/tmp".
      160   define new global shared variable pt_logname     as character no-undo initial "&5.&2.&3".
      161   define new global shared variable pt_mailcmd     as character no-undo initial 'mailx "-s &1" '.
      162   
      163   define new global shared variable pt_votrx       as integer   no-undo initial 1800.
      164   define new global shared variable pt_lktbllim    as integer   no-undo initial 0.
      165   define new global shared variable pt_bkupstale   as integer   no-undo initial 26.
      166   define new global shared variable pt_bogomips    as integer   no-undo initial 1000000.
      167   define new global shared variable pt_ioresp      as integer   no-undo initial 100.
      168   define new global shared variable pt_ioFileName  as character no-undo.
      169   define new global shared variable pt_dfCmd       as character no-undo.
      170   
      171   define new global shared variable pt_AICheckInterval   as integer no-undo initial 60.
      172   define new global shared variable pt_PICACheckInterval as integer no-undo initial 60.
      173   define new global shared variable pt_appsrvStuck       as integer no-undo initial 120.
      174   
      175   define new global shared variable pt_bibkupAlert as integer   no-undo.          /* alert on long bi backup phase                */
      176   define new global shared variable pt_bibkupAlarm as integer   no-undo.          /* alarm on long bi backup phase                */
      177   define new global shared variable pt_bibkupPage  as integer   no-undo.          /* page  on long bi backup phase                */
      178   
      179   define new global shared variable pt_bkupAlert   as integer   no-undo.          /* alert on long db backup                      */
      180   define new global shared variable pt_bkupAlarm   as integer   no-undo.          /* alarm on long db backup                      */
      181   define new global shared variable pt_bkupPage    as integer   no-undo.          /* page  on long db backup                      */
      182   
      183   define new global shared variable pt_userLock    as logical   no-undo.          /* enable _userLock  data?                      */
      184   define new global shared variable pt_doZippy     as logical   no-undo.          /* enable "user experience" (aka "zippy")?      */
      185   define new global shared variable pt_useRFUtil   as logical   no-undo.          /* use rfutil to gather after-imaging status?   */
      186   
      187   define new global shared variable pt_updAreaData as integer   no-undo.          /* how often should we report storage area xref details from dbanalys? */
      188   
      189   define new global shared variable pt_zoomTo      as integer no-undo.            /* new zoomed monInt                            */
      190   
      191   define new global shared variable ptDBName     as character no-undo.                    /* the db logical name          */
      192   define new global shared variable rowLimit     as integer   no-undo initial 100.        /* 50?                          */
      193   
      194   /* do-sumSample() manipulates these -- ugly, ugly, ugly... (obsolete?)
      195    * 
      196    */
      197   
      198   define new global shared variable stime as integer no-undo.                     /* start time                           */
      199   define new global shared variable ltime as integer no-undo.                     /* last time                            */
      200   define new global shared variable xtime as integer no-undo.                     /* total time                           */
      201   define new global shared variable itime as integer no-undo.                     /* iteration time                       */
      202   
      203   define new global shared variable chkp-base   as integer no-undo initial ?.     /* cover for the lack of a VST field    */
      204   
      205                                                                                   /* corresponding to base checkpoint#    */
      206   /** Global Shared Temp Table Definitions
      207    **
      208    ** Yup, they're shared.  But this stuff makes no sense across session boundaries anyway.
      209    ** And a shared temp-table is logically the same as a db table so who really cares?
      210    **
      211    **/
      212   
      213   /* cache _File and _Index records so that we don't keep hitting the db to translate
      214    */
      215   
      216   define new global shared temp-table tt_tbl no-undo
      217     field xid      as integer                                             /* _File._File-Num              */
      218     field tstatid  as integer                                             /* _TableStat._TableStat-Id     */
      219     field areaNum  as integer                                             /* _Storage-Object._Area-Number */
      220     field tblPool  as character                                           /* get-bits( _object-attrib, 7, 1 ) = 1 */
      221     field tblname  as character                                           /* _File._File-Name             */
      222     index xid-idx is unique primary xid.
      223   
      224   define new global shared temp-table tt_idx no-undo
      225     field xid      as integer                                             /* _Index._Idx-Num              */
      226     field istatid  as integer                                             /* _IndexStat._IndexStat-Id     */
      227     field idxname  as character                                           /* _Index._Idx-Name             */
      228     field idxnote  as character
      229     field idxRoot  as int64                                           /* _Storage-Object._Object-Root */
      230     field tblnum   as integer                                             /* _File._File-Num              */
      231     field areaNum  as integer                                             /* _Storage-Object._Area-Number */
      232     field idxPool  as character                                           /* get-bits( _object-attrib, 7, 1 ) = 1 */
      233     field tblname  as character                                           /* _File._File-Name             */
      234     index xid-idx is unique primary xid.
      235   
      236   define new global shared temp-table tt_areaExtent no-undo
      237     field areaNum  as integer                                             /* _areaExtent._Area-Number     */
      238     field extNum   as integer                                             /* _areaExtent._Extent-Number   */
      239   
      240     field extSize  as decimal                                             /* _areaExtent._Extent-Size     */
      241     field extType  as integer                                             /* _areaExtent._Extent-Type     */
      242     field extPath  as character                                           /* _areaExtent._Extent-Path     */
      243   
      244     index ae-idx is unique primary areaNum extNum.
      245   
      246   define new global shared temp-table tt_area no-undo
      247     field xid      as integer    format ">>>9"
      248     field SANum    as integer    format ">>>9"        label "#"
      249     field areaPool as character  format "x(2)"        label "BX"
      250   /*field areaStatus-Id as {&BIGINT} format ">>>9"    label "Id" */
      251     field SAName   as character  format "x(30)"       label "Area Name"
      252     field allocGB  as decimal    format ">>>>>9.99"   label "Allocated"
      253     field varGB    as decimal    format ">>>>>9.99"   label "Variable"
      254     field totGB    as decimal    format ">>>>>>9.99"  label "Tot GB"
      255     field hiGB     as decimal    format ">>>>>9.99"   label "Hi Water" serialize-hidden
      256     field freeGB   as decimal    format ">>>>>9.99"   label "Free GB"
      257     field pctAlloc as decimal    format ">>>>>9%"     label "%Alloc"
      258     field pctLastX as decimal    format ">>>>9%"      label "%LastX"
      259   
      260     field blkszkb as integer     format ">>9"         label "BSZ"
      261     field rpb     as integer     format ">>9"         label "RPB"
      262     field clstrsz as integer     format ">>9"         label "CSZ"
      263   
      264     field numTbls as integer     format ">>>>9"       label "#Tbls"
      265     field numIdxs as integer     format ">>>>9"       label "#Idxs"
      266     field numLOBs as integer     format ">>>>9"       label "#LOBs"
      267   
      268     field numExts as integer     format ">>>>9"       label "#Exts"
      269     field hasVar  as logical     format "Yes/No"      label "Var?"
      270   
      271     field xnote   as character   format "x"           label "*"
      272   
      273     field areaMaxPct as decimal  format ">>9.999%"    label "Max%"
      274     field idx3264    as decimal  format ">>9.999%"    label "Bug%"
      275   
      276     index pctAlloc-idx is primary pctAlloc descending
      277     index pctLastX-idx pctLastX pctAlloc descending
      278     index allocGB-idx allocGB descending
      279     index totGB-idx totGB descending
      280     index xid-idx is unique xid
      281     index SANum-idx is unique SANum
      282     index SAName-idx is unique SAName
      283   .
      284   
      285   *** Encrypted Source ***
      286   *** Encrypted Source ***
      287   *** Encrypted Source ***
      288   *** Encrypted Source ***
      289   *** Encrypted Source ***
      290   *** Encrypted Source ***
      291   *** Encrypted Source ***
      292   *** Encrypted Source ***
      293   *** Encrypted Source ***
      294   *** Encrypted Source ***
      295   *** Encrypted Source ***
      296   *** Encrypted Source ***
      297   *** Encrypted Source ***
      298   *** Encrypted Source ***
      299   *** Encrypted Source ***
      300   *** Encrypted Source ***
      301   *** Encrypted Source ***
      302   *** Encrypted Source ***
      303   *** Encrypted Source ***
      304   *** Encrypted Source ***
      305   *** Encrypted Source ***
      306   *** Encrypted Source ***
      307   *** Encrypted Source ***
      308   *** Encrypted Source ***
      309   *** Encrypted Source ***
      310   *** Encrypted Source ***
      311   *** Encrypted Source ***
      312   *** Encrypted Source ***
      313   *** Encrypted Source ***
      314   *** Encrypted Source ***
      315   *** Encrypted Source ***
      316   *** Encrypted Source ***
      317   *** Encrypted Source ***
      318   *** Encrypted Source ***
      319   *** Encrypted Source ***
      320   *** Encrypted Source ***
      321   *** Encrypted Source ***
      322   *** Encrypted Source ***
      323   *** Encrypted Source ***
      324   *** Encrypted Source ***
      325   *** Encrypted Source ***
      326   *** Encrypted Source ***
      327   *** Encrypted Source ***
      328   *** Encrypted Source ***
      329   *** Encrypted Source ***
      330   *** Encrypted Source ***
      331   *** Encrypted Source ***
      332   *** Encrypted Source ***
      333   *** Encrypted Source ***
      334   *** Encrypted Source ***
      335   *** Encrypted Source ***
      336   *** Encrypted Source ***
      337   *** Encrypted Source ***
      338   *** Encrypted Source ***
      339   *** Encrypted Source ***
      340   *** Encrypted Source ***
      341   *** Encrypted Source ***
      342   *** Encrypted Source ***
      343   *** Encrypted Source ***
      344   *** Encrypted Source ***
      345   *** Encrypted Source ***
      346   *** Encrypted Source ***
      347   *** Encrypted Source ***
      348   *** Encrypted Source ***
      349   *** Encrypted Source ***
      350   *** Encrypted Source ***
      351   *** Encrypted Source ***
      352   *** Encrypted Source ***
      353   *** Encrypted Source ***
      354   *** Encrypted Source ***
      355    
      356   
      357   /*******************************************************************************
      358    *******************************************************************************
      359    **                                                                           **
      360    **                                                                           **
      361    **  Copyright 2003-2006 Tom Bascom, Greenfield Technologies                  **
      362    **  http://www.greenfieldtech.com                                            **
      363    **                                                                           **
      364    **  ProTop is free software; you can redistribute it and/or modify it        **
      365    **  under the terms of the GNU General Public License (GPL) as published     **
      366    **  by the Free Software Foundation; either version 2 of the License, or     **
      367    **  at your option) any later version.                                       **
      368    **                                                                           **
      369    **  ProTop is distributed in the hope that it will be useful, but WITHOUT    **
      370    **  ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or    **
      371    **  FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License     **
      372    **  for more details.                                                        **
      373    **                                                                           **
      374    **  See TERMS.TXT for more information regarding the Terms and Conditions    **
      375    **  of use and alternative licensing options for this software.              **
      376    **                                                                           **
      377    **  A copy of the GPL is in GPL.TXT which was provided with this package.    **
      378    **                                                                           **
      379    **  See http://www.fsf.org for more information about the GPL.               **
      380    **                                                                           **
      381    **                                                                           **
      382    *******************************************************************************
      383    *******************************************************************************
      384    *
      385    * protoplib.i
      386    *
      387    * ProTop infrastructure library definitions
      388    *
      389    */
      390   
      391   function uDateTime returns integer () in super.
      392   function string2uDateTime returns integer( input p_text as character ) in super.
      393   function searchDir returns character ( input xDir as character ) in super.
      394   function unsignMe returns decimal ( input s as decimal, input i as integer ) in super.
      395   function hr returns decimal ( input lr as decimal, input osr as decimal, output hr-str as character, output hr as decimal, output mr as decimal ) in super.
      396   function do-SumSample returns logical ( output p_index as integer, output p_time  as integer ) in super.
      397   function myPID returns character () in super.
      398   function hilite returns logical ( input b as handle, input p_metric as character, input p_value as character, output p_attr as character ) in super.
      399   
      400   /* end protoplib.i */
      401    
      402   
      403   /*******************************************************************************
      404    *******************************************************************************
      405    **                                                                           **
      406    **                                                                           **
      407    **  Copyright 2003-2006 Tom Bascom, Greenfield Technologies                  **
      408    **  http://www.greenfieldtech.com                                            **
      409    **                                                                           **
      410    **  ProTop is free software; you can redistribute it and/or modify it        **
      411    **  under the terms of the GNU General Public License (GPL) as published     **
      412    **  by the Free Software Foundation; either version 2 of the License, or     **
      413    **  at your option) any later version.                                       **
      414    **                                                                           **
      415    **  ProTop is distributed in the hope that it will be useful, but WITHOUT    **
      416    **  ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or    **
      417    **  FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License     **
      418    **  for more details.                                                        **
      419    **                                                                           **
      420    **  See TERMS.TXT for more information regarding the Terms and Conditions    **
      421    **  of use and alternative licensing options for this software.              **
      422    **                                                                           **
      423    **  A copy of the GPL is in GPL.TXT which was provided with this package.    **
      424    **                                                                           **
      425    **  See http://www.fsf.org for more information about the GPL.               **
      426    **                                                                           **
      427    **                                                                           **
      428    *******************************************************************************
      429    *******************************************************************************
      430    *
      431    * vstlib.i
      432    *
      433    * VST library definitions
      434    *
      435    */
      436   
      437   function aiInfo returns character ( input vAiFile as character, output vAiGenNum as integer ) in super.
      438   function chkai returns integer ( output ai_exts as integer, output ai_full as integer, output ai_empty as integer ) in super.
      439   function chkarea returns integer ( input threshold as decimal, output worst as decimal ) in super.
      440   function chkptNum returns integer ( input-output oldbi as integer ) in super.
      441   
      442   function connectFlags returns character ( input cnxId as integer ) in super.
      443   function connectName returns character ( input cnxId as integer, input cnxFlags as character ) in super.
      444   function lastStatement returns character( input cnxId as integer, output lineNum as integer, output procName as character ) in super.
      445   
      446   function isAIEnabled returns logical () in super.
      447   function isReplSource returns logical () in super.
      448   function isReplTarget returns logical () in super.
      449   function isBackupRunning returns logical () in super.
      450   function isWorkgroup returns logical () in super.
      451   
      452   function getStartupX returns character ( input v as character, input p1 as character, input p2 as character ) in super.
      453   
      454   /* end vstlib.i */
      455    
      456   
      457   function add2ds returns logical ( input h as handle ) in super.
      458   function getTempTableHandle returns handle ( input n as character ) in super.
      459   
      460   /* end protop.i */
      461    
      462   
      463   /*******************************************************************************
      464    *******************************************************************************
      465    **                                                                           **
      466    **                                                                           **
      467    **  Copyright 2003-2012 Tom Bascom, Greenfield Technologies                  **
      468    **  http://www.greenfieldtech.com                                            **
      469    **                                                                           **
      470    **  ProTop is free software; you can redistribute it and/or modify it        **
      471    **  under the terms of the GNU General Public License (GPL) as published     **
      472    **  by the Free Software Foundation; either version 2 of the License, or     **
      473    **  at your option) any later version.                                       **
      474    **                                                                           **
      475    **  ProTop is distributed in the hope that it will be useful, but WITHOUT    **
      476    **  ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or    **
      477    **  FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License     **
      478    **  for more details.                                                        **
      479    **                                                                           **
      480    **  See TERMS.TXT for more information regarding the Terms and Conditions    **
      481    **  of use and alternative licensing options for this software.              **
      482    **                                                                           **
      483    **  A copy of the GPL is in GPL.TXT which was provided with this package.    **
      484    **                                                                           **
      485    **  See http://www.fsf.org for more information about the GPL.               **
      486    **                                                                           **
      487    **                                                                           **
      488    *******************************************************************************
      489    *******************************************************************************
      490    *
      491    * tick.i
      492    *
      493    *
      494    * common routine to handle "clock ticks"
      495    *
      496    *
      497    * Author:
      498    *
      499    *      Tom Bascom, Greenfield Technologies
      500    *      http://www.greenfieldtech.com
      501    *      January 21, 2012
      502    *
      503    */
      504   
      505   
      506   /* lib/v9.i
      507    *
      508    */
      509   
      510   &IF DECIMAL(SUBSTRING(PROVERSION,1,INDEX(PROVERSION,".") + 1)) < 10.0 &THEN
      511   &global-define  CPYLOB  "no"
      512   &global-define  NOW     substitute( "&1 &2", today, string( time, "hh:mm:ss" ))
      513   &global-define  LNGCR   character
      514   &global-define  DTZ     integer
      515   &global-define  BIGINT  decimal
      516   &ELSE
      517   &global-define  OE10    "yes"
      518   &global-define  NOW     now
      519   &global-define  LNGCR   longchar
      520   &global-define  DTZ     datetime-tz
      521   &global-define  BIGINT  int64
      522   &ENDIF
      523    
      524   
      525   define new global shared variable rawMode  as integer no-undo initial 5.
      526   define new global shared variable timeMode as integer no-undo initial 2.
      527   
      528   define new global shared variable x as integer no-undo initial 5.
      529   define new global shared variable z as decimal no-undo.
      530   
      531   define variable y as decimal no-undo.
      532   
      533   define variable initTick as integer no-undo.
      534   define variable prevTick as integer no-undo.
      535   
      536   
      537   procedure updTick:
      538   
      539   &IF DEFINED( OE10 ) &THEN
      540     if initTick = 0 then initTick = mtime.
      541     assign
      542       x = rawMode /* ( if rawMode then 4 else 5 ) */
      543       z = mtime - prevTick
      544       z = ( if z >= 0 then z else 86400000 - prevTick + mtime )   /* handle rolling over midnight */
      545       z = z / 1000
      546       y = mtime - initTick
      547       y = y / 1000
      548       prevTick = mtime
      549     .
      550   &ELSE
      551     if initTick = 0 then initTick = etime.
      552     assign
      553       x = rawMode /* ( if rawMode then 4 else 5 ) */
      554       z = etime - prevTick
      555       z = ( if z >= 0 then z else 5000 )   /* etime doesn't rollover at midnite -- but a mistaken etime(yes) somewhere would be bad... */
      556       z = z / 1000
      557       y = etime - initTick
      558       y = y / 1000
      559       prevTick = etime
      560     .
      561   &ENDIF
      562   
      563     /* if rawMode <> 5 then z = 1. */
      564   
      565     if timeMode = 1 then z = 1.
      566   
      567     return.
      568   
      569   end.
      570   
      571   /* end tick.i */
      572    
      573   
      574   define output parameter dcDescription as character no-undo initial "ReplicationInfo".
      575   
      576   define temp-table tt_ReplInfo no-undo
      577   
      578     field xid            as integer   format ">>9"             label "Id"
      579   
      580     field dbStartTS      as character format "x(15)"           label "Src DB Start"
      581     field replStartTS    as character format "x(15)"           label "Repl Agent Start"
      582     field replMethod     as character format "x(8)"            label "Repl Method"
      583     field numTargets     as integer   format "->>>>>>>>>>>>>9" label "# Targets"
      584     field dbTRXId        as decimal   format "->>>>>>>>>>>>>9" label "Src TRX Id"
      585     field blksSent       as decimal   format "->>>>>>>>>>>>>9" label "Blocks Sent"
      586     field lastBlkTS      as character format "x(15)"           label "Last Block Sent"
      587   
      588     field srcHost1       as character format "x(30)"           label ""
      589     field srcPort1       as character format "x(8)"            label ""
      590     field srcDBTRX1      as decimal   format ">>>>>>>>>>>>>>9" label ""
      591   
      592     field agent1         as character format "x(30)"           label ""
      593     field replDB1        as character format "x(40)"           label ""
      594     field replDB1StartTS as character format "x(30)"           label ""
      595   
      596     field agent1ConnTS   as character format "x(30)"           label ""
      597     field agent1Status   as character format "x(20)"           label ""
      598     field agent1Comms    as character format "x(8)"            label ""
      599   
      600     field repl1TRX       as decimal   format ">>>>>>>>>>>>>>9" label ""
      601     field repl1BlksRecvd as decimal   format ">>>>>>>>>>>>>>9" label ""
      602     field repl1BlksPrcd  as decimal   format ">>>>>>>>>>>>>>9" label ""
      603     field repl1BlksACK   as decimal   format ">>>>>>>>>>>>>>9" label ""
      604     field repl1NotesPrcd as decimal   format ">>>>>>>>>>>>>>9" label ""
      605   
      606     field srcHost2       as character format "x(30)"           label ""
      607     field srcPort2       as character format "x(8)"            label ""
      608     field srcDBTRX2      as decimal   format ">>>>>>>>>>>>>>9" label ""
      609   
      610     field agent2         as character format "x(30)"           label ""
      611     field replDB2        as character format "x(40)"           label ""
      612     field replDB2StartTS as character format "x(30)"           label ""
      613   
      614     field agent2ConnTS   as character format "x(30)"           label ""
      615     field agent2Status   as character format "x(20)"           label ""
      616     field agent2Comms    as character format "x(8)"            label ""
      617   
      618     field repl2TRX       as decimal   format ">>>>>>>>>>>>>>9" label ""
      619     field repl2BlksRecvd as decimal   format ">>>>>>>>>>>>>>9" label ""
      620     field repl2BlksPrcd  as decimal   format ">>>>>>>>>>>>>>9" label ""
      621     field repl2BlksACK   as decimal   format ">>>>>>>>>>>>>>9" label ""
      622     field repl2NotesPrcd as decimal   format ">>>>>>>>>>>>>>9" label ""
      623   
      624   /*
      625     index resrcWts-idx  is unique resrcWts descending xid
      626     index requests-idx  is unique primary requests descending xid
      627     index lockPct-idx   is unique lockPct descending xid
      628     index resrcName-idx is unique resrcName
      629    */
      630   
      631     index xid-idx       is unique xid
      632   .
      633   
      634   
      635   /* lib/dumpTT.i
      636    *
      637    * simplified to a single line -- include should be eliminated.
      638    *
      639    */
      640   
      641   &IF DECIMAL(SUBSTRING(PROVERSION,1,INDEX(PROVERSION,".") + 1)) >= 10.1 &THEN
      642   /*** +++
      643   file-info:file-name = "./ptdefs".
      644   if file-info:full-pathname <> ? and index( file-info:file-type, "d" ) > 0 and index( file-info:file-type, "w" ) > 0 then
      645     do:
      646   
      647       file-info:file-name = "./ptdefs/{1}.xsd".
      648   
      649       if true /* file-info:full-pathname = ? or file-info:file-size = 0 */ then
      650         do:
      651   
      652           temp-table {1}:write-xmlschema(
      653             "file",
      654   /*        substitute( "ptdefs/&1.xsd", "{1}" ), */
      655   /*        "./ptdefs/{1}.xsd", */
      656             ( if opsys = "unix" then "./ptdefs/{1}.xsd" else ".~\ptdefs~\{1}.xsd" ),
      657             true
      658   
      659         &IF DECIMAL(SUBSTRING(PROVERSION,1,INDEX(PROVERSION,".") + 1)) >= 10.2
      660         &THEN
      661             , ?, ?, ?
      662         &ENDIF
      663   
      664       ).
      665   
      666       end.
      667   
      668     end.
      669    +++ ***/
      670   &ENDIF
      671    
      672   
      673   procedure mon-init:
      674   
      675     run updTick.
      676   
      677     return.
      678   
      679   end.
      680   
      681   
      682   procedure mon-update:
      683   
      684     define input parameter argList as character no-undo.
      685   
      686     run updTick.
      687   
      688     find first tt_ReplInfo no-error.
      689     if not available( tt_ReplInfo ) then create tt_ReplInfo.
      690   
      691     /*** the main event... ***/
      692   
      693     find dictdb._dbStatus no-lock no-error.
      694   
      695     assign
      696       tt_ReplInfo.dbStartTS = substring( substring( _dbStatus._dbStatus-StartTime, 5 ), 1, 15 )
      697       tt_ReplInfo.dbTRXId   = _dbStatus._dbStatus-LastTran
      698     .
      699   
      700     find dictdb._Repl-Server no-lock no-error.
      701     if available dictdb._Repl-Server then
      702       assign
      703         tt_ReplInfo.replStartTS = substring( substring( _Repl-Server._ReplSrv-StartTime,  5 ), 1, 15 )
      704         tt_ReplInfo.numTargets  = _Repl-Server._ReplSrv-AgentCount
      705         tt_ReplInfo.blksSent    = _Repl-Server._ReplSrv-BlocksSent
      706         tt_ReplInfo.lastBlkTS   = substring( substring( _Repl-Server._ReplSrv-LastBlockSentAt,  5 ), 1, 15 )
      707       . 
      708   
      709   /*
      710   
      711     find replTarget._dbStatus no-lock no-error.
      712     find replTarget._Repl-Agent no-lock no-error.
      713   
      714     find first replSource._Repl-AgentControl no-lock
      715       where replSource._Repl-AgentControl._ReplAgtCtl-AgentName = replTarget._Repl-Agent._ReplAgt-AgentName.
      716   
      717     if available replTarget._Repl-Agent then
      718   
      719     replTarget._Repl-Agent._ReplAgt-AgentName       format "x(15)"       colon 12 label "Agent"       skip
      720     replTarget._Repl-Agent._ReplAgt-ServerHost      format "x(15)"       colon 12 label "Source Host" skip
      721     replTarget._Repl-Agent._ReplAgt-Port            format ">>>>>9"      colon 12 label "Port"        skip
      722     replTarget._Repl-Agent._ReplAgt-dbName          format "x(30)"       colon 12 label "Source DB"   skip
      723     dummy                                           format "x(30)"       colon 12 label "Target DB"   skip
      724     replTarget._dbStatus._dbStatus-StartTime        format "x(24)"       colon 12 label "DB Start"    skip
      725     replTarget._Repl-Agent._ReplAgt-ConnectTime     format "x(24)"       colon 12 label "Agt Conn"    skip
      726     replTarget._Repl-Agent._ReplAgt-Status          format ">>>>>9"      colon 12 label "Status"      skip
      727     replTarget._Repl-Agent._ReplAgt-CommStatus      format ">>>>>9"      colon 12 label "Comms"       skip
      728     replTarget._Repl-Agent._ReplAgt-Method          format "x(6)"        colon 12 label "Method"      skip
      729     replTarget._dbStatus._dbStatus-LastTran         format ">>>>>>>>>>9" colon 12 label "DB TRX Id"   skip
      730     replTarget._Repl-Agent._ReplAgt-LastTRID        format ">>>>>>>>>>9" colon 12 label "Repl TRX"    skip
      731     replTarget._Repl-Agent._ReplAgt-BlocksReceived                       colon 12 label "Blks Rcv"    skip
      732     replTarget._Repl-Agent._ReplAgt-BlocksProcessed                      colon 12 label "Blks Proc"   skip
      733     replTarget._Repl-Agent._ReplAgt-BlocksACK                            colon 12 label "Blks ACK"    skip
      734     replTarget._Repl-Agent._ReplAgt-NotesProcessed                       colon 12 label "Notes Proc"  skip
      735   
      736    */
      737   
      738     add2ds( temp-table tt_replInfo:default-buffer-handle ).
      739   
      740     return.
      741   
      742   end.
      743   
      744   return.
