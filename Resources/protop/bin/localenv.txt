#!/bin/sh
#
# local environment
#
# if $PROTOP/bin/localenv exists it will be "dotted" into protopenv and the contents will
# become available to scripts that reference protopenv
# 

### possibly useful variables -- but if you're not sure what you're doing don't change them
# 
# export PROXY=proxy.xyzzy.com:8080	# Proxy server (if needed), also handles "username:password@proxyserver:proxyport"
# export USESOCKETS=no			# Totally disables all socket code.  Should not be needed but if you want to be *really* sure...
# export WAITLIMIT=5			# Modify the timeout value for socket communications, don't change this unless your name is "Tom"
# export VOTRX=1800			# How old is a TRX vefore it is considered "very old"? (default 1800 seconds)
# export BOGOMIPS=1000000		# How many spins to calculate bogoMIPs, 1MM is the default, 0 disables
# export IOFILENAME=/tmp/bigfile	# CSV list of large files to randomly read (default is the list of db extents)
# export IORESP=100			# Number of random seeks for ioResponse, 0 disables
# export USEREXP=no			# Disables the "user exerience" dashboard metric
# export PICACHECKINTERVAL=900		# How often to shell out and check "pica" status, default 60 seconds, 0 disables
# export APPSRVSTUCK=300		# How long an app server can be unresponsive before we consider it "stuck" (seconds)
# export ZOOMTO=30			# When something interesting happens the pt3agent can "zoom" the sample interval in to this frequency
# export NAGME=no			# This turns OFF the "message of the day" tips and suggestions feature
# export LKTBLLIM=9999			# How many lock table entries might we look at before giving up? (obsolete in oe11.4+)
# export DFCMD="df -p"			# Alternative df command for disk info screens (Solaris, HPUX and AIX might need this)
# export PTSERVER=jim			# A name for the server - using this is probably a bad idea 
# export USERFUTIL=yes			# Use rfutil rather than VSTs to determine ai extent status
# export AICHECKINTERVAL=300		# How often to shell out and check ai status (pre oe11.6), default 60 seconds, 0 disables
# export USERLOCK=yes			# Enable 11.7+ _UserLock stats on UIO screen -- can be *very* slow with large lock tables or many users
# export PTDLCMD=http			# The command to use to download updates.  The default is "curl", "http" will use internal socket code
# export MAILCMD="mailx &3 -s '&2' &1"	# The command to send mail (the "M" command inside ChUI ProTop)
# export SKIPLGSCAN=yes			# Skip the scan of the .lg file at startup - this may result in unknown startup parameter values
# export UPDAREADATA=21600		# update storage area data and table/index xref bits obtained from dbanalys - default 6 hours, 0 = disable

### obsolete, but documented for completeness
#
# export SENDTYPE=JSON			# How to package data, choices are JSON or XML.  Obsolete, everything is JSON now


### bin/aipurge.sh
#
# export PURGEDAYS=90			# the number of days of AI logs to keep, the default is 30
# export AIARCDIR1=/ailog/arc1		# first target directory
# export AIARCDIR2=/ailog/arc2		# second target directory


### bin/lgrot.sh and bin/logrotate.sh
#
# export LGARCDIR=/archive/logs		# Where to archive truncated .lg files when bin/lgrot.sh runs

### bin/logrotate.sh
#
# LOGHIST=n  				# Number of weeks of full db.lg to retain
# FLOGHIST=n  				# Number of weeks of filtered db.lg to retain
# LOGFILTER=<filter file>		# File containing strings to filter out, one string per line
#					# Ex.: (8873) 
#					#      (452)
#					#      (453)
#


### bin/syncio.sh
#
# export SYNCIODIR=/db/tmp		# directory for bin/syncio.sh to use, syncio.sh command line argument takes precedence - this is a default value


### these are only useful to paid portal customers
# 
# export PCTLASTX=yes			# turns ON alerts for the last fixed extent becoming close to full
# export LOGRDTHOLD=10000		# threshold for log2rec alerts
#
# export BIBKUP_ALERT=60 		# alerts if the bi backup phase takes longer than the value.  Default 60 seconds
# export BIBKUP_ALARM=120		# alarms if the bi backup phase takes longer than the value.  Default 300 seconds
# export BIBKUP_PAGE=300		# page if the bi backup phase takes longer than the value.  No default, you MUST set a value to be paged
# 
# export BKUP_ALERT=1800		# alerts if the backup takes longer than the value.  No default, you MUST set a value
# export BKUP_ALARM=3600		# alarms if the backup takes longer than the value.  No default, you MUST set a value
# export BKUP_PAGE=7200			# page if the backup takes longer than the value.  No default, you MUST set a value


### dlbin/load.sh
#
# export NUMTBLS=810			# expected number of tables (optional)
# export JUSTDOIT=yes			# Answer "y" to all prompts in the dump & load scripts
# export DLBINX='&1.&2.&3'		# Template for dlbin directory name (default "friendlyName.dl" or "&1.dl.&2.&3" = "friendlyName.dl.numThreads.dumpIndex")
# export DUMPRO='-RO'			# use -RO connections for dumping rather than having a server running
# export DUMPTHRD='-thread 1'		# optional multi-threaded binary dump options
# export OVERLAP=no			# Do NOT overlap dumping and loading - wait for dump to complete before starting the load process
# export IDXBUILD='inline'		# Use the proutil "build indexes" option table by table rather than one big bang after the load finishes

### bin/zippyng.sh
# 
# Syncronization command to sync zippyng client-server data from a client
# to the server.  This is set within the bin/localenv script.
# 
# FRNAME includes ".cs".
# 
# "SERVER:" must be replaced by the actual target server name.
# 
# If LOGDIR is NOT the same on both source and target then the target server
# LOGDIR will need to be replaced.
# 
# rsync is very efficient but scp or pscp or many other commands could also
# be used. Or you could have a shared filesystem and link the log to the
# logdir and avoid needing to spawn a command to synchronize the data.
# 
# Example:
# 
# export ZIPSYNC="rsync -avzqe ssh ${LOGDIR}/zippyng.${FRNAME}.log SERVER:${LOGDIR} 1>${TMPDIR}/zippyng.${FRNAME}.err 2>&1"
#
# Message Buffer Size (-Mm)
# export ZIPPYMm="-Mm 8192"


### v9 lacks datetime-tz and thus needs a bit of help to get the timezone right
# 
# This is *only* for v9 customers. The lack of datetime-tz makes handling
# "summer time" difficult. There is no reliable, generic, cross platform way
# to get the offset so ProTop uses this variable to determine what offset to
# apply.
#
# for example:
#
# export TZOFFSET="-04:00"		# EDT = "-04:00" (summer)
# export TZOFFSET="-05:00"		# EST = "-05:00" (winter)
#
## TZOFFSET="-05:00"	# CDT (summer)
## TZOFFSET="-06:00"	# CST (winter)
#
# TZSTR=`date +%Z`
# 
# if [ "$TZSTR" = "CDT" ]
# then
# 	TZOFFSET="-05:00"
# else
# 	TZOFFSET="-06:00"
# fi
# 
# export TZOFFSET


### lib/ttinfo.p demo code
#
# Enable temp-table and user-table-stats for ProTop debugging. The data
# can be viewed with the "Y" (user table stats) and "0" (temp-tables)
# screens.
# 
# 0) temp-table info requires OpenEdge 11 or higher
# 
# 1) You must also uncomment the -tt* parameters in etc/protop.pf
#
# 2) add TTDEBUG to bin/localenv:
# 
#       export PTDEBUG=yes
#
# (This is turned off by default.)
# 
# export TTDEBUG=yes

