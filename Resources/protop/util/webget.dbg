        1   /* webget.p
        2    *
        3    * simple program for testing socket communications code
        4    *
        5    */
        6   
        7   define new global shared variable dbgMode  as integer   no-undo.
        8   define new global shared variable pt_proxy as character no-undo format "x(250)" view-as fill-in size 40 by 1 label "Optional Proxy".
        9   define new global shared variable pt_port  as character no-undo initial "80".
       10   
       11   define variable host    as character no-undo format "x(30)" initial "demo.wss.com".
       12   define variable path    as character no-undo format "x(60)" initial "/proxy.test".
       13   
       14   define variable fName   as character no-undo format "x(30)" initial "proxy.test".
       15   
       16   define variable rLen    as integer   no-undo label "result length".
       17   define variable fLen    as integer   no-undo label "file length".
       18   define variable result  as longchar  no-undo.
       19   define variable xstatus as character no-undo format "x(60)".
       20   define variable xrspHdr as character no-undo view-as editor size 110 by 10.
       21   define variable xresult as character no-undo view-as editor size 110 by 30.
       22   
       23   run ssg/sausage02.p persistent.
       24   
       25   /* pt_port = 443. */
       26   
       27   dbgMode = 7.    /* 7 is about as high as you really want to go */
       28   
       29   pause 0 before-hide.
       30   
       31   do while true on endkey undo, leave:
       32   
       33     update
       34       dbgMode label "debug level" skip
       35       skip(1)
       36       host  skip
       37       path  skip
       38       pt_port  skip
       39       skip(1)
       40       pt_proxy skip
       41       skip(1)
       42       fName skip
       43      with
       44       1 column
       45       side-labels
       46       no-box
       47       width 132
       48     .
       49   
       50     output to value( "webget.log" ).
       51     run getURL( host, path, fName, output result, output xrspHdr ).
       52     output close.
       53   
       54     xstatus = entry( 1, xrspHdr, "~n" ).
       55   
       56     xresult = substring( result, 1, 4096 ).
       57   
       58     rLen = length( result ).
       59   
       60     if fName <> "" and fName <> ? then
       61       do:
       62         file-info:file-name = fName.
       63         fLen = file-info:file-size.
       64       end.
       65   
       66     display
       67       rLen skip
       68       fLen skip
       69       skip(1)
       70       xrspHdr skip
       71       skip(1)
       72       xresult skip
       73     .
       74   
       75   end.
       76   
       77   return.
