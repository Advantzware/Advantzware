        1   /* sendalert.p
        2    *
        3    * send an alert (from an external script)
        4    *
        5    * _progres -1 -b -p util/sendalert.p -param "friendlyName|alertType|alertMsg" > tmp/sendalert.err
        6    *
        7    */
        8   
        9   
       10   /*******************************************************************************
       11    *******************************************************************************
       12    **                                                                           **
       13    **                                                                           **
       14    **  Copyright 2003-2006 Tom Bascom, Greenfield Technologies                  **
       15    **  http://www.greenfieldtech.com                                            **
       16    **                                                                           **
       17    **  ProTop is free software; you can redistribute it and/or modify it        **
       18    **  under the terms of the GNU General Public License (GPL) as published     **
       19    **  by the Free Software Foundation; either version 2 of the License, or     **
       20    **  at your option) any later version.                                       **
       21    **                                                                           **
       22    **  ProTop is distributed in the hope that it will be useful, but WITHOUT    **
       23    **  ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or    **
       24    **  FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License     **
       25    **  for more details.                                                        **
       26    **                                                                           **
       27    **  See TERMS.TXT for more information regarding the Terms and Conditions    **
       28    **  of use and alternative licensing options for this software.              **
       29    **                                                                           **
       30    **  A copy of the GPL is in GPL.TXT which was provided with this package.    **
       31    **                                                                           **
       32    **  See http://www.fsf.org for more information about the GPL.               **
       33    **                                                                           **
       34    **                                                                           **
       35    *******************************************************************************
       36    *******************************************************************************
       37    *
       38    * protop.i
       39    *
       40    * Header file for protop family of programs
       41    *
       42    *
       43    * Known Bugs & Issues:
       44    *
       45    *
       46    * To Do:
       47    *
       48    *
       49    * Author:
       50    *
       51    *      Tom Bascom, Greenfield Technologies
       52    *      http://www.greenfieldtech.com
       53    *      August 28, 2003
       54    *
       55    */
       56   
       57   &IF DECIMAL(SUBSTRING(PROVERSION,1,INDEX(PROVERSION,".") + 1)) >= 11.4 &THEN
       58   &global-define  FASTLOCK        true
       59   &ELSE
       60   &global-define  FASTLOCK        false
       61   &ENDIF
       62   
       63   &IF DECIMAL(SUBSTRING(PROVERSION,1,INDEX(PROVERSION,".") + 1)) >= 11.0 &THEN
       64   &global-define  OE11            "yes"
       65   &global-define  xDEBUGTT        false
       66   &ENDIF
       67   
       68   &IF DECIMAL(SUBSTRING(PROVERSION,1,INDEX(PROVERSION,".") + 1)) >= 10.2 AND PROVERSION >= "10.2B" &THEN
       69   &global-define  NOSERIALIZE     serialize-hidden
       70   &ENDIF
       71   
       72   &IF DECIMAL(SUBSTRING(PROVERSION,1,INDEX(PROVERSION,".") + 1)) >= 10.1 AND PROVERSION >= "10.1B" &THEN
       73   &global-define  BIGINT          int64
       74   &ELSE
       75   &global-define  BIGINT          decimal
       76   &ENDIF
       77   
       78   
       79   /* lib/v9.i
       80    *
       81    */
       82   
       83   &IF DECIMAL(SUBSTRING(PROVERSION,1,INDEX(PROVERSION,".") + 1)) < 10.0 &THEN
       84   &global-define  CPYLOB  "no"
       85   &global-define  NOW     substitute( "&1 &2", today, string( time, "hh:mm:ss" ))
       86   &global-define  LNGCR   character
       87   &global-define  DTZ     integer
       88   &global-define  BIGINT  decimal
       89   &ELSE
       90   &global-define  OE10    "yes"
       91   &global-define  NOW     now
       92   &global-define  LNGCR   longchar
       93   &global-define  DTZ     datetime-tz
       94   &global-define  BIGINT  int64
       95   &ENDIF
       96    
       97   
       98   /* use extended _connect fields: -client, -cache*
       99    */
      100   
      101   &IF DECIMAL(SUBSTRING(PROVERSION,1,INDEX(PROVERSION,".") + 1)) >= 10.1 AND PROVERSION >= "10.1C" &THEN
      102   &global-define  CONNECTX        "yes"
      103   &ELSE
      104   &global-define  CONNECTX        "no"
      105   &ENDIF
      106   
      107   define stream inStrm.
      108   
      109   define new global shared variable dbgMode as integer no-undo initial 1.
      110   
      111   /* The values for these are defined in etc/protop.cfg and set by lib/protop-cfg.p
      112    *
      113    * someday everyone will have OO and I will replace these with a gsv class
      114    * or something of that ilk
      115    *
      116    */
      117   
      118   define new global shared variable pt_shortname   as character no-undo.
      119   define new global shared variable pt_uniqName    as character no-undo.
      120   define new global shared variable pt_server      as character no-undo.
      121   define new global shared variable pt_resrcType   as character no-undo.
      122   
      123   define new global shared variable pt_tmpdir      as character no-undo initial "/tmp".
      124   define new global shared variable pt_logdir      as character no-undo initial "/tmp".
      125   define new global shared variable pt_rptdir      as character no-undo initial "/tmp".
      126   define new global shared variable pt_logname     as character no-undo initial "&5.&2.&3".
      127   define new global shared variable pt_mailcmd     as character no-undo initial 'mailx "-s &1" '.
      128   
      129   define new global shared variable pt_votrx       as integer   no-undo initial 1800.
      130   define new global shared variable pt_lktbllim    as integer   no-undo initial 0.
      131   define new global shared variable pt_bkupstale   as integer   no-undo initial 26.
      132   define new global shared variable pt_bogomips    as integer   no-undo initial 1000000.
      133   define new global shared variable pt_ioresp      as integer   no-undo initial 100.
      134   define new global shared variable pt_ioFileName  as character no-undo.
      135   define new global shared variable pt_dfCmd       as character no-undo.
      136   
      137   define new global shared variable pt_AICheckInterval   as integer no-undo initial 60.
      138   define new global shared variable pt_PICACheckInterval as integer no-undo initial 60.
      139   define new global shared variable pt_appsrvStuck       as integer no-undo initial 120.
      140   
      141   define new global shared variable pt_bibkupAlert as integer   no-undo.          /* alert on long bi backup phase                */
      142   define new global shared variable pt_bibkupAlarm as integer   no-undo.          /* alarm on long bi backup phase                */
      143   define new global shared variable pt_bibkupPage  as integer   no-undo.          /* page  on long bi backup phase                */
      144   
      145   define new global shared variable pt_bkupAlert   as integer   no-undo.          /* alert on long db backup                      */
      146   define new global shared variable pt_bkupAlarm   as integer   no-undo.          /* alarm on long db backup                      */
      147   define new global shared variable pt_bkupPage    as integer   no-undo.          /* page  on long db backup                      */
      148   
      149   define new global shared variable pt_userLock    as logical   no-undo.          /* enable _userLock  data?                      */
      150   define new global shared variable pt_doZippy     as logical   no-undo.          /* enable "user experience" (aka "zippy")?      */
      151   define new global shared variable pt_useRFUtil   as logical   no-undo.          /* use rfutil to gather after-imaging status?   */
      152   
      153   define new global shared variable pt_updAreaData as integer   no-undo.          /* how often should we report storage area xref details from dbanalys? */
      154   
      155   define new global shared variable pt_zoomTo      as integer no-undo.            /* new zoomed monInt                            */
      156   
      157   define new global shared variable ptDBName     as character no-undo.                    /* the db logical name          */
      158   define new global shared variable rowLimit     as integer   no-undo initial 100.        /* 50?                          */
      159   
      160   /* do-sumSample() manipulates these -- ugly, ugly, ugly... (obsolete?)
      161    * 
      162    */
      163   
      164   define new global shared variable stime as integer no-undo.                     /* start time                           */
      165   define new global shared variable ltime as integer no-undo.                     /* last time                            */
      166   define new global shared variable xtime as integer no-undo.                     /* total time                           */
      167   define new global shared variable itime as integer no-undo.                     /* iteration time                       */
      168   
      169   define new global shared variable chkp-base   as integer no-undo initial ?.     /* cover for the lack of a VST field    */
      170   
      171                                                                                   /* corresponding to base checkpoint#    */
      172   /** Global Shared Temp Table Definitions
      173    **
      174    ** Yup, they're shared.  But this stuff makes no sense across session boundaries anyway.
      175    ** And a shared temp-table is logically the same as a db table so who really cares?
      176    **
      177    **/
      178   
      179   /* cache _File and _Index records so that we don't keep hitting the db to translate
      180    */
      181   
      182   define new global shared temp-table tt_tbl no-undo
      183     field xid      as integer                                             /* _File._File-Num              */
      184     field tstatid  as integer                                             /* _TableStat._TableStat-Id     */
      185     field areaNum  as integer                                             /* _Storage-Object._Area-Number */
      186     field tblPool  as character                                           /* get-bits( _object-attrib, 7, 1 ) = 1 */
      187     field tblname  as character                                           /* _File._File-Name             */
      188     index xid-idx is unique primary xid.
      189   
      190   define new global shared temp-table tt_idx no-undo
      191     field xid      as integer                                             /* _Index._Idx-Num              */
      192     field istatid  as integer                                             /* _IndexStat._IndexStat-Id     */
      193     field idxname  as character                                           /* _Index._Idx-Name             */
      194     field idxnote  as character
      195     field idxRoot  as int64                                           /* _Storage-Object._Object-Root */
      196     field tblnum   as integer                                             /* _File._File-Num              */
      197     field areaNum  as integer                                             /* _Storage-Object._Area-Number */
      198     field idxPool  as character                                           /* get-bits( _object-attrib, 7, 1 ) = 1 */
      199     field tblname  as character                                           /* _File._File-Name             */
      200     index xid-idx is unique primary xid.
      201   
      202   define new global shared temp-table tt_areaExtent no-undo
      203     field areaNum  as integer                                             /* _areaExtent._Area-Number     */
      204     field extNum   as integer                                             /* _areaExtent._Extent-Number   */
      205   
      206     field extSize  as decimal                                             /* _areaExtent._Extent-Size     */
      207     field extType  as integer                                             /* _areaExtent._Extent-Type     */
      208     field extPath  as character                                           /* _areaExtent._Extent-Path     */
      209   
      210     index ae-idx is unique primary areaNum extNum.
      211   
      212   define new global shared temp-table tt_area no-undo
      213     field xid      as integer    format ">>>9"
      214     field SANum    as integer    format ">>>9"        label "#"
      215     field areaPool as character  format "x(2)"        label "BX"
      216   /*field areaStatus-Id as {&BIGINT} format ">>>9"    label "Id" */
      217     field SAName   as character  format "x(30)"       label "Area Name"
      218     field allocGB  as decimal    format ">>>>>9.99"   label "Allocated"
      219     field varGB    as decimal    format ">>>>>9.99"   label "Variable"
      220     field totGB    as decimal    format ">>>>>>9.99"  label "Tot GB"
      221     field hiGB     as decimal    format ">>>>>9.99"   label "Hi Water" serialize-hidden
      222     field freeGB   as decimal    format ">>>>>9.99"   label "Free GB"
      223     field pctAlloc as decimal    format ">>>>>9%"     label "%Alloc"
      224     field pctLastX as decimal    format ">>>>9%"      label "%LastX"
      225   
      226     field blkszkb as integer     format ">>9"         label "BSZ"
      227     field rpb     as integer     format ">>9"         label "RPB"
      228     field clstrsz as integer     format ">>9"         label "CSZ"
      229   
      230     field numTbls as integer     format ">>>>9"       label "#Tbls"
      231     field numIdxs as integer     format ">>>>9"       label "#Idxs"
      232     field numLOBs as integer     format ">>>>9"       label "#LOBs"
      233   
      234     field numExts as integer     format ">>>>9"       label "#Exts"
      235     field hasVar  as logical     format "Yes/No"      label "Var?"
      236   
      237     field xnote   as character   format "x"           label "*"
      238   
      239     field areaMaxPct as decimal  format ">>9.999%"    label "Max%"
      240     field idx3264    as decimal  format ">>9.999%"    label "Bug%"
      241   
      242     index pctAlloc-idx is primary pctAlloc descending
      243     index pctLastX-idx pctLastX pctAlloc descending
      244     index allocGB-idx allocGB descending
      245     index totGB-idx totGB descending
      246     index xid-idx is unique xid
      247     index SANum-idx is unique SANum
      248     index SAName-idx is unique SAName
      249   .
      250   
      251   *** Encrypted Source ***
      252   *** Encrypted Source ***
      253   *** Encrypted Source ***
      254   *** Encrypted Source ***
      255   *** Encrypted Source ***
      256   *** Encrypted Source ***
      257   *** Encrypted Source ***
      258   *** Encrypted Source ***
      259   *** Encrypted Source ***
      260   *** Encrypted Source ***
      261   *** Encrypted Source ***
      262   *** Encrypted Source ***
      263   *** Encrypted Source ***
      264   *** Encrypted Source ***
      265   *** Encrypted Source ***
      266   *** Encrypted Source ***
      267   *** Encrypted Source ***
      268   *** Encrypted Source ***
      269   *** Encrypted Source ***
      270   *** Encrypted Source ***
      271   *** Encrypted Source ***
      272   *** Encrypted Source ***
      273   *** Encrypted Source ***
      274   *** Encrypted Source ***
      275   *** Encrypted Source ***
      276   *** Encrypted Source ***
      277   *** Encrypted Source ***
      278   *** Encrypted Source ***
      279   *** Encrypted Source ***
      280   *** Encrypted Source ***
      281   *** Encrypted Source ***
      282   *** Encrypted Source ***
      283   *** Encrypted Source ***
      284   *** Encrypted Source ***
      285   *** Encrypted Source ***
      286   *** Encrypted Source ***
      287   *** Encrypted Source ***
      288   *** Encrypted Source ***
      289   *** Encrypted Source ***
      290   *** Encrypted Source ***
      291   *** Encrypted Source ***
      292   *** Encrypted Source ***
      293   *** Encrypted Source ***
      294   *** Encrypted Source ***
      295   *** Encrypted Source ***
      296   *** Encrypted Source ***
      297   *** Encrypted Source ***
      298   *** Encrypted Source ***
      299   *** Encrypted Source ***
      300   *** Encrypted Source ***
      301   *** Encrypted Source ***
      302   *** Encrypted Source ***
      303   *** Encrypted Source ***
      304   *** Encrypted Source ***
      305   *** Encrypted Source ***
      306   *** Encrypted Source ***
      307   *** Encrypted Source ***
      308   *** Encrypted Source ***
      309   *** Encrypted Source ***
      310   *** Encrypted Source ***
      311   *** Encrypted Source ***
      312   *** Encrypted Source ***
      313   *** Encrypted Source ***
      314   *** Encrypted Source ***
      315   *** Encrypted Source ***
      316   *** Encrypted Source ***
      317   *** Encrypted Source ***
      318   *** Encrypted Source ***
      319   *** Encrypted Source ***
      320   *** Encrypted Source ***
      321    
      322   
      323   /*******************************************************************************
      324    *******************************************************************************
      325    **                                                                           **
      326    **                                                                           **
      327    **  Copyright 2003-2006 Tom Bascom, Greenfield Technologies                  **
      328    **  http://www.greenfieldtech.com                                            **
      329    **                                                                           **
      330    **  ProTop is free software; you can redistribute it and/or modify it        **
      331    **  under the terms of the GNU General Public License (GPL) as published     **
      332    **  by the Free Software Foundation; either version 2 of the License, or     **
      333    **  at your option) any later version.                                       **
      334    **                                                                           **
      335    **  ProTop is distributed in the hope that it will be useful, but WITHOUT    **
      336    **  ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or    **
      337    **  FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License     **
      338    **  for more details.                                                        **
      339    **                                                                           **
      340    **  See TERMS.TXT for more information regarding the Terms and Conditions    **
      341    **  of use and alternative licensing options for this software.              **
      342    **                                                                           **
      343    **  A copy of the GPL is in GPL.TXT which was provided with this package.    **
      344    **                                                                           **
      345    **  See http://www.fsf.org for more information about the GPL.               **
      346    **                                                                           **
      347    **                                                                           **
      348    *******************************************************************************
      349    *******************************************************************************
      350    *
      351    * protoplib.i
      352    *
      353    * ProTop infrastructure library definitions
      354    *
      355    */
      356   
      357   function uDateTime returns integer () in super.
      358   function string2uDateTime returns integer( input p_text as character ) in super.
      359   function searchDir returns character ( input xDir as character ) in super.
      360   function unsignMe returns decimal ( input s as decimal, input i as integer ) in super.
      361   function hr returns decimal ( input lr as decimal, input osr as decimal, output hr-str as character, output hr as decimal, output mr as decimal ) in super.
      362   function do-SumSample returns logical ( output p_index as integer, output p_time  as integer ) in super.
      363   function myPID returns character () in super.
      364   function hilite returns logical ( input b as handle, input p_metric as character, input p_value as character, output p_attr as character ) in super.
      365   
      366   /* end protoplib.i */
      367    
      368   
      369   /*******************************************************************************
      370    *******************************************************************************
      371    **                                                                           **
      372    **                                                                           **
      373    **  Copyright 2003-2006 Tom Bascom, Greenfield Technologies                  **
      374    **  http://www.greenfieldtech.com                                            **
      375    **                                                                           **
      376    **  ProTop is free software; you can redistribute it and/or modify it        **
      377    **  under the terms of the GNU General Public License (GPL) as published     **
      378    **  by the Free Software Foundation; either version 2 of the License, or     **
      379    **  at your option) any later version.                                       **
      380    **                                                                           **
      381    **  ProTop is distributed in the hope that it will be useful, but WITHOUT    **
      382    **  ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or    **
      383    **  FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License     **
      384    **  for more details.                                                        **
      385    **                                                                           **
      386    **  See TERMS.TXT for more information regarding the Terms and Conditions    **
      387    **  of use and alternative licensing options for this software.              **
      388    **                                                                           **
      389    **  A copy of the GPL is in GPL.TXT which was provided with this package.    **
      390    **                                                                           **
      391    **  See http://www.fsf.org for more information about the GPL.               **
      392    **                                                                           **
      393    **                                                                           **
      394    *******************************************************************************
      395    *******************************************************************************
      396    *
      397    * vstlib.i
      398    *
      399    * VST library definitions
      400    *
      401    */
      402   
      403   function aiInfo returns character ( input vAiFile as character, output vAiGenNum as integer ) in super.
      404   function chkai returns integer ( output ai_exts as integer, output ai_full as integer, output ai_empty as integer ) in super.
      405   function chkarea returns integer ( input threshold as decimal, output worst as decimal ) in super.
      406   function chkptNum returns integer ( input-output oldbi as integer ) in super.
      407   
      408   function connectFlags returns character ( input cnxId as integer ) in super.
      409   function connectName returns character ( input cnxId as integer, input cnxFlags as character ) in super.
      410   function lastStatement returns character( input cnxId as integer, output lineNum as integer, output procName as character ) in super.
      411   
      412   function isAIEnabled returns logical () in super.
      413   function isReplSource returns logical () in super.
      414   function isReplTarget returns logical () in super.
      415   function isBackupRunning returns logical () in super.
      416   function isWorkgroup returns logical () in super.
      417   
      418   function getStartupX returns character ( input v as character, input p1 as character, input p2 as character ) in super.
      419   
      420   /* end vstlib.i */
      421    
      422   
      423   function add2ds returns logical ( input h as handle ) in super.
      424   function getTempTableHandle returns handle ( input n as character ) in super.
      425   
      426   /* end protop.i */
      427    
      428   
      429   /* dbgMode = 1  minimal
      430    * dbgMode = 3  errors only
      431    * dbgMode = 4  + success
      432    * dbgMode = 5  verbose details (usually overkill)
      433    */
      434   
      435   dbgMode = 3.
      436   
      437   define new global shared variable custId as character no-undo.
      438   
      439   define variable monName      as character no-undo.
      440   define variable XID          as character no-undo.
      441   define variable logFileName  as character no-undo.
      442   define variable flgFileName  as character no-undo.
      443   define variable dbgFileName  as character no-undo.
      444   
      445   define variable alertType    as character no-undo.
      446   define variable alertMetric  as character no-undo.
      447   define variable alertMsg     as character no-undo.
      448   define variable alertBody    as character no-undo.
      449   
      450   define variable alertTempl   as character no-undo.
      451   define variable alertText    as character no-undo.
      452   
      453   alertTempl = "&1 &2~n[&3 &4]~n[cfgname: &5]~n[server: &6]~n".
      454   
      455   
      456   /* main body
      457    *
      458    */
      459   
      460   if num-entries( session:parameter, "|" ) >= 1 then pt_shortname = entry( 1, session:parameter, "|" ).
      461   if num-entries( session:parameter, "|" ) >= 2 then alertType    = entry( 2, session:parameter, "|" ).
      462   if num-entries( session:parameter, "|" ) >= 3 then alertMetric  = entry( 3, session:parameter, "|" ).
      463   if num-entries( session:parameter, "|" ) >= 4 then alertMsg     = entry( 4, session:parameter, "|" ).
      464   
      465   if num-entries( session:parameter, "|" ) <> 4 then
      466     do:
      467       message now 'usage: _progres -1 -b -p util/sendalert.p -param "friendlyName|alertType|alertMetric|alertMsg"'.
      468       quit.
      469     end.
      470   
      471   run lib/protoplib.p persistent.                                         /* load protop infrastructure library                   */
      472   run lib/protop-cfg.p persistent.                                        /* initialize protop environment                        */
      473   
      474   file-info:file-name = pt_tmpdir.                                        /* make certain that we have a temp directory!          */
      475   if file-info:full-pathname = ? then
      476     os-command silent value( "mkdir " + pt_tmpdir ).
      477   
      478   file-info:file-name = pt_logdir.                                        /* make certain that we have a log directory!           */
      479   if file-info:full-pathname = ? then
      480     os-command silent value( "mkdir " + pt_logdir ).
      481   
      482   *** Encrypted Source ***
      483   *** Encrypted Source ***
      484   *** Encrypted Source ***
      485   *** Encrypted Source ***
      486   *** Encrypted Source ***
      487   *** Encrypted Source ***
      488   *** Encrypted Source ***
      489   *** Encrypted Source ***
      490   *** Encrypted Source ***
      491   *** Encrypted Source ***
      492   *** Encrypted Source ***
      493   *** Encrypted Source ***
      494   *** Encrypted Source ***
      495   *** Encrypted Source ***
      496   *** Encrypted Source ***
      497   *** Encrypted Source ***
      498   *** Encrypted Source ***
      499   *** Encrypted Source ***
      500   *** Encrypted Source ***
      501   *** Encrypted Source ***
      502   *** Encrypted Source ***
      503   *** Encrypted Source ***
      504   *** Encrypted Source ***
      505   *** Encrypted Source ***
      506   *** Encrypted Source ***
      507   *** Encrypted Source ***
      508   *** Encrypted Source ***
      509   *** Encrypted Source ***
      510   *** Encrypted Source ***
      511   *** Encrypted Source ***
      512   *** Encrypted Source ***
      513   *** Encrypted Source ***
      514   *** Encrypted Source ***
      515   *** Encrypted Source ***
      516    
      517   
      518   if dbgMode >= 5 then
      519     do:
      520       output to value( logFileName ) unbuffered append.
      521       message now "==Quit==".
      522       output close.
      523     end.
      524   
      525   quit.
