        1   /* zprof_flush.p
        2    *
        3    * simple stand-alone non-persistent profiler data flush
        4    *
        5    * run lib/zprof_flush.p.
        6    *
        7    */
        8   
        9   define new global shared variable profilerStart        as datetime  no-undo.
       10   define new global shared variable profilerDescription  as character no-undo.
       11   define new global shared variable profilerBaseName     as character no-undo.
       12   define new global shared variable dbgMode              as integer   no-undo initial 3.
       13   
       14   define variable profilerOutfile as character format "x(50)" no-undo.
       15   
       16   if profiler:enabled <> yes then                                                 /* not enabled  */
       17     do:
       18       if dbgMode >= 5 then message now "zprofiler was not enabled".
       19       return.
       20     end.
       21   
       22   /* append the date and time to the output file name so that we can easily keep a history
       23    */
       24   
       25   profilerOutFile =
       26     session:temp-directory +
       27     profilerBaseName +
       28     substitute(
       29       ".&1.&2.&3.&4",
       30       year( today ),
       31       string( month( today ), "99" ),
       32       string( day( today ), "99" ),
       33       replace( string( time, "hh:mm:ss" ), ":", "." )
       34     )
       35   .
       36   
       37   assign
       38     profiler:description = profilerDescription + " [" + string( absolute( interval( profilerStart, now, "seconds" )), "hh:mm:ss" ) + "]"
       39     profiler:file-name   = profilerOutFile + ".prf"
       40   .
       41   
       42   profiler:write-data().
       43   if dbgMode >= 5 then message now "zprofiler [" + profiler:description + "] flushed:" profiler:file-name.
       44   
       45   profilerStart = now.
       46   
       47   return.
