        1   /*******************************************************************************
        2    *******************************************************************************
        3    **                                                                           **
        4    **                                                                           **
        5    **  Copyright 2003-2006 Tom Bascom, Greenfield Technologies                  **
        6    **  http://www.greenfieldtech.com                                            **
        7    **                                                                           **
        8    **  ProTop is free software; you can redistribute it and/or modify it        **
        9    **  under the terms of the GNU General Public License (GPL) as published     **
       10    **  by the Free Software Foundation; either version 2 of the License, or     **
       11    **  at your option) any later version.                                       **
       12    **                                                                           **
       13    **  ProTop is distributed in the hope that it will be useful, but WITHOUT    **
       14    **  ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or    **
       15    **  FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License     **
       16    **  for more details.                                                        **
       17    **                                                                           **
       18    **  See TERMS.TXT for more information regarding the Terms and Conditions    **
       19    **  of use and alternative licensing options for this software.              **
       20    **                                                                           **
       21    **  A copy of the GPL is in GPL.TXT which was provided with this package.    **
       22    **                                                                           **
       23    **  See http://www.fsf.org for more information about the GPL.               **
       24    **                                                                           **
       25    **                                                                           **
       26    *******************************************************************************
       27    *******************************************************************************
       28    *
       29    * protop-cfg.p
       30    *
       31    *
       32    * Initialize global shared variables configured in etc/protop.cfg
       33    *
       34    *
       35    * Author:
       36    *
       37    *      Tom Bascom, Greenfield Technologies
       38    *      http://www.greenfieldtech.com
       39    *      June 15, 2006
       40    *
       41    *      Moved responsibility for configuration of log files etc
       42    *      from lib/protop.i to lib/protop-cfg.p
       43    *      June 15, 2006
       44    * 
       45    */
       46   
       47   define variable ptCfg_date as date    no-undo.
       48   define variable ptCfg_time as integer no-undo.
       49   
       50   define variable i as integer no-undo.
       51   define variable j as integer no-undo.
       52   
       53   
       54   /*******************************************************************************
       55    *******************************************************************************
       56    **                                                                           **
       57    **                                                                           **
       58    **  Copyright 2003-2006 Tom Bascom, Greenfield Technologies                  **
       59    **  http://www.greenfieldtech.com                                            **
       60    **                                                                           **
       61    **  ProTop is free software; you can redistribute it and/or modify it        **
       62    **  under the terms of the GNU General Public License (GPL) as published     **
       63    **  by the Free Software Foundation; either version 2 of the License, or     **
       64    **  at your option) any later version.                                       **
       65    **                                                                           **
       66    **  ProTop is distributed in the hope that it will be useful, but WITHOUT    **
       67    **  ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or    **
       68    **  FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License     **
       69    **  for more details.                                                        **
       70    **                                                                           **
       71    **  See TERMS.TXT for more information regarding the Terms and Conditions    **
       72    **  of use and alternative licensing options for this software.              **
       73    **                                                                           **
       74    **  A copy of the GPL is in GPL.TXT which was provided with this package.    **
       75    **                                                                           **
       76    **  See http://www.fsf.org for more information about the GPL.               **
       77    **                                                                           **
       78    **                                                                           **
       79    *******************************************************************************
       80    *******************************************************************************
       81    *
       82    * protop.i
       83    *
       84    * Header file for protop family of programs
       85    *
       86    *
       87    * Known Bugs & Issues:
       88    *
       89    *
       90    * To Do:
       91    *
       92    *
       93    * Author:
       94    *
       95    *      Tom Bascom, Greenfield Technologies
       96    *      http://www.greenfieldtech.com
       97    *      August 28, 2003
       98    *
       99    */
      100   
      101   &IF DECIMAL(SUBSTRING(PROVERSION,1,INDEX(PROVERSION,".") + 1)) >= 11.4 &THEN
      102   &global-define  FASTLOCK        true
      103   &ELSE
      104   &global-define  FASTLOCK        false
      105   &ENDIF
      106   
      107   &IF DECIMAL(SUBSTRING(PROVERSION,1,INDEX(PROVERSION,".") + 1)) >= 11.0 &THEN
      108   &global-define  OE11            "yes"
      109   &global-define  xDEBUGTT        false
      110   &ENDIF
      111   
      112   &IF DECIMAL(SUBSTRING(PROVERSION,1,INDEX(PROVERSION,".") + 1)) >= 10.2 AND PROVERSION >= "10.2B" &THEN
      113   &global-define  NOSERIALIZE     serialize-hidden
      114   &ENDIF
      115   
      116   &IF DECIMAL(SUBSTRING(PROVERSION,1,INDEX(PROVERSION,".") + 1)) >= 10.1 AND PROVERSION >= "10.1B" &THEN
      117   &global-define  BIGINT          int64
      118   &ELSE
      119   &global-define  BIGINT          decimal
      120   &ENDIF
      121   
      122   
      123   /* lib/v9.i
      124    *
      125    */
      126   
      127   &IF DECIMAL(SUBSTRING(PROVERSION,1,INDEX(PROVERSION,".") + 1)) < 10.0 &THEN
      128   &global-define  CPYLOB  "no"
      129   &global-define  NOW     substitute( "&1 &2", today, string( time, "hh:mm:ss" ))
      130   &global-define  LNGCR   character
      131   &global-define  DTZ     integer
      132   &global-define  BIGINT  decimal
      133   &ELSE
      134   &global-define  OE10    "yes"
      135   &global-define  NOW     now
      136   &global-define  LNGCR   longchar
      137   &global-define  DTZ     datetime-tz
      138   &global-define  BIGINT  int64
      139   &ENDIF
      140    
      141   
      142   /* use extended _connect fields: -client, -cache*
      143    */
      144   
      145   &IF DECIMAL(SUBSTRING(PROVERSION,1,INDEX(PROVERSION,".") + 1)) >= 10.1 AND PROVERSION >= "10.1C" &THEN
      146   &global-define  CONNECTX        "yes"
      147   &ELSE
      148   &global-define  CONNECTX        "no"
      149   &ENDIF
      150   
      151   define stream inStrm.
      152   
      153   define new global shared variable dbgMode as integer no-undo initial 1.
      154   
      155   /* The values for these are defined in etc/protop.cfg and set by lib/protop-cfg.p
      156    *
      157    * someday everyone will have OO and I will replace these with a gsv class
      158    * or something of that ilk
      159    *
      160    */
      161   
      162   define new global shared variable pt_shortname   as character no-undo.
      163   define new global shared variable pt_uniqName    as character no-undo.
      164   define new global shared variable pt_server      as character no-undo.
      165   define new global shared variable pt_resrcType   as character no-undo.
      166   
      167   define new global shared variable pt_tmpdir      as character no-undo initial "/tmp".
      168   define new global shared variable pt_logdir      as character no-undo initial "/tmp".
      169   define new global shared variable pt_rptdir      as character no-undo initial "/tmp".
      170   define new global shared variable pt_logname     as character no-undo initial "&5.&2.&3".
      171   define new global shared variable pt_mailcmd     as character no-undo initial 'mailx "-s &1" '.
      172   
      173   define new global shared variable pt_votrx       as integer   no-undo initial 1800.
      174   define new global shared variable pt_lktbllim    as integer   no-undo initial 0.
      175   define new global shared variable pt_bkupstale   as integer   no-undo initial 26.
      176   define new global shared variable pt_bogomips    as integer   no-undo initial 1000000.
      177   define new global shared variable pt_ioresp      as integer   no-undo initial 100.
      178   define new global shared variable pt_ioFileName  as character no-undo.
      179   define new global shared variable pt_dfCmd       as character no-undo.
      180   
      181   define new global shared variable pt_AICheckInterval   as integer no-undo initial 60.
      182   define new global shared variable pt_PICACheckInterval as integer no-undo initial 60.
      183   define new global shared variable pt_appsrvStuck       as integer no-undo initial 120.
      184   
      185   define new global shared variable pt_bibkupAlert as integer   no-undo.          /* alert on long bi backup phase                */
      186   define new global shared variable pt_bibkupAlarm as integer   no-undo.          /* alarm on long bi backup phase                */
      187   define new global shared variable pt_bibkupPage  as integer   no-undo.          /* page  on long bi backup phase                */
      188   
      189   define new global shared variable pt_bkupAlert   as integer   no-undo.          /* alert on long db backup                      */
      190   define new global shared variable pt_bkupAlarm   as integer   no-undo.          /* alarm on long db backup                      */
      191   define new global shared variable pt_bkupPage    as integer   no-undo.          /* page  on long db backup                      */
      192   
      193   define new global shared variable pt_userLock    as logical   no-undo.          /* enable _userLock  data?                      */
      194   define new global shared variable pt_doZippy     as logical   no-undo.          /* enable "user experience" (aka "zippy")?      */
      195   define new global shared variable pt_useRFUtil   as logical   no-undo.          /* use rfutil to gather after-imaging status?   */
      196   
      197   define new global shared variable pt_updAreaData as integer   no-undo.          /* how often should we report storage area xref details from dbanalys? */
      198   
      199   define new global shared variable pt_zoomTo      as integer no-undo.            /* new zoomed monInt                            */
      200   
      201   define new global shared variable ptDBName     as character no-undo.                    /* the db logical name          */
      202   define new global shared variable rowLimit     as integer   no-undo initial 100.        /* 50?                          */
      203   
      204   /* do-sumSample() manipulates these -- ugly, ugly, ugly... (obsolete?)
      205    * 
      206    */
      207   
      208   define new global shared variable stime as integer no-undo.                     /* start time                           */
      209   define new global shared variable ltime as integer no-undo.                     /* last time                            */
      210   define new global shared variable xtime as integer no-undo.                     /* total time                           */
      211   define new global shared variable itime as integer no-undo.                     /* iteration time                       */
      212   
      213   define new global shared variable chkp-base   as integer no-undo initial ?.     /* cover for the lack of a VST field    */
      214   
      215                                                                                   /* corresponding to base checkpoint#    */
      216   /** Global Shared Temp Table Definitions
      217    **
      218    ** Yup, they're shared.  But this stuff makes no sense across session boundaries anyway.
      219    ** And a shared temp-table is logically the same as a db table so who really cares?
      220    **
      221    **/
      222   
      223   /* cache _File and _Index records so that we don't keep hitting the db to translate
      224    */
      225   
      226   define new global shared temp-table tt_tbl no-undo
      227     field xid      as integer                                             /* _File._File-Num              */
      228     field tstatid  as integer                                             /* _TableStat._TableStat-Id     */
      229     field areaNum  as integer                                             /* _Storage-Object._Area-Number */
      230     field tblPool  as character                                           /* get-bits( _object-attrib, 7, 1 ) = 1 */
      231     field tblname  as character                                           /* _File._File-Name             */
      232     index xid-idx is unique primary xid.
      233   
      234   define new global shared temp-table tt_idx no-undo
      235     field xid      as integer                                             /* _Index._Idx-Num              */
      236     field istatid  as integer                                             /* _IndexStat._IndexStat-Id     */
      237     field idxname  as character                                           /* _Index._Idx-Name             */
      238     field idxnote  as character
      239     field idxRoot  as int64                                           /* _Storage-Object._Object-Root */
      240     field tblnum   as integer                                             /* _File._File-Num              */
      241     field areaNum  as integer                                             /* _Storage-Object._Area-Number */
      242     field idxPool  as character                                           /* get-bits( _object-attrib, 7, 1 ) = 1 */
      243     field tblname  as character                                           /* _File._File-Name             */
      244     index xid-idx is unique primary xid.
      245   
      246   define new global shared temp-table tt_areaExtent no-undo
      247     field areaNum  as integer                                             /* _areaExtent._Area-Number     */
      248     field extNum   as integer                                             /* _areaExtent._Extent-Number   */
      249   
      250     field extSize  as decimal                                             /* _areaExtent._Extent-Size     */
      251     field extType  as integer                                             /* _areaExtent._Extent-Type     */
      252     field extPath  as character                                           /* _areaExtent._Extent-Path     */
      253   
      254     index ae-idx is unique primary areaNum extNum.
      255   
      256   define new global shared temp-table tt_area no-undo
      257     field xid      as integer    format ">>>9"
      258     field SANum    as integer    format ">>>9"        label "#"
      259     field areaPool as character  format "x(2)"        label "BX"
      260   /*field areaStatus-Id as {&BIGINT} format ">>>9"    label "Id" */
      261     field SAName   as character  format "x(30)"       label "Area Name"
      262     field allocGB  as decimal    format ">>>>>9.99"   label "Allocated"
      263     field varGB    as decimal    format ">>>>>9.99"   label "Variable"
      264     field totGB    as decimal    format ">>>>>>9.99"  label "Tot GB"
      265     field hiGB     as decimal    format ">>>>>9.99"   label "Hi Water" serialize-hidden
      266     field freeGB   as decimal    format ">>>>>9.99"   label "Free GB"
      267     field pctAlloc as decimal    format ">>>>>9%"     label "%Alloc"
      268     field pctLastX as decimal    format ">>>>9%"      label "%LastX"
      269   
      270     field blkszkb as integer     format ">>9"         label "BSZ"
      271     field rpb     as integer     format ">>9"         label "RPB"
      272     field clstrsz as integer     format ">>9"         label "CSZ"
      273   
      274     field numTbls as integer     format ">>>>9"       label "#Tbls"
      275     field numIdxs as integer     format ">>>>9"       label "#Idxs"
      276     field numLOBs as integer     format ">>>>9"       label "#LOBs"
      277   
      278     field numExts as integer     format ">>>>9"       label "#Exts"
      279     field hasVar  as logical     format "Yes/No"      label "Var?"
      280   
      281     field xnote   as character   format "x"           label "*"
      282   
      283     field areaMaxPct as decimal  format ">>9.999%"    label "Max%"
      284     field idx3264    as decimal  format ">>9.999%"    label "Bug%"
      285   
      286     index pctAlloc-idx is primary pctAlloc descending
      287     index pctLastX-idx pctLastX pctAlloc descending
      288     index allocGB-idx allocGB descending
      289     index totGB-idx totGB descending
      290     index xid-idx is unique xid
      291     index SANum-idx is unique SANum
      292     index SAName-idx is unique SAName
      293   .
      294   
      295   *** Encrypted Source ***
      296   *** Encrypted Source ***
      297   *** Encrypted Source ***
      298   *** Encrypted Source ***
      299   *** Encrypted Source ***
      300   *** Encrypted Source ***
      301   *** Encrypted Source ***
      302   *** Encrypted Source ***
      303   *** Encrypted Source ***
      304   *** Encrypted Source ***
      305   *** Encrypted Source ***
      306   *** Encrypted Source ***
      307   *** Encrypted Source ***
      308   *** Encrypted Source ***
      309   *** Encrypted Source ***
      310   *** Encrypted Source ***
      311   *** Encrypted Source ***
      312   *** Encrypted Source ***
      313   *** Encrypted Source ***
      314   *** Encrypted Source ***
      315   *** Encrypted Source ***
      316   *** Encrypted Source ***
      317   *** Encrypted Source ***
      318   *** Encrypted Source ***
      319   *** Encrypted Source ***
      320   *** Encrypted Source ***
      321   *** Encrypted Source ***
      322   *** Encrypted Source ***
      323   *** Encrypted Source ***
      324   *** Encrypted Source ***
      325   *** Encrypted Source ***
      326   *** Encrypted Source ***
      327   *** Encrypted Source ***
      328   *** Encrypted Source ***
      329   *** Encrypted Source ***
      330   *** Encrypted Source ***
      331   *** Encrypted Source ***
      332   *** Encrypted Source ***
      333   *** Encrypted Source ***
      334   *** Encrypted Source ***
      335   *** Encrypted Source ***
      336   *** Encrypted Source ***
      337   *** Encrypted Source ***
      338   *** Encrypted Source ***
      339   *** Encrypted Source ***
      340   *** Encrypted Source ***
      341   *** Encrypted Source ***
      342   *** Encrypted Source ***
      343   *** Encrypted Source ***
      344   *** Encrypted Source ***
      345   *** Encrypted Source ***
      346   *** Encrypted Source ***
      347   *** Encrypted Source ***
      348   *** Encrypted Source ***
      349   *** Encrypted Source ***
      350   *** Encrypted Source ***
      351   *** Encrypted Source ***
      352   *** Encrypted Source ***
      353   *** Encrypted Source ***
      354   *** Encrypted Source ***
      355   *** Encrypted Source ***
      356   *** Encrypted Source ***
      357   *** Encrypted Source ***
      358   *** Encrypted Source ***
      359   *** Encrypted Source ***
      360   *** Encrypted Source ***
      361   *** Encrypted Source ***
      362   *** Encrypted Source ***
      363   *** Encrypted Source ***
      364   *** Encrypted Source ***
      365    
      366   
      367   /*******************************************************************************
      368    *******************************************************************************
      369    **                                                                           **
      370    **                                                                           **
      371    **  Copyright 2003-2006 Tom Bascom, Greenfield Technologies                  **
      372    **  http://www.greenfieldtech.com                                            **
      373    **                                                                           **
      374    **  ProTop is free software; you can redistribute it and/or modify it        **
      375    **  under the terms of the GNU General Public License (GPL) as published     **
      376    **  by the Free Software Foundation; either version 2 of the License, or     **
      377    **  at your option) any later version.                                       **
      378    **                                                                           **
      379    **  ProTop is distributed in the hope that it will be useful, but WITHOUT    **
      380    **  ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or    **
      381    **  FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License     **
      382    **  for more details.                                                        **
      383    **                                                                           **
      384    **  See TERMS.TXT for more information regarding the Terms and Conditions    **
      385    **  of use and alternative licensing options for this software.              **
      386    **                                                                           **
      387    **  A copy of the GPL is in GPL.TXT which was provided with this package.    **
      388    **                                                                           **
      389    **  See http://www.fsf.org for more information about the GPL.               **
      390    **                                                                           **
      391    **                                                                           **
      392    *******************************************************************************
      393    *******************************************************************************
      394    *
      395    * protoplib.i
      396    *
      397    * ProTop infrastructure library definitions
      398    *
      399    */
      400   
      401   function uDateTime returns integer () in super.
      402   function string2uDateTime returns integer( input p_text as character ) in super.
      403   function searchDir returns character ( input xDir as character ) in super.
      404   function unsignMe returns decimal ( input s as decimal, input i as integer ) in super.
      405   function hr returns decimal ( input lr as decimal, input osr as decimal, output hr-str as character, output hr as decimal, output mr as decimal ) in super.
      406   function do-SumSample returns logical ( output p_index as integer, output p_time  as integer ) in super.
      407   function myPID returns character () in super.
      408   function hilite returns logical ( input b as handle, input p_metric as character, input p_value as character, output p_attr as character ) in super.
      409   
      410   /* end protoplib.i */
      411    
      412   
      413   /*******************************************************************************
      414    *******************************************************************************
      415    **                                                                           **
      416    **                                                                           **
      417    **  Copyright 2003-2006 Tom Bascom, Greenfield Technologies                  **
      418    **  http://www.greenfieldtech.com                                            **
      419    **                                                                           **
      420    **  ProTop is free software; you can redistribute it and/or modify it        **
      421    **  under the terms of the GNU General Public License (GPL) as published     **
      422    **  by the Free Software Foundation; either version 2 of the License, or     **
      423    **  at your option) any later version.                                       **
      424    **                                                                           **
      425    **  ProTop is distributed in the hope that it will be useful, but WITHOUT    **
      426    **  ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or    **
      427    **  FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License     **
      428    **  for more details.                                                        **
      429    **                                                                           **
      430    **  See TERMS.TXT for more information regarding the Terms and Conditions    **
      431    **  of use and alternative licensing options for this software.              **
      432    **                                                                           **
      433    **  A copy of the GPL is in GPL.TXT which was provided with this package.    **
      434    **                                                                           **
      435    **  See http://www.fsf.org for more information about the GPL.               **
      436    **                                                                           **
      437    **                                                                           **
      438    *******************************************************************************
      439    *******************************************************************************
      440    *
      441    * vstlib.i
      442    *
      443    * VST library definitions
      444    *
      445    */
      446   
      447   function aiInfo returns character ( input vAiFile as character, output vAiGenNum as integer ) in super.
      448   function chkai returns integer ( output ai_exts as integer, output ai_full as integer, output ai_empty as integer ) in super.
      449   function chkarea returns integer ( input threshold as decimal, output worst as decimal ) in super.
      450   function chkptNum returns integer ( input-output oldbi as integer ) in super.
      451   
      452   function connectFlags returns character ( input cnxId as integer ) in super.
      453   function connectName returns character ( input cnxId as integer, input cnxFlags as character ) in super.
      454   function lastStatement returns character( input cnxId as integer, output lineNum as integer, output procName as character ) in super.
      455   
      456   function isAIEnabled returns logical () in super.
      457   function isReplSource returns logical () in super.
      458   function isReplTarget returns logical () in super.
      459   function isBackupRunning returns logical () in super.
      460   function isWorkgroup returns logical () in super.
      461   
      462   function getStartupX returns character ( input v as character, input p1 as character, input p2 as character ) in super.
      463   
      464   /* end vstlib.i */
      465    
      466   
      467   function add2ds returns logical ( input h as handle ) in super.
      468   function getTempTableHandle returns handle ( input n as character ) in super.
      469   
      470   /* end protop.i */
      471    
      472   
      473   /*** Install self as a session super-procedure
      474    ***
      475    ***/
      476   
      477   session:add-super-procedure( this-procedure ).
      478   
      479   /* only do this once -- at startup
      480    */
      481   
      482   pt_uniqName  = ldbname( 1 ).
      483   if pt_uniqName = ? then pt_uniqName = "pt".
      484   
      485   /* if the user is not running with -rand 2 then random() will always repeat -- so we need to salt it
      486    * this is ugly but it doesn't need to be "truly" random for any other reason, we're just trying to
      487    * avoid obvious naming collisions
      488    */
      489   
      490   do i = 1 to (( day( today ) * year( today )) / 50 ):
      491     j = random( 0, day( today ) * month( today )).
      492   end.
      493   
      494   pt_uniqName = pt_uniqName + string( random( 0, max( 100, integer( time ))), "99999" ).
      495   
      496   message now "pt_uniqName = " pt_uniqName.
      497   
      498   assign
      499     pt_logname    = "&5.&2.&3"
      500     ptCfg_date    = ?
      501     ptCfg_time    = 0
      502     pt_votrx      = 1800
      503     pt_lktbllim   = 10000
      504     pt_bkupstale  = 26
      505     pt_bogomips   = 1000000
      506     pt_ioresp     = 100
      507     pt_ioFileName = ""
      508   .
      509   
      510   *** Encrypted Source ***
      511   *** Encrypted Source ***
      512   *** Encrypted Source ***
      513   *** Encrypted Source ***
      514   *** Encrypted Source ***
      515   *** Encrypted Source ***
      516   *** Encrypted Source ***
      517   *** Encrypted Source ***
      518   *** Encrypted Source ***
      519   *** Encrypted Source ***
      520   *** Encrypted Source ***
      521   *** Encrypted Source ***
      522   *** Encrypted Source ***
      523   *** Encrypted Source ***
      524   *** Encrypted Source ***
      525   *** Encrypted Source ***
      526   *** Encrypted Source ***
      527   *** Encrypted Source ***
      528   *** Encrypted Source ***
      529   *** Encrypted Source ***
      530   *** Encrypted Source ***
      531   *** Encrypted Source ***
      532   *** Encrypted Source ***
      533   *** Encrypted Source ***
      534   *** Encrypted Source ***
      535   *** Encrypted Source ***
      536   *** Encrypted Source ***
      537   *** Encrypted Source ***
      538   *** Encrypted Source ***
      539   *** Encrypted Source ***
      540   *** Encrypted Source ***
      541   *** Encrypted Source ***
      542   *** Encrypted Source ***
      543   *** Encrypted Source ***
      544   *** Encrypted Source ***
      545   *** Encrypted Source ***
      546   *** Encrypted Source ***
      547   *** Encrypted Source ***
      548   *** Encrypted Source ***
      549   *** Encrypted Source ***
      550   *** Encrypted Source ***
      551   *** Encrypted Source ***
      552   *** Encrypted Source ***
      553   *** Encrypted Source ***
      554   *** Encrypted Source ***
      555   *** Encrypted Source ***
      556   *** Encrypted Source ***
      557   *** Encrypted Source ***
      558   *** Encrypted Source ***
      559   *** Encrypted Source ***
      560   *** Encrypted Source ***
      561   *** Encrypted Source ***
      562   *** Encrypted Source ***
      563   *** Encrypted Source ***
      564   *** Encrypted Source ***
      565   *** Encrypted Source ***
      566   *** Encrypted Source ***
      567   *** Encrypted Source ***
      568   *** Encrypted Source ***
      569   *** Encrypted Source ***
      570   *** Encrypted Source ***
      571   *** Encrypted Source ***
      572   *** Encrypted Source ***
      573    
      574   
      575   run ptConfig.
      576   
      577   if dbgMode >= 5 then
      578     message now
      579       "pt_tmpdir  = " pt_tmpdir  " "
      580       "pt_logdir  = " pt_logdir  " "
      581       "pt_rptdir  = " pt_rptdir  " "
      582       "pt_mailcmd = " pt_mailcmd
      583     .
      584   
      585   message now "etc/protop.cfg complete.".
      586   
      587   return.
      588   
      589   
      590   /*** Make ptConfig available as a callable super-procedure
      591    ***
      592    ***/
      593   
      594   procedure ptConfig:
      595   
      596     define variable dbListLine as character no-undo.
      597   
      598     define variable i as integer   no-undo.
      599   
      600     define variable k as character no-undo.
      601     define variable v as character no-undo.
      602   
      603     if connected( "dictdb" ) then run lib/setptname.p.
      604   
      605     /* set some reasonable defaults for key config variables
      606      */
      607   
      608     assign
      609       pt_mailcmd   = os-getenv( "MAILCMD" )       /*      'mailx -s "&1" '        */
      610       pt_logdir    = os-getenv( "LOGDIR" )        /*      "/tmp"                  */
      611       pt_tmpdir    = os-getenv( "PTTMP" )         /*      TMPDIR gets whacked by the C library :(         */
      612       pt_rptdir    = os-getenv( "RPTDIR" )        /*      "/tmp"                  */
      613     .
      614   
      615     if pt_mailcmd = ? or pt_mailcmd = "" then
      616       do:
      617         if opsys = "unix" then
      618           pt_mailcmd = 'mailx &3 -s "&2" &1'.
      619          else
      620           pt_mailcmd = 'mailx &1 "&2" '.
      621       end.
      622   
      623     if pt_logdir = ? or pt_logdir = "" then
      624       do:
      625   
      626         file-info:file-name = search( "logs" ).
      627         if file-info:full-pathname = ? then file-info:file-name = search( "logdir" ).
      628         if file-info:full-pathname = ? then file-info:file-name = "./logs".
      629         if file-info:full-pathname = ? then file-info:file-name = "./logdir".
      630         if file-info:full-pathname = ? then file-info:file-name = search( "vstmon" ).
      631         if file-info:full-pathname = ? then file-info:file-name = "./tmp".
      632         if file-info:full-pathname = ? then file-info:file-name = "./temp".
      633   
      634         if file-info:full-pathname <> ? then
      635           pt_logdir  = file-info:full-pathname.
      636          else
      637           pt_logdir  = session:temp-directory.
      638   
      639       end.
      640   
      641     if pt_tmpdir = ? or pt_tmpdir = "" then
      642       do:
      643   
      644         file-info:file-name = search( "tmp" ).
      645         if file-info:full-pathname = ? then file-info:file-name = "./tmp".
      646   
      647         if file-info:full-pathname <> ? then
      648           pt_tmpdir  = file-info:full-pathname.
      649          else
      650           pt_tmpdir  = session:temp-directory.
      651   
      652       end.
      653   
      654     /* figure out the server name
      655      *
      656      * the environment variable is useful in a cluster to set the cluster name rather than the node name
      657      *
      658      * etc/protop.cfg can also OVERRIDE this block of code
      659      *
      660      */
      661   
      662     pt_server = trim( os-getenv( "PTSERVER" )).
      663   
      664     if pt_server = ? or pt_server = "" then
      665       do:
      666   
      667         if opsys = "unix" then
      668           do:
      669             input stream inStrm through value( "uname -a" ).
      670             import stream inStrm ^ pt_server.
      671             input stream inStrm close.
      672           end.
      673          else
      674           do:
      675             input stream inStrm through value( "hostname" ).
      676             import stream inStrm pt_server.
      677             input stream inStrm close.
      678           end.
      679   
      680       end.  
      681   
      682     file-info:file-name = search( "etc/dblist.cfg" ).
      683     
      684     if file-info:full-pathname <> ? then
      685       do:
      686   
      687         input stream inStrm from value( file-info:full-pathname ).
      688         repeat:
      689   
      690           dbListLine = "".
      691           import stream inStrm unformatted dbListLine.
      692   
      693           if dbListLine = "" or dbListLine begins "#" then next.
      694           if entry( 1, dbListLine, "|" ) <> pt_shortName then next.
      695           if num-entries( dbListLine, "|" ) < 6 then next.
      696   
      697           pt_resrcType = entry( 6, dbListLine, "|" ).
      698   
      699         end.
      700         input stream inStrm close.
      701   
      702       end.
      703   
      704     /* if it exists use etc/protop.cfg
      705      *
      706      */
      707   
      708     file-info:file-name = search( "etc/protop.cfg" ).
      709   
      710     message now "pt_config = " file-info:full-pathname.
      711   
      712     if file-info:full-pathname = ? then
      713       do:
      714   
      715         assign
      716           pt_logname    = "&5.&2.&3"
      717           ptCfg_date    = ?
      718           ptCfg_time    = 0
      719           pt_votrx      = 1800
      720           pt_lktbllim   = 10000
      721           pt_bkupstale  = 26
      722           pt_bogomips   = 1000000
      723           pt_ioresp     = 100
      724           pt_ioFileName = ""
      725           pt_AICheckInterval   = 60
      726           pt_PICACheckInterval = 60
      727           pt_appsrvStuck = 120
      728           pt_zoomTo      = 30
      729         .
      730   
      731               732   *** Encrypted Source ***
      733   *** Encrypted Source ***
      734   *** Encrypted Source ***
      735   *** Encrypted Source ***
      736   *** Encrypted Source ***
      737   *** Encrypted Source ***
      738   *** Encrypted Source ***
      739   *** Encrypted Source ***
      740   *** Encrypted Source ***
      741   *** Encrypted Source ***
      742   *** Encrypted Source ***
      743   *** Encrypted Source ***
      744   *** Encrypted Source ***
      745   *** Encrypted Source ***
      746   *** Encrypted Source ***
      747   *** Encrypted Source ***
      748   *** Encrypted Source ***
      749   *** Encrypted Source ***
      750   *** Encrypted Source ***
      751   *** Encrypted Source ***
      752   *** Encrypted Source ***
      753   *** Encrypted Source ***
      754   *** Encrypted Source ***
      755   *** Encrypted Source ***
      756   *** Encrypted Source ***
      757   *** Encrypted Source ***
      758   *** Encrypted Source ***
      759   *** Encrypted Source ***
      760   *** Encrypted Source ***
      761   *** Encrypted Source ***
      762   *** Encrypted Source ***
      763   *** Encrypted Source ***
      764   *** Encrypted Source ***
      765   *** Encrypted Source ***
      766   *** Encrypted Source ***
      767   *** Encrypted Source ***
      768   *** Encrypted Source ***
      769   *** Encrypted Source ***
      770   *** Encrypted Source ***
      771   *** Encrypted Source ***
      772   *** Encrypted Source ***
      773   *** Encrypted Source ***
      774   *** Encrypted Source ***
      775   *** Encrypted Source ***
      776   *** Encrypted Source ***
      777   *** Encrypted Source ***
      778   *** Encrypted Source ***
      779   *** Encrypted Source ***
      780   *** Encrypted Source ***
      781   *** Encrypted Source ***
      782   *** Encrypted Source ***
      783   *** Encrypted Source ***
      784   *** Encrypted Source ***
      785   *** Encrypted Source ***
      786   *** Encrypted Source ***
      787   *** Encrypted Source ***
      788   *** Encrypted Source ***
      789   *** Encrypted Source ***
      790   *** Encrypted Source ***
      791   *** Encrypted Source ***
      792   *** Encrypted Source ***
      793   *** Encrypted Source ***
      794    
      795   
      796       end.
      797      else
      798       do:
      799   
      800         if dbgMode >= 5 then
      801           message now
      802             "check config:" file-info:file-mod-date ptCfg_date file-info:file-mod-time ptCfg_time
      803             ( file-info:file-mod-date <> ptCfg_date or file-info:file-mod-time <> ptCfg_time )
      804           .
      805   
      806         if file-info:file-mod-date <> ptCfg_date or file-info:file-mod-time <> ptCfg_time then
      807           do:
      808   
      809             assign
      810               ptCfg_date = file-info:file-mod-date
      811               ptCfg_time = file-info:file-mod-time
      812             .
      813   
      814             message now "reading config file:" file-info:full-pathname.
      815   
      816             input stream inStrm from value( file-info:full-pathname ).
      817   
      818             repeat on endkey undo, leave:
      819   
      820               assign
      821                 k = ""
      822                 v = ""
      823               .
      824   
      825               import stream inStrm k v.
      826   
      827               if k = "" or k = ? or k begins "#" then next.
      828   
      829               if dbgMode >= 3 then message now substitute( "&1 = [&2]", k, v ).
      830   
      831               case k:
      832   
      833                 when "logdir"     then pt_logdir     = v.
      834                 when "logname"    then pt_logname    = v.
      835                 when "mailcmd"    then pt_mailcmd    = v.
      836                 when "server"     then pt_server     = v. /* over-ride uname -- useful for Windows but eliminates shared protop.cfg files */
      837   
      838                 when "votrx"      then pt_votrx      = integer( v ) no-error.
      839                 when "lktbllim"   then pt_lktbllim   = integer( v ) no-error.
      840                 when "bkupstale"  then pt_bkupstale  = integer( v ) no-error.
      841                 when "bogomips"   then pt_bogomips   = integer( v ) no-error.
      842                 when "ioresp"     then pt_ioresp     = integer( v ) no-error.
      843                 when "ioFileName" then pt_ioFileName = v.
      844                 when "dfCmd"      then pt_dfCmd      = v.
      845   
      846                 when "AICheckInterval"   then pt_AICheckInterval   = integer( v ) no-error.
      847                 when "PICACheckInterval" then pt_PICACheckInterval = integer( v ) no-error.
      848                 when "appsrvStuck"       then pt_appsrvStuck       = integer( v ) no-error.
      849                 when "zoomTo"            then pt_zoomTo            = integer( v ) no-error.
      850   
      851                       852   *** Encrypted Source ***
      853   *** Encrypted Source ***
      854   *** Encrypted Source ***
      855   *** Encrypted Source ***
      856   *** Encrypted Source ***
      857   *** Encrypted Source ***
      858   *** Encrypted Source ***
      859   *** Encrypted Source ***
      860   *** Encrypted Source ***
      861   *** Encrypted Source ***
      862   *** Encrypted Source ***
      863   *** Encrypted Source ***
      864   *** Encrypted Source ***
      865   *** Encrypted Source ***
      866   *** Encrypted Source ***
      867   *** Encrypted Source ***
      868   *** Encrypted Source ***
      869   *** Encrypted Source ***
      870   *** Encrypted Source ***
      871   *** Encrypted Source ***
      872   *** Encrypted Source ***
      873   *** Encrypted Source ***
      874   *** Encrypted Source ***
      875   *** Encrypted Source ***
      876   *** Encrypted Source ***
      877   *** Encrypted Source ***
      878   *** Encrypted Source ***
      879   *** Encrypted Source ***
      880   *** Encrypted Source ***
      881   *** Encrypted Source ***
      882   *** Encrypted Source ***
      883   *** Encrypted Source ***
      884   *** Encrypted Source ***
      885   *** Encrypted Source ***
      886   *** Encrypted Source ***
      887   *** Encrypted Source ***
      888   *** Encrypted Source ***
      889   *** Encrypted Source ***
      890   *** Encrypted Source ***
      891   *** Encrypted Source ***
      892   *** Encrypted Source ***
      893   *** Encrypted Source ***
      894   *** Encrypted Source ***
      895   *** Encrypted Source ***
      896   *** Encrypted Source ***
      897   *** Encrypted Source ***
      898   *** Encrypted Source ***
      899   *** Encrypted Source ***
      900   *** Encrypted Source ***
      901   *** Encrypted Source ***
      902   *** Encrypted Source ***
      903   *** Encrypted Source ***
      904   *** Encrypted Source ***
      905   *** Encrypted Source ***
      906   *** Encrypted Source ***
      907   *** Encrypted Source ***
      908   *** Encrypted Source ***
      909   *** Encrypted Source ***
      910   *** Encrypted Source ***
      911   *** Encrypted Source ***
      912   *** Encrypted Source ***
      913   *** Encrypted Source ***
      914   *** Encrypted Source ***
      915   *** Encrypted Source ***
      916   *** Encrypted Source ***
      917    
      918   
      919               end.
      920   
      921             end.
      922   
      923             input stream inStrm close.
      924   
      925             /* bin/localenv variables
      926              */
      927   
      928             if os-getenv( "IOFILENAME" ) <> ? then pt_ioFileName = os-getenv( "IOFILENAME" ).
      929             if os-getenv( "DFCMD" )      <> ? then pt_dfCmd      = os-getenv( "DFCMD" ).
      930             if os-getenv( "VOTRX" )      <> ? then pt_votrx      = integer( os-getenv( "VOTRX"    )) no-error.
      931             if os-getenv( "LKTBLLIM" )   <> ? then pt_lktbllim   = integer( os-getenv( "LKTBLLIM" )) no-error.
      932             if os-getenv( "BOGOMIPS" )   <> ? then pt_bogomips   = integer( os-getenv( "BOGOMIPS" )) no-error.
      933             if os-getenv( "IORESP" )     <> ? then pt_ioresp     = integer( os-getenv( "IORESP"   )) no-error.
      934   
      935             if os-getenv( "AICHECKINTERVAL" )   <> ? then pt_AICheckInterval   = integer( os-getenv( "AICHECKINTERVAL"   )) no-error.
      936             if os-getenv( "PICACHECKINTERVAL" ) <> ? then pt_PICACheckInterval = integer( os-getenv( "PICACHECKINTERVAL" )) no-error.
      937             if os-getenv( "APPSRVSTUCK" )       <> ? then pt_appsrvStuck       = integer( os-getenv( "APPSRVSTUCK"       )) no-error.
      938   
      939             if os-getenv( "ZOOMTO" )            <> ? then pt_zoomTo            = integer( os-getenv( "ZOOMTO"            )) no-error.
      940             if pt_zoomTo = ? or pt_zoomTo = 0 then pt_zoomTo = 30.
      941   
      942             /* alert on long bi backup phase
      943              */
      944   
      945             pt_bibkUpAlert = integer( os-getenv( "BIBKUP_ALERT" )) no-error.
      946             if pt_bibkUpAlert = ? then pt_bibkUpAlert = 60.
      947   
      948             pt_bibkUpAlarm = integer( os-getenv( "BIBKUP_ALARM" )) no-error.
      949             if pt_bibkUpAlarm = ? then pt_bibkUpAlarm = 300.
      950   
      951             pt_bibkUpPage  = integer( os-getenv( "BIBKUP_PAGE" )) no-error.
      952             if pt_bibkUpPage = ? then pt_bibkUpPage = 0.
      953   
      954             /* alert on long backups
      955              */
      956   
      957             pt_bkUpAlert = integer( os-getenv( "BKUP_ALERT" )) no-error.
      958             if pt_bkUpAlert = ? then pt_bkUpAlert = 0.
      959   
      960             pt_bkUpAlarm = integer( os-getenv( "BKUP_ALARM" )) no-error.
      961             if pt_bkUpAlarm = ? then pt_bkUpAlarm = 0.
      962   
      963             pt_bkUpPage  = integer( os-getenv( "BKUP_PAGE" )) no-error.
      964             if pt_bkUpPage = ? then pt_bkUpPage = 0.
      965   
      966             /* other tweakable features
      967              */
      968   
      969             if os-getenv( "USEREXP" ) begins "n" then
      970               pt_doZippy = no.
      971              else
      972               pt_doZippy = yes.
      973   
      974             if os-getenv( "USERFUTIL" ) begins "n" then
      975               pt_useRFUtil = no.
      976              else
      977               pt_useRFUtil = yes.
      978   
      979             if os-getenv( "USERLOCK" ) begins "y" then
      980               pt_userLock = yes.
      981              else
      982               do:
      983                 if connected( "dictdb"  ) then run lib/userlock.p ( input-output pt_userLock ).
      984               end.
      985   
      986             pt_updAreaData = integer( os-getenv( "UPDAREADATA" )) no-error.
      987             if pt_updAreaData = ? then pt_updAreaData = 3600 * 6.
      988   
      989   
      990             /* restricted features
      991              */
      992   
      993             file-info:file-name = "ssg/sausage26.r".
      994             if file-info:full-pathname = ? then
      995               file-info:file-name = "ssg/sausage26.p".
      996   
      997             if file-info:full-pathname <> ? then
      998               run ssg/sausage26.p.
      999   
     1000           end.
     1001   
     1002       end.
     1003   
     1004   end.
