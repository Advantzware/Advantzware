        1   /* lib/isbackup.p
        2    *
        3    */
        4   
        5   
        6   /*******************************************************************************
        7    *******************************************************************************
        8    **                                                                           **
        9    **                                                                           **
       10    **  Copyright 2003-2006 Tom Bascom, Greenfield Technologies                  **
       11    **  http://www.greenfieldtech.com                                            **
       12    **                                                                           **
       13    **  ProTop is free software; you can redistribute it and/or modify it        **
       14    **  under the terms of the GNU General Public License (GPL) as published     **
       15    **  by the Free Software Foundation; either version 2 of the License, or     **
       16    **  at your option) any later version.                                       **
       17    **                                                                           **
       18    **  ProTop is distributed in the hope that it will be useful, but WITHOUT    **
       19    **  ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or    **
       20    **  FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License     **
       21    **  for more details.                                                        **
       22    **                                                                           **
       23    **  See TERMS.TXT for more information regarding the Terms and Conditions    **
       24    **  of use and alternative licensing options for this software.              **
       25    **                                                                           **
       26    **  A copy of the GPL is in GPL.TXT which was provided with this package.    **
       27    **                                                                           **
       28    **  See http://www.fsf.org for more information about the GPL.               **
       29    **                                                                           **
       30    **                                                                           **
       31    *******************************************************************************
       32    *******************************************************************************
       33    *
       34    * protop.i
       35    *
       36    * Header file for protop family of programs
       37    *
       38    *
       39    * Known Bugs & Issues:
       40    *
       41    *
       42    * To Do:
       43    *
       44    *
       45    * Author:
       46    *
       47    *      Tom Bascom, Greenfield Technologies
       48    *      http://www.greenfieldtech.com
       49    *      August 28, 2003
       50    *
       51    */
       52   
       53   &IF DECIMAL(SUBSTRING(PROVERSION,1,INDEX(PROVERSION,".") + 1)) >= 11.4 &THEN
       54   &global-define  FASTLOCK        true
       55   &ELSE
       56   &global-define  FASTLOCK        false
       57   &ENDIF
       58   
       59   &IF DECIMAL(SUBSTRING(PROVERSION,1,INDEX(PROVERSION,".") + 1)) >= 11.0 &THEN
       60   &global-define  OE11            "yes"
       61   &global-define  xDEBUGTT        false
       62   &ENDIF
       63   
       64   &IF DECIMAL(SUBSTRING(PROVERSION,1,INDEX(PROVERSION,".") + 1)) >= 10.2 AND PROVERSION >= "10.2B" &THEN
       65   &global-define  NOSERIALIZE     serialize-hidden
       66   &ENDIF
       67   
       68   &IF DECIMAL(SUBSTRING(PROVERSION,1,INDEX(PROVERSION,".") + 1)) >= 10.1 AND PROVERSION >= "10.1B" &THEN
       69   &global-define  BIGINT          int64
       70   &ELSE
       71   &global-define  BIGINT          decimal
       72   &ENDIF
       73   
       74   
       75   /* lib/v9.i
       76    *
       77    */
       78   
       79   &IF DECIMAL(SUBSTRING(PROVERSION,1,INDEX(PROVERSION,".") + 1)) < 10.0 &THEN
       80   &global-define  CPYLOB  "no"
       81   &global-define  NOW     substitute( "&1 &2", today, string( time, "hh:mm:ss" ))
       82   &global-define  LNGCR   character
       83   &global-define  DTZ     integer
       84   &global-define  BIGINT  decimal
       85   &ELSE
       86   &global-define  OE10    "yes"
       87   &global-define  NOW     now
       88   &global-define  LNGCR   longchar
       89   &global-define  DTZ     datetime-tz
       90   &global-define  BIGINT  int64
       91   &ENDIF
       92    
       93   
       94   /* use extended _connect fields: -client, -cache*
       95    */
       96   
       97   &IF DECIMAL(SUBSTRING(PROVERSION,1,INDEX(PROVERSION,".") + 1)) >= 10.1 AND PROVERSION >= "10.1C" &THEN
       98   &global-define  CONNECTX        "yes"
       99   &ELSE
      100   &global-define  CONNECTX        "no"
      101   &ENDIF
      102   
      103   define stream inStrm.
      104   
      105   define new global shared variable dbgMode as integer no-undo initial 1.
      106   
      107   /* The values for these are defined in etc/protop.cfg and set by lib/protop-cfg.p
      108    *
      109    * someday everyone will have OO and I will replace these with a gsv class
      110    * or something of that ilk
      111    *
      112    */
      113   
      114   define new global shared variable pt_shortname   as character no-undo.
      115   define new global shared variable pt_uniqName    as character no-undo.
      116   define new global shared variable pt_server      as character no-undo.
      117   define new global shared variable pt_resrcType   as character no-undo.
      118   
      119   define new global shared variable pt_tmpdir      as character no-undo initial "/tmp".
      120   define new global shared variable pt_logdir      as character no-undo initial "/tmp".
      121   define new global shared variable pt_rptdir      as character no-undo initial "/tmp".
      122   define new global shared variable pt_logname     as character no-undo initial "&5.&2.&3".
      123   define new global shared variable pt_mailcmd     as character no-undo initial 'mailx "-s &1" '.
      124   
      125   define new global shared variable pt_votrx       as integer   no-undo initial 1800.
      126   define new global shared variable pt_lktbllim    as integer   no-undo initial 0.
      127   define new global shared variable pt_bkupstale   as integer   no-undo initial 26.
      128   define new global shared variable pt_bogomips    as integer   no-undo initial 1000000.
      129   define new global shared variable pt_ioresp      as integer   no-undo initial 100.
      130   define new global shared variable pt_ioFileName  as character no-undo.
      131   define new global shared variable pt_dfCmd       as character no-undo.
      132   
      133   define new global shared variable pt_AICheckInterval   as integer no-undo initial 60.
      134   define new global shared variable pt_PICACheckInterval as integer no-undo initial 60.
      135   define new global shared variable pt_appsrvStuck       as integer no-undo initial 120.
      136   
      137   define new global shared variable pt_bibkupAlert as integer   no-undo.          /* alert on long bi backup phase                */
      138   define new global shared variable pt_bibkupAlarm as integer   no-undo.          /* alarm on long bi backup phase                */
      139   define new global shared variable pt_bibkupPage  as integer   no-undo.          /* page  on long bi backup phase                */
      140   
      141   define new global shared variable pt_bkupAlert   as integer   no-undo.          /* alert on long db backup                      */
      142   define new global shared variable pt_bkupAlarm   as integer   no-undo.          /* alarm on long db backup                      */
      143   define new global shared variable pt_bkupPage    as integer   no-undo.          /* page  on long db backup                      */
      144   
      145   define new global shared variable pt_userLock    as logical   no-undo.          /* enable _userLock  data?                      */
      146   define new global shared variable pt_doZippy     as logical   no-undo.          /* enable "user experience" (aka "zippy")?      */
      147   define new global shared variable pt_useRFUtil   as logical   no-undo.          /* use rfutil to gather after-imaging status?   */
      148   
      149   define new global shared variable pt_updAreaData as integer   no-undo.          /* how often should we report storage area xref details from dbanalys? */
      150   
      151   define new global shared variable pt_zoomTo      as integer no-undo.            /* new zoomed monInt                            */
      152   
      153   define new global shared variable ptDBName     as character no-undo.                    /* the db logical name          */
      154   define new global shared variable rowLimit     as integer   no-undo initial 100.        /* 50?                          */
      155   
      156   /* do-sumSample() manipulates these -- ugly, ugly, ugly... (obsolete?)
      157    * 
      158    */
      159   
      160   define new global shared variable stime as integer no-undo.                     /* start time                           */
      161   define new global shared variable ltime as integer no-undo.                     /* last time                            */
      162   define new global shared variable xtime as integer no-undo.                     /* total time                           */
      163   define new global shared variable itime as integer no-undo.                     /* iteration time                       */
      164   
      165   define new global shared variable chkp-base   as integer no-undo initial ?.     /* cover for the lack of a VST field    */
      166   
      167                                                                                   /* corresponding to base checkpoint#    */
      168   /** Global Shared Temp Table Definitions
      169    **
      170    ** Yup, they're shared.  But this stuff makes no sense across session boundaries anyway.
      171    ** And a shared temp-table is logically the same as a db table so who really cares?
      172    **
      173    **/
      174   
      175   /* cache _File and _Index records so that we don't keep hitting the db to translate
      176    */
      177   
      178   define new global shared temp-table tt_tbl no-undo
      179     field xid      as integer                                             /* _File._File-Num              */
      180     field tstatid  as integer                                             /* _TableStat._TableStat-Id     */
      181     field areaNum  as integer                                             /* _Storage-Object._Area-Number */
      182     field tblPool  as character                                           /* get-bits( _object-attrib, 7, 1 ) = 1 */
      183     field tblname  as character                                           /* _File._File-Name             */
      184     index xid-idx is unique primary xid.
      185   
      186   define new global shared temp-table tt_idx no-undo
      187     field xid      as integer                                             /* _Index._Idx-Num              */
      188     field istatid  as integer                                             /* _IndexStat._IndexStat-Id     */
      189     field idxname  as character                                           /* _Index._Idx-Name             */
      190     field idxnote  as character
      191     field idxRoot  as int64                                           /* _Storage-Object._Object-Root */
      192     field tblnum   as integer                                             /* _File._File-Num              */
      193     field areaNum  as integer                                             /* _Storage-Object._Area-Number */
      194     field idxPool  as character                                           /* get-bits( _object-attrib, 7, 1 ) = 1 */
      195     field tblname  as character                                           /* _File._File-Name             */
      196     index xid-idx is unique primary xid.
      197   
      198   define new global shared temp-table tt_areaExtent no-undo
      199     field areaNum  as integer                                             /* _areaExtent._Area-Number     */
      200     field extNum   as integer                                             /* _areaExtent._Extent-Number   */
      201   
      202     field extSize  as decimal                                             /* _areaExtent._Extent-Size     */
      203     field extType  as integer                                             /* _areaExtent._Extent-Type     */
      204     field extPath  as character                                           /* _areaExtent._Extent-Path     */
      205   
      206     index ae-idx is unique primary areaNum extNum.
      207   
      208   define new global shared temp-table tt_area no-undo
      209     field xid      as integer    format ">>>9"
      210     field SANum    as integer    format ">>>9"        label "#"
      211     field areaPool as character  format "x(2)"        label "BX"
      212   /*field areaStatus-Id as {&BIGINT} format ">>>9"    label "Id" */
      213     field SAName   as character  format "x(30)"       label "Area Name"
      214     field allocGB  as decimal    format ">>>>>9.99"   label "Allocated"
      215     field varGB    as decimal    format ">>>>>9.99"   label "Variable"
      216     field totGB    as decimal    format ">>>>>>9.99"  label "Tot GB"
      217     field hiGB     as decimal    format ">>>>>9.99"   label "Hi Water" serialize-hidden
      218     field freeGB   as decimal    format ">>>>>9.99"   label "Free GB"
      219     field pctAlloc as decimal    format ">>>>>9%"     label "%Alloc"
      220     field pctLastX as decimal    format ">>>>9%"      label "%LastX"
      221   
      222     field blkszkb as integer     format ">>9"         label "BSZ"
      223     field rpb     as integer     format ">>9"         label "RPB"
      224     field clstrsz as integer     format ">>9"         label "CSZ"
      225   
      226     field numTbls as integer     format ">>>>9"       label "#Tbls"
      227     field numIdxs as integer     format ">>>>9"       label "#Idxs"
      228     field numLOBs as integer     format ">>>>9"       label "#LOBs"
      229   
      230     field numExts as integer     format ">>>>9"       label "#Exts"
      231     field hasVar  as logical     format "Yes/No"      label "Var?"
      232   
      233     field xnote   as character   format "x"           label "*"
      234   
      235     field areaMaxPct as decimal  format ">>9.999%"    label "Max%"
      236     field idx3264    as decimal  format ">>9.999%"    label "Bug%"
      237   
      238     index pctAlloc-idx is primary pctAlloc descending
      239     index pctLastX-idx pctLastX pctAlloc descending
      240     index allocGB-idx allocGB descending
      241     index totGB-idx totGB descending
      242     index xid-idx is unique xid
      243     index SANum-idx is unique SANum
      244     index SAName-idx is unique SAName
      245   .
      246   
      247   *** Encrypted Source ***
      248   *** Encrypted Source ***
      249   *** Encrypted Source ***
      250   *** Encrypted Source ***
      251   *** Encrypted Source ***
      252   *** Encrypted Source ***
      253   *** Encrypted Source ***
      254   *** Encrypted Source ***
      255   *** Encrypted Source ***
      256   *** Encrypted Source ***
      257   *** Encrypted Source ***
      258   *** Encrypted Source ***
      259   *** Encrypted Source ***
      260   *** Encrypted Source ***
      261   *** Encrypted Source ***
      262   *** Encrypted Source ***
      263   *** Encrypted Source ***
      264   *** Encrypted Source ***
      265   *** Encrypted Source ***
      266   *** Encrypted Source ***
      267   *** Encrypted Source ***
      268   *** Encrypted Source ***
      269   *** Encrypted Source ***
      270   *** Encrypted Source ***
      271   *** Encrypted Source ***
      272   *** Encrypted Source ***
      273   *** Encrypted Source ***
      274   *** Encrypted Source ***
      275   *** Encrypted Source ***
      276   *** Encrypted Source ***
      277   *** Encrypted Source ***
      278   *** Encrypted Source ***
      279   *** Encrypted Source ***
      280   *** Encrypted Source ***
      281   *** Encrypted Source ***
      282   *** Encrypted Source ***
      283   *** Encrypted Source ***
      284   *** Encrypted Source ***
      285   *** Encrypted Source ***
      286   *** Encrypted Source ***
      287   *** Encrypted Source ***
      288   *** Encrypted Source ***
      289   *** Encrypted Source ***
      290   *** Encrypted Source ***
      291   *** Encrypted Source ***
      292   *** Encrypted Source ***
      293   *** Encrypted Source ***
      294   *** Encrypted Source ***
      295   *** Encrypted Source ***
      296   *** Encrypted Source ***
      297   *** Encrypted Source ***
      298   *** Encrypted Source ***
      299   *** Encrypted Source ***
      300   *** Encrypted Source ***
      301   *** Encrypted Source ***
      302   *** Encrypted Source ***
      303   *** Encrypted Source ***
      304   *** Encrypted Source ***
      305   *** Encrypted Source ***
      306   *** Encrypted Source ***
      307   *** Encrypted Source ***
      308   *** Encrypted Source ***
      309   *** Encrypted Source ***
      310   *** Encrypted Source ***
      311   *** Encrypted Source ***
      312   *** Encrypted Source ***
      313   *** Encrypted Source ***
      314   *** Encrypted Source ***
      315   *** Encrypted Source ***
      316   *** Encrypted Source ***
      317    
      318   
      319   /*******************************************************************************
      320    *******************************************************************************
      321    **                                                                           **
      322    **                                                                           **
      323    **  Copyright 2003-2006 Tom Bascom, Greenfield Technologies                  **
      324    **  http://www.greenfieldtech.com                                            **
      325    **                                                                           **
      326    **  ProTop is free software; you can redistribute it and/or modify it        **
      327    **  under the terms of the GNU General Public License (GPL) as published     **
      328    **  by the Free Software Foundation; either version 2 of the License, or     **
      329    **  at your option) any later version.                                       **
      330    **                                                                           **
      331    **  ProTop is distributed in the hope that it will be useful, but WITHOUT    **
      332    **  ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or    **
      333    **  FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License     **
      334    **  for more details.                                                        **
      335    **                                                                           **
      336    **  See TERMS.TXT for more information regarding the Terms and Conditions    **
      337    **  of use and alternative licensing options for this software.              **
      338    **                                                                           **
      339    **  A copy of the GPL is in GPL.TXT which was provided with this package.    **
      340    **                                                                           **
      341    **  See http://www.fsf.org for more information about the GPL.               **
      342    **                                                                           **
      343    **                                                                           **
      344    *******************************************************************************
      345    *******************************************************************************
      346    *
      347    * protoplib.i
      348    *
      349    * ProTop infrastructure library definitions
      350    *
      351    */
      352   
      353   function uDateTime returns integer () in super.
      354   function string2uDateTime returns integer( input p_text as character ) in super.
      355   function searchDir returns character ( input xDir as character ) in super.
      356   function unsignMe returns decimal ( input s as decimal, input i as integer ) in super.
      357   function hr returns decimal ( input lr as decimal, input osr as decimal, output hr-str as character, output hr as decimal, output mr as decimal ) in super.
      358   function do-SumSample returns logical ( output p_index as integer, output p_time  as integer ) in super.
      359   function myPID returns character () in super.
      360   function hilite returns logical ( input b as handle, input p_metric as character, input p_value as character, output p_attr as character ) in super.
      361   
      362   /* end protoplib.i */
      363    
      364   
      365   /*******************************************************************************
      366    *******************************************************************************
      367    **                                                                           **
      368    **                                                                           **
      369    **  Copyright 2003-2006 Tom Bascom, Greenfield Technologies                  **
      370    **  http://www.greenfieldtech.com                                            **
      371    **                                                                           **
      372    **  ProTop is free software; you can redistribute it and/or modify it        **
      373    **  under the terms of the GNU General Public License (GPL) as published     **
      374    **  by the Free Software Foundation; either version 2 of the License, or     **
      375    **  at your option) any later version.                                       **
      376    **                                                                           **
      377    **  ProTop is distributed in the hope that it will be useful, but WITHOUT    **
      378    **  ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or    **
      379    **  FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License     **
      380    **  for more details.                                                        **
      381    **                                                                           **
      382    **  See TERMS.TXT for more information regarding the Terms and Conditions    **
      383    **  of use and alternative licensing options for this software.              **
      384    **                                                                           **
      385    **  A copy of the GPL is in GPL.TXT which was provided with this package.    **
      386    **                                                                           **
      387    **  See http://www.fsf.org for more information about the GPL.               **
      388    **                                                                           **
      389    **                                                                           **
      390    *******************************************************************************
      391    *******************************************************************************
      392    *
      393    * vstlib.i
      394    *
      395    * VST library definitions
      396    *
      397    */
      398   
      399   function aiInfo returns character ( input vAiFile as character, output vAiGenNum as integer ) in super.
      400   function chkai returns integer ( output ai_exts as integer, output ai_full as integer, output ai_empty as integer ) in super.
      401   function chkarea returns integer ( input threshold as decimal, output worst as decimal ) in super.
      402   function chkptNum returns integer ( input-output oldbi as integer ) in super.
      403   
      404   function connectFlags returns character ( input cnxId as integer ) in super.
      405   function connectName returns character ( input cnxId as integer, input cnxFlags as character ) in super.
      406   function lastStatement returns character( input cnxId as integer, output lineNum as integer, output procName as character ) in super.
      407   
      408   function isAIEnabled returns logical () in super.
      409   function isReplSource returns logical () in super.
      410   function isReplTarget returns logical () in super.
      411   function isBackupRunning returns logical () in super.
      412   function isWorkgroup returns logical () in super.
      413   
      414   function getStartupX returns character ( input v as character, input p1 as character, input p2 as character ) in super.
      415   
      416   /* end vstlib.i */
      417    
      418   
      419   function add2ds returns logical ( input h as handle ) in super.
      420   function getTempTableHandle returns handle ( input n as character ) in super.
      421   
      422   /* end protop.i */
      423    
      424   
      425   define input-output parameter alertStatus as logical.
      426   
      427   define variable currDT  as integer no-undo.
      428   define variable fBackUp as integer no-undo.
      429   define variable iBackUp as integer no-undo.
      430   
      431   /* is an online backup running?
      432    */
      433   
      434   for each dictdb._userStatus no-lock where _userStatus-operation <> ?:
      435     if _userStatus-operation = "online backup" then alertStatus = no.
      436   end.
      437   
      438   /* if the backup completed within the sample interval conisder it to be active and set alertStatus = no
      439    */
      440   
      441   find dictdb._DbStatus no-lock.
      442   
      443   assign
      444     currDT =  uDateTime()
      445     fBackUp = ( currDT - string2uDateTime( _dbStatus-fbDate ))
      446     iBackUp = ( currDT - string2uDateTime( _dbStatus-ibDate ))
      447   .
      448   
      449   if fBackup <> ? and fBackup < 300 then alertStatus = no.
      450   if iBackup <> ? and iBackup < 300 then alertStatus = no.
      451   
      452   return.
