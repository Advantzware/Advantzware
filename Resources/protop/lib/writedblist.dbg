        1   /* lib/writedblist.p
        2    *
        3    */
        4   
        5   
        6   /* lib/v9.i
        7    *
        8    */
        9   
       10   &IF DECIMAL(SUBSTRING(PROVERSION,1,INDEX(PROVERSION,".") + 1)) < 10.0 &THEN
       11   &global-define  CPYLOB  "no"
       12   &global-define  NOW     substitute( "&1 &2", today, string( time, "hh:mm:ss" ))
       13   &global-define  LNGCR   character
       14   &global-define  DTZ     integer
       15   &global-define  BIGINT  decimal
       16   &ELSE
       17   &global-define  OE10    "yes"
       18   &global-define  NOW     now
       19   &global-define  LNGCR   longchar
       20   &global-define  DTZ     datetime-tz
       21   &global-define  BIGINT  int64
       22   &ENDIF
       23    
       24   
       25   /* lib/tt_dblist.i
       26    *
       27    */
       28   
       29   define temp-table tt_dbList no-undo
       30     field xvalid        as logical
       31     field friendlyName  as character format "x(20)"
       32     field dbPath        as character format "x(60)" /* "x(128)" view-as fill-in size 60 by 1 */
       33     field serverName    as character format "x(20)" /* "x(128)" view-as fill-in size 20 by 1 */
       34     field dlcPath       as character format "x(20)" /* "x(128)" view-as fill-in size 20 by 1 */
       35     field monitorDB     as logical                  label "Mon?"
       36     field resrcType     as character format "x(10)" label "Type"
       37     field monitorPID    as character format "x(10)" label "PID"
       38     field monitorStat   as character format "x(20)" label "Status"
       39     field statusInfo    as character format "x(50)" label "Status Info"
       40   &IF DEFINED( OE10 ) &THEN
       41     field dbAlert      as datetime-tz
       42   &ELSE
       43     field dbAlert      as integer
       44   &ENDIF
       45     index friendlyName-idx is primary unique friendlyName
       46   .
       47   
       48    
       49   
       50   define input parameter table for tt_dbList.
       51   
       52   define new global shared variable logLevel as integer no-undo initial 5.
       53   
       54   define variable n as integer no-undo.
       55   
       56   publish "logMsg" ( 0, substitute( "&1", "lib/writedblist" )).
       57   
       58   output to value( "etc/dblist.cfg" ) unbuffered.
       59   
       60   put unformatted "# etc/dblist.cfg" skip.
       61   put unformatted "#" skip.
       62   put unformatted "# note: please do NOT append .db to /dbpath/dbName" skip.
       63   put unformatted "#" skip.
       64   put unformatted "# friendlyName|/dbpath/dbName|serverName|monitor[|dlc[|type]]" skip.
       65   put unformatted "# s2k|/db/s2k|myserver|no" skip.
       66   put unformatted "#" skip.
       67   put skip(1).
       68   
       69   for each tt_dbList:
       70   
       71     /* remove old GUID field if it exists
       72      */
       73   
       74     if num-entries( tt_dbList.serverName, "-" ) = 5 and length( tt_dbList.serverName ) = 36 then tt_dbList.serverName = "".
       75   
       76     /* remove ".db" if it somehow got through to this point
       77      */
       78   
       79     if r-index( tt_dbList.dbPath, ".db" ) = ( length( tt_dbList.dbPath ) - 2 ) then
       80       tt_dbList.dbPath = substring( tt_dbList.dbPath, 1, length( tt_dbList.dbPath ) - 3 ).
       81   
       82     put unformatted
       83       tt_dbList.friendlyName "|"
       84       tt_dbList.dbPath "|"
       85       tt_dbList.serverName "|"
       86       tt_dbList.monitorDB "|"
       87       tt_dbList.dlcPath "|"
       88       tt_dbList.resrcType
       89       skip
       90     .
       91   
       92     n =  n + 1.
       93   
       94   end.
       95   
       96   output close.
       97   
       98   publish "logMsg" ( 0, substitute( "&1: &2 entries written", "lib/writedblist", 2 )).
       99   
      100   return.
