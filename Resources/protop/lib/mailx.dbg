        1   /* mailx.p
        2    *
        3    * handle the sending of mail from a windows environment
        4    *
        5    * lib/ptsetvar.p getMailInfo() will run this
        6    *
        7    *
        8    */
        9   
       10   
       11   /*******************************************************************************
       12    *******************************************************************************
       13    **                                                                           **
       14    **                                                                           **
       15    **  Copyright 2003-2006 Tom Bascom, Greenfield Technologies                  **
       16    **  http://www.greenfieldtech.com                                            **
       17    **                                                                           **
       18    **  ProTop is free software; you can redistribute it and/or modify it        **
       19    **  under the terms of the GNU General Public License (GPL) as published     **
       20    **  by the Free Software Foundation; either version 2 of the License, or     **
       21    **  at your option) any later version.                                       **
       22    **                                                                           **
       23    **  ProTop is distributed in the hope that it will be useful, but WITHOUT    **
       24    **  ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or    **
       25    **  FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License     **
       26    **  for more details.                                                        **
       27    **                                                                           **
       28    **  See TERMS.TXT for more information regarding the Terms and Conditions    **
       29    **  of use and alternative licensing options for this software.              **
       30    **                                                                           **
       31    **  A copy of the GPL is in GPL.TXT which was provided with this package.    **
       32    **                                                                           **
       33    **  See http://www.fsf.org for more information about the GPL.               **
       34    **                                                                           **
       35    **                                                                           **
       36    *******************************************************************************
       37    *******************************************************************************
       38    *
       39    * protop.i
       40    *
       41    * Header file for protop family of programs
       42    *
       43    *
       44    * Known Bugs & Issues:
       45    *
       46    *
       47    * To Do:
       48    *
       49    *
       50    * Author:
       51    *
       52    *      Tom Bascom, Greenfield Technologies
       53    *      http://www.greenfieldtech.com
       54    *      August 28, 2003
       55    *
       56    */
       57   
       58   &IF DECIMAL(SUBSTRING(PROVERSION,1,INDEX(PROVERSION,".") + 1)) >= 11.4 &THEN
       59   &global-define  FASTLOCK        true
       60   &ELSE
       61   &global-define  FASTLOCK        false
       62   &ENDIF
       63   
       64   &IF DECIMAL(SUBSTRING(PROVERSION,1,INDEX(PROVERSION,".") + 1)) >= 11.0 &THEN
       65   &global-define  OE11            "yes"
       66   &global-define  xDEBUGTT        false
       67   &ENDIF
       68   
       69   &IF DECIMAL(SUBSTRING(PROVERSION,1,INDEX(PROVERSION,".") + 1)) >= 10.2 AND PROVERSION >= "10.2B" &THEN
       70   &global-define  NOSERIALIZE     serialize-hidden
       71   &ENDIF
       72   
       73   &IF DECIMAL(SUBSTRING(PROVERSION,1,INDEX(PROVERSION,".") + 1)) >= 10.1 AND PROVERSION >= "10.1B" &THEN
       74   &global-define  BIGINT          int64
       75   &ELSE
       76   &global-define  BIGINT          decimal
       77   &ENDIF
       78   
       79   
       80   /* lib/v9.i
       81    *
       82    */
       83   
       84   &IF DECIMAL(SUBSTRING(PROVERSION,1,INDEX(PROVERSION,".") + 1)) < 10.0 &THEN
       85   &global-define  CPYLOB  "no"
       86   &global-define  NOW     substitute( "&1 &2", today, string( time, "hh:mm:ss" ))
       87   &global-define  LNGCR   character
       88   &global-define  DTZ     integer
       89   &global-define  BIGINT  decimal
       90   &ELSE
       91   &global-define  OE10    "yes"
       92   &global-define  NOW     now
       93   &global-define  LNGCR   longchar
       94   &global-define  DTZ     datetime-tz
       95   &global-define  BIGINT  int64
       96   &ENDIF
       97    
       98   
       99   /* use extended _connect fields: -client, -cache*
      100    */
      101   
      102   &IF DECIMAL(SUBSTRING(PROVERSION,1,INDEX(PROVERSION,".") + 1)) >= 10.1 AND PROVERSION >= "10.1C" &THEN
      103   &global-define  CONNECTX        "yes"
      104   &ELSE
      105   &global-define  CONNECTX        "no"
      106   &ENDIF
      107   
      108   define stream inStrm.
      109   
      110   define new global shared variable dbgMode as integer no-undo initial 1.
      111   
      112   /* The values for these are defined in etc/protop.cfg and set by lib/protop-cfg.p
      113    *
      114    * someday everyone will have OO and I will replace these with a gsv class
      115    * or something of that ilk
      116    *
      117    */
      118   
      119   define new global shared variable pt_shortname   as character no-undo.
      120   define new global shared variable pt_uniqName    as character no-undo.
      121   define new global shared variable pt_server      as character no-undo.
      122   define new global shared variable pt_resrcType   as character no-undo.
      123   
      124   define new global shared variable pt_tmpdir      as character no-undo initial "/tmp".
      125   define new global shared variable pt_logdir      as character no-undo initial "/tmp".
      126   define new global shared variable pt_rptdir      as character no-undo initial "/tmp".
      127   define new global shared variable pt_logname     as character no-undo initial "&5.&2.&3".
      128   define new global shared variable pt_mailcmd     as character no-undo initial 'mailx "-s &1" '.
      129   
      130   define new global shared variable pt_votrx       as integer   no-undo initial 1800.
      131   define new global shared variable pt_lktbllim    as integer   no-undo initial 0.
      132   define new global shared variable pt_bkupstale   as integer   no-undo initial 26.
      133   define new global shared variable pt_bogomips    as integer   no-undo initial 1000000.
      134   define new global shared variable pt_ioresp      as integer   no-undo initial 100.
      135   define new global shared variable pt_ioFileName  as character no-undo.
      136   define new global shared variable pt_dfCmd       as character no-undo.
      137   
      138   define new global shared variable pt_AICheckInterval   as integer no-undo initial 60.
      139   define new global shared variable pt_PICACheckInterval as integer no-undo initial 60.
      140   define new global shared variable pt_appsrvStuck       as integer no-undo initial 120.
      141   
      142   define new global shared variable pt_bibkupAlert as integer   no-undo.          /* alert on long bi backup phase                */
      143   define new global shared variable pt_bibkupAlarm as integer   no-undo.          /* alarm on long bi backup phase                */
      144   define new global shared variable pt_bibkupPage  as integer   no-undo.          /* page  on long bi backup phase                */
      145   
      146   define new global shared variable pt_bkupAlert   as integer   no-undo.          /* alert on long db backup                      */
      147   define new global shared variable pt_bkupAlarm   as integer   no-undo.          /* alarm on long db backup                      */
      148   define new global shared variable pt_bkupPage    as integer   no-undo.          /* page  on long db backup                      */
      149   
      150   define new global shared variable pt_userLock    as logical   no-undo.          /* enable _userLock  data?                      */
      151   define new global shared variable pt_doZippy     as logical   no-undo.          /* enable "user experience" (aka "zippy")?      */
      152   define new global shared variable pt_useRFUtil   as logical   no-undo.          /* use rfutil to gather after-imaging status?   */
      153   
      154   define new global shared variable pt_updAreaData as integer   no-undo.          /* how often should we report storage area xref details from dbanalys? */
      155   
      156   define new global shared variable pt_zoomTo      as integer no-undo.            /* new zoomed monInt                            */
      157   
      158   define new global shared variable ptDBName     as character no-undo.                    /* the db logical name          */
      159   define new global shared variable rowLimit     as integer   no-undo initial 100.        /* 50?                          */
      160   
      161   /* do-sumSample() manipulates these -- ugly, ugly, ugly... (obsolete?)
      162    * 
      163    */
      164   
      165   define new global shared variable stime as integer no-undo.                     /* start time                           */
      166   define new global shared variable ltime as integer no-undo.                     /* last time                            */
      167   define new global shared variable xtime as integer no-undo.                     /* total time                           */
      168   define new global shared variable itime as integer no-undo.                     /* iteration time                       */
      169   
      170   define new global shared variable chkp-base   as integer no-undo initial ?.     /* cover for the lack of a VST field    */
      171   
      172                                                                                   /* corresponding to base checkpoint#    */
      173   /** Global Shared Temp Table Definitions
      174    **
      175    ** Yup, they're shared.  But this stuff makes no sense across session boundaries anyway.
      176    ** And a shared temp-table is logically the same as a db table so who really cares?
      177    **
      178    **/
      179   
      180   /* cache _File and _Index records so that we don't keep hitting the db to translate
      181    */
      182   
      183   define new global shared temp-table tt_tbl no-undo
      184     field xid      as integer                                             /* _File._File-Num              */
      185     field tstatid  as integer                                             /* _TableStat._TableStat-Id     */
      186     field areaNum  as integer                                             /* _Storage-Object._Area-Number */
      187     field tblPool  as character                                           /* get-bits( _object-attrib, 7, 1 ) = 1 */
      188     field tblname  as character                                           /* _File._File-Name             */
      189     index xid-idx is unique primary xid.
      190   
      191   define new global shared temp-table tt_idx no-undo
      192     field xid      as integer                                             /* _Index._Idx-Num              */
      193     field istatid  as integer                                             /* _IndexStat._IndexStat-Id     */
      194     field idxname  as character                                           /* _Index._Idx-Name             */
      195     field idxnote  as character
      196     field idxRoot  as int64                                           /* _Storage-Object._Object-Root */
      197     field tblnum   as integer                                             /* _File._File-Num              */
      198     field areaNum  as integer                                             /* _Storage-Object._Area-Number */
      199     field idxPool  as character                                           /* get-bits( _object-attrib, 7, 1 ) = 1 */
      200     field tblname  as character                                           /* _File._File-Name             */
      201     index xid-idx is unique primary xid.
      202   
      203   define new global shared temp-table tt_areaExtent no-undo
      204     field areaNum  as integer                                             /* _areaExtent._Area-Number     */
      205     field extNum   as integer                                             /* _areaExtent._Extent-Number   */
      206   
      207     field extSize  as decimal                                             /* _areaExtent._Extent-Size     */
      208     field extType  as integer                                             /* _areaExtent._Extent-Type     */
      209     field extPath  as character                                           /* _areaExtent._Extent-Path     */
      210   
      211     index ae-idx is unique primary areaNum extNum.
      212   
      213   define new global shared temp-table tt_area no-undo
      214     field xid      as integer    format ">>>9"
      215     field SANum    as integer    format ">>>9"        label "#"
      216     field areaPool as character  format "x(2)"        label "BX"
      217   /*field areaStatus-Id as {&BIGINT} format ">>>9"    label "Id" */
      218     field SAName   as character  format "x(30)"       label "Area Name"
      219     field allocGB  as decimal    format ">>>>>9.99"   label "Allocated"
      220     field varGB    as decimal    format ">>>>>9.99"   label "Variable"
      221     field totGB    as decimal    format ">>>>>>9.99"  label "Tot GB"
      222     field hiGB     as decimal    format ">>>>>9.99"   label "Hi Water" serialize-hidden
      223     field freeGB   as decimal    format ">>>>>9.99"   label "Free GB"
      224     field pctAlloc as decimal    format ">>>>>9%"     label "%Alloc"
      225     field pctLastX as decimal    format ">>>>9%"      label "%LastX"
      226   
      227     field blkszkb as integer     format ">>9"         label "BSZ"
      228     field rpb     as integer     format ">>9"         label "RPB"
      229     field clstrsz as integer     format ">>9"         label "CSZ"
      230   
      231     field numTbls as integer     format ">>>>9"       label "#Tbls"
      232     field numIdxs as integer     format ">>>>9"       label "#Idxs"
      233     field numLOBs as integer     format ">>>>9"       label "#LOBs"
      234   
      235     field numExts as integer     format ">>>>9"       label "#Exts"
      236     field hasVar  as logical     format "Yes/No"      label "Var?"
      237   
      238     field xnote   as character   format "x"           label "*"
      239   
      240     field areaMaxPct as decimal  format ">>9.999%"    label "Max%"
      241     field idx3264    as decimal  format ">>9.999%"    label "Bug%"
      242   
      243     index pctAlloc-idx is primary pctAlloc descending
      244     index pctLastX-idx pctLastX pctAlloc descending
      245     index allocGB-idx allocGB descending
      246     index totGB-idx totGB descending
      247     index xid-idx is unique xid
      248     index SANum-idx is unique SANum
      249     index SAName-idx is unique SAName
      250   .
      251   
      252   *** Encrypted Source ***
      253   *** Encrypted Source ***
      254   *** Encrypted Source ***
      255   *** Encrypted Source ***
      256   *** Encrypted Source ***
      257   *** Encrypted Source ***
      258   *** Encrypted Source ***
      259   *** Encrypted Source ***
      260   *** Encrypted Source ***
      261   *** Encrypted Source ***
      262   *** Encrypted Source ***
      263   *** Encrypted Source ***
      264   *** Encrypted Source ***
      265   *** Encrypted Source ***
      266   *** Encrypted Source ***
      267   *** Encrypted Source ***
      268   *** Encrypted Source ***
      269   *** Encrypted Source ***
      270   *** Encrypted Source ***
      271   *** Encrypted Source ***
      272   *** Encrypted Source ***
      273   *** Encrypted Source ***
      274   *** Encrypted Source ***
      275   *** Encrypted Source ***
      276   *** Encrypted Source ***
      277   *** Encrypted Source ***
      278   *** Encrypted Source ***
      279   *** Encrypted Source ***
      280   *** Encrypted Source ***
      281   *** Encrypted Source ***
      282   *** Encrypted Source ***
      283   *** Encrypted Source ***
      284   *** Encrypted Source ***
      285   *** Encrypted Source ***
      286   *** Encrypted Source ***
      287   *** Encrypted Source ***
      288   *** Encrypted Source ***
      289   *** Encrypted Source ***
      290   *** Encrypted Source ***
      291   *** Encrypted Source ***
      292   *** Encrypted Source ***
      293   *** Encrypted Source ***
      294   *** Encrypted Source ***
      295   *** Encrypted Source ***
      296   *** Encrypted Source ***
      297   *** Encrypted Source ***
      298   *** Encrypted Source ***
      299   *** Encrypted Source ***
      300   *** Encrypted Source ***
      301   *** Encrypted Source ***
      302   *** Encrypted Source ***
      303   *** Encrypted Source ***
      304   *** Encrypted Source ***
      305   *** Encrypted Source ***
      306   *** Encrypted Source ***
      307   *** Encrypted Source ***
      308   *** Encrypted Source ***
      309   *** Encrypted Source ***
      310   *** Encrypted Source ***
      311   *** Encrypted Source ***
      312   *** Encrypted Source ***
      313   *** Encrypted Source ***
      314   *** Encrypted Source ***
      315   *** Encrypted Source ***
      316   *** Encrypted Source ***
      317   *** Encrypted Source ***
      318   *** Encrypted Source ***
      319   *** Encrypted Source ***
      320   *** Encrypted Source ***
      321   *** Encrypted Source ***
      322    
      323   
      324   /*******************************************************************************
      325    *******************************************************************************
      326    **                                                                           **
      327    **                                                                           **
      328    **  Copyright 2003-2006 Tom Bascom, Greenfield Technologies                  **
      329    **  http://www.greenfieldtech.com                                            **
      330    **                                                                           **
      331    **  ProTop is free software; you can redistribute it and/or modify it        **
      332    **  under the terms of the GNU General Public License (GPL) as published     **
      333    **  by the Free Software Foundation; either version 2 of the License, or     **
      334    **  at your option) any later version.                                       **
      335    **                                                                           **
      336    **  ProTop is distributed in the hope that it will be useful, but WITHOUT    **
      337    **  ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or    **
      338    **  FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License     **
      339    **  for more details.                                                        **
      340    **                                                                           **
      341    **  See TERMS.TXT for more information regarding the Terms and Conditions    **
      342    **  of use and alternative licensing options for this software.              **
      343    **                                                                           **
      344    **  A copy of the GPL is in GPL.TXT which was provided with this package.    **
      345    **                                                                           **
      346    **  See http://www.fsf.org for more information about the GPL.               **
      347    **                                                                           **
      348    **                                                                           **
      349    *******************************************************************************
      350    *******************************************************************************
      351    *
      352    * protoplib.i
      353    *
      354    * ProTop infrastructure library definitions
      355    *
      356    */
      357   
      358   function uDateTime returns integer () in super.
      359   function string2uDateTime returns integer( input p_text as character ) in super.
      360   function searchDir returns character ( input xDir as character ) in super.
      361   function unsignMe returns decimal ( input s as decimal, input i as integer ) in super.
      362   function hr returns decimal ( input lr as decimal, input osr as decimal, output hr-str as character, output hr as decimal, output mr as decimal ) in super.
      363   function do-SumSample returns logical ( output p_index as integer, output p_time  as integer ) in super.
      364   function myPID returns character () in super.
      365   function hilite returns logical ( input b as handle, input p_metric as character, input p_value as character, output p_attr as character ) in super.
      366   
      367   /* end protoplib.i */
      368    
      369   
      370   /*******************************************************************************
      371    *******************************************************************************
      372    **                                                                           **
      373    **                                                                           **
      374    **  Copyright 2003-2006 Tom Bascom, Greenfield Technologies                  **
      375    **  http://www.greenfieldtech.com                                            **
      376    **                                                                           **
      377    **  ProTop is free software; you can redistribute it and/or modify it        **
      378    **  under the terms of the GNU General Public License (GPL) as published     **
      379    **  by the Free Software Foundation; either version 2 of the License, or     **
      380    **  at your option) any later version.                                       **
      381    **                                                                           **
      382    **  ProTop is distributed in the hope that it will be useful, but WITHOUT    **
      383    **  ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or    **
      384    **  FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License     **
      385    **  for more details.                                                        **
      386    **                                                                           **
      387    **  See TERMS.TXT for more information regarding the Terms and Conditions    **
      388    **  of use and alternative licensing options for this software.              **
      389    **                                                                           **
      390    **  A copy of the GPL is in GPL.TXT which was provided with this package.    **
      391    **                                                                           **
      392    **  See http://www.fsf.org for more information about the GPL.               **
      393    **                                                                           **
      394    **                                                                           **
      395    *******************************************************************************
      396    *******************************************************************************
      397    *
      398    * vstlib.i
      399    *
      400    * VST library definitions
      401    *
      402    */
      403   
      404   function aiInfo returns character ( input vAiFile as character, output vAiGenNum as integer ) in super.
      405   function chkai returns integer ( output ai_exts as integer, output ai_full as integer, output ai_empty as integer ) in super.
      406   function chkarea returns integer ( input threshold as decimal, output worst as decimal ) in super.
      407   function chkptNum returns integer ( input-output oldbi as integer ) in super.
      408   
      409   function connectFlags returns character ( input cnxId as integer ) in super.
      410   function connectName returns character ( input cnxId as integer, input cnxFlags as character ) in super.
      411   function lastStatement returns character( input cnxId as integer, output lineNum as integer, output procName as character ) in super.
      412   
      413   function isAIEnabled returns logical () in super.
      414   function isReplSource returns logical () in super.
      415   function isReplTarget returns logical () in super.
      416   function isBackupRunning returns logical () in super.
      417   function isWorkgroup returns logical () in super.
      418   
      419   function getStartupX returns character ( input v as character, input p1 as character, input p2 as character ) in super.
      420   
      421   /* end vstlib.i */
      422    
      423   
      424   function add2ds returns logical ( input h as handle ) in super.
      425   function getTempTableHandle returns handle ( input n as character ) in super.
      426   
      427   /* end protop.i */
      428    
      429   
      430   define variable msgObject    as com-handle no-undo.
      431   define variable cfgObject    as com-handle no-undo.
      432   
      433   define variable msgBody      as character  no-undo.
      434   
      435   define variable smtpUser     as character no-undo.
      436   define variable smtpPassword as character no-undo.
      437   define variable smtpServer   as character no-undo initial "smtp.gmail.com".
      438   define variable smtpPort     as integer   no-undo initial 465.
      439   
      440   /* define variable mailCmd                      as character no-undo initial "mailx &3 -s '&2' &1 > /dev/null 2>&&1". */
      441   /* define new global shared variable pt_mailcmd as character no-undo initial 'mailx "-s &1" '. */
      442   
      443   define variable sendTo       as character no-undo.
      444   define variable xreplyTo     as character no-undo.
      445   
      446   define variable xLine        as character extent 16 no-undo.
      447   define variable inLine       as character no-undo.
      448   define variable uname        as character no-undo.
      449   define variable mailxBody    as longchar  no-undo.
      450   
      451   define variable dirSep       as character no-undo.
      452   define variable tmpFileName  as character no-undo.
      453   
      454   define variable cfgDate      as date      no-undo.
      455   define variable cfgTime      as integer   no-undo.
      456   
      457   define variable i as integer no-undo. 
      458   
      459   define stream emailCfg.
      460   define stream inFile.
      461   define stream inStrm.
      462   
      463   if opsys = "unix" then
      464     dirSep = "/".
      465    else
      466     dirSep = "~\".
      467   
      468   create widget-pool.
      469   
      470   if not ( opsys begins "WIN" ) then
      471     do:
      472       input stream inStrm through value( "uname -a" ).
      473       import stream inStrm unformatted uname.
      474       input stream inStrm close.
      475     end.
      476   
      477   /*** Install self as a session super-procedure
      478    ***
      479    ***/
      480   
      481   session:add-super-procedure( this-procedure ).
      482   
      483   return. 
      484   
      485   
      486   define stream mailTmp.
      487   
      488   procedure ptSendMail:
      489   
      490     define input parameter mailTo       as character no-undo.
      491     define input parameter replyTo      as character no-undo.
      492     define input parameter mailSubject  as character no-undo.
      493     define input parameter mailBody     as longchar  /* character */ no-undo.             /* character text                                       */
      494     define input parameter mailFileName as character no-undo.             /* a text file to be appended to the body of the e-mail */
      495   
      496     mailxBody = mailBody.
      497   
      498     if mailTo = "" then mailTo = sendTo.                                  /* default from etc/mail.cfg                            */
      499   
      500     if mailTo = "" then return.
      501   
      502     if replyTo = "" then replyTo = xreplyTo.
      503   
      504     if mailxBody <> "" then mailxBody = mailxBody + chr(10) + chr(10).
      505     if replyTo   <> "" then mailxBody = mailxBody + "Please reply to: " + replyTo + chr(10) + chr(10).
      506     if uname     <> "" then mailxBody = mailxBody + uname + chr(10) + chr(10).
      507   
      508     if mailFileName <> "" then
      509       do:
      510         mailxBody = mailxBody + substitute( "=== &1 ===", mailFileName ) + chr(10) + chr(10).
      511         input stream inFile from value( search( mailFileName )).
      512         repeat:
      513           inLine = "".
      514           import stream inFile unformatted inLine.
      515           mailxBody = mailxBody + chr(10) + inLine.
      516         end.
      517         mailxBody = mailxBody + chr(10).
      518         input stream inFile close.
      519       end.
      520   
      521     tmpFileName = substitute( "&1&2pt3mail&3.tmp", pt_tmpdir, dirSep, string( random( 0, 99 ), "99" )).
      522   
      523     if dbgMode >= 4 then
      524       do:
      525   
      526         /* mailCmd "mailx &3 -s '&2' &1" */
      527   
      528         output to value( pt_logdir + "/mail.log" ) unbuffered append.
      529         message now "mailCmd: " substitute( pt_mailCmd, mailTo, mailSubject ).
      530         output close.
      531   
      532       end.
      533   
      534   &IF DEFINED( OE10 ) &THEN
      535     copy-lob from mailxBody to file tmpFileName.
      536   &ELSE
      537     output stream mailTmp to value( tmpFileName ).
      538     put stream mailTmp unformatted mailxBody skip.
      539     output stream mailTmp close.
      540   &ENDIF
      541   
      542     if opsys begins "WIN" then
      543       os-command silent value ( "type " + tmpFileName + " | " + substitute( pt_mailCmd, mailTo, mailSubject )).
      544      else
      545       os-command silent value ( "cat "  + tmpFileName + " | " + substitute( pt_mailCmd, mailTo, mailSubject )).
      546   
      547     os-delete value( tmpFileName ).
      548   
      549     return.
      550   
      551   end.
