        1   /* lib/browser.p
        2    *
        3    * generic data browser setup
        4    *
        5    * protop.p runs this to initialize UI
        6    *
        7    */
        8   
        9   
       10   /* lib/dynscreen.i
       11    *
       12    */
       13   
       14   /*
       15   function dynViewerInit  returns logical ( f as handle, dcName as character, ttName as character, evtName as character, dispOrder as integer ) in super.
       16   function dynBrowserInit returns logical ( f as handle, dcName as character, ttName as character, evtName as character, dispOrder as integer ) in super.
       17    */
       18   
       19   function dynScreenUpdate returns logical ( data as longchar ) in super.
       20   function rowDisplay returns logical ( z as handle ) in super.
       21   
       22   function getBrowseColumnByName returns handle ( b as handle, n as character ) in super.
       23   
       24    
       25   
       26   define input parameter dispOrder as integer   no-undo.
       27   define input parameter evtName   as character no-undo.
       28   define input parameter scrTitle  as character no-undo.
       29   define input parameter dcName    as character no-undo.
       30   define input parameter ttName    as character no-undo.
       31   define input parameter minRows   as integer   no-undo.
       32   define input parameter maxRows   as integer   no-undo.
       33   
       34   define variable f as handle no-undo.
       35   
       36   define variable showMe as logical no-undo initial no.
       37   
       38   procedure showMe:
       39   
       40     publish "protop_display" ( f:name, showMe ).
       41   
       42   end.
       43   
       44   /* setup
       45    *
       46    */
       47   
       48   /* if changes are made to formatting in dc/latch.p, dc/resrc.p, or dc/txe.p the column offsets below may need to change */
       49   
       50   create frame f.
       51   assign
       52     f:row          = 3                                    /* the actual rendering will (probably) modify this                     */
       53     f:column       = ( if evtName = "txe" then 104 else ( if evtName = "resources" then /* 47 */ 57 else 1 )) 
       54     f:height-chars = 1    /* 100 */
       55     f:box          = no
       56     f:top-only     = false
       57     f:overlay      = true
       58     f:name         = ttName
       59     f:private-data = scrTitle
       60   no-error.
       61   
       62   if "TTY" <> "tty" then
       63     assign
       64       f:height-chars = 1
       65       f:scrollable   = false
       66     .
       67   
       68   on row-display of f anywhere do:
       69     rowDisplay( self ).
       70     return.
       71   end.
       72   
       73   /* there are 4 lines of "decoration" -- so add 4 to the number of data rows                             */
       74   /* but apparently you need yet another if there is any hope of the title also being displayed...        */
       75   
       76   run dynBrowserInit( f, dcName, ttName, evtName, dispOrder, minRows, ( if maxRows <= 0 then maxRows else maxRows + 5 )).
       77   
       78   /* initialize
       79    *
       80    */
       81   
       82   publish "protop_register" ( dcName ).
       83   
       84   subscribe to "protop_" + evtName anywhere run-procedure "showMe".
       85   
       86   return.
