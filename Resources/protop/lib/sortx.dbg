        1   /* lib/sortx.p
        2    *
        3    */
        4   
        5   
        6   /* lib/tt_screenlist.i
        7    */
        8   
        9   define new global shared temp-table tt_screenList no-undo
       10   
       11     field displayOrder  as integer
       12     field screenName    as character format "x(30)"
       13     field ttName        as character format "x(18)"
       14     field dcName        as character
       15     field evtName       as character
       16     field frameHandle   as handle
       17     field bufferHandle  as handle
       18     field queryHandle   as handle
       19     field browseHandle  as handle
       20     field screenType    as character
       21     field screenRow     as integer
       22     field minRows       as integer
       23     field maxRows       as integer
       24     field resultRows    as integer
       25     field screenVisible as logical
       26     field screenActive  as logical
       27     field sortBy        as character format "x(16)" label "Sort Column"
       28     field sortDir       as character format "x(4)"
       29     field sortFieldList as character format "x(74)"
       30   
       31     index ttName-idx is unique primary
       32       ttName
       33     index scrFrame is unique
       34       frameHandle
       35   .
       36    
       37   
       38   define query q for tt_screenList.
       39   
       40   define
       41     browse b
       42     query q
       43     display
       44   
       45       tt_screenList.screenName
       46   
       47       /*
       48       tt_screenList.screenActive
       49       tt_screenList.screenVisible
       50        */
       51   
       52       /*
       53       tt_screenList.minRows    format "->9"
       54       tt_screenList.maxRows    format "->9"
       55       tt_screenList.resultRows format "->>>9"
       56        */
       57   
       58       tt_screenList.ttName
       59       tt_screenList.sortBy
       60       tt_screenList.sortDir
       61   
       62      with
       63       overlay
       64       25 down
       65       no-box
       66       no-labels
       67   .
       68   
       69   form
       70       b
       71       skip(1)
       72       '      Cursor-Left or "<" & Cursor-Right or ">" to ' skip
       73       '      cycle through the available sort columns.   ' skip
       74       skip(1)
       75       '      "+" or "^" to sort Up (Ascending)           ' skip
       76       '      "-" or "v" to sort Down (Descending).       ' skip
       77       skip(1)
       78      with
       79       frame screenList
       80       title " Browser Screen Sort Columns "
       81       overlay
       82       row 4
       83       centered
       84       no-labels
       85     .
       86   
       87   function initScreen returns logical ():
       88   
       89     pause 0 before-hide.
       90   
       91     if query q:current-result-row = ? or query q:query-off-end = yes then get next q no-lock.
       92     if query q:query-off-end = true then get first q no-lock.
       93   
       94     return yes.
       95   
       96   end.
       97   
       98   on "x", "q" of b do:
       99     apply "go" to self.
      100     return no-apply.
      101   end.
      102   
      103   on "cursor-right", ">" of b do:
      104     define variable i as integer no-undo.
      105     i = lookup( tt_screenList.sortBy, tt_screenlist.sortFieldList ).
      106     if i = 0 then i = 1.
      107     i = i + 1.
      108     if i > num-entries( tt_screenlist.sortFieldList ) then i = 1.
      109     tt_screenList.sortBy = entry( i, tt_screenlist.sortFieldList ).
      110     b:refresh() in frame screenList.
      111     return no-apply.
      112   end.
      113   
      114   on "cursor-left", "<" of b do:
      115     define variable i as integer no-undo.
      116     i = lookup( tt_screenList.sortBy, tt_screenlist.sortFieldList ).
      117     if i = 0 then i = 1.
      118     i = i - 1.
      119     if i < 1 then i = num-entries( tt_screenlist.sortFieldList ).
      120     tt_screenList.sortBy = entry( i, tt_screenlist.sortFieldList ).
      121     b:refresh() in frame screenList.
      122     return no-apply.
      123   end.
      124   
      125   on "+", "^" of b do:
      126     tt_screenList.sortDir = "Up".
      127     b:refresh() in frame screenList.
      128     return no-apply.
      129   end.
      130   
      131   on "-", "v" of b do:
      132     tt_screenList.sortDir = "Down".
      133     b:refresh() in frame screenList.
      134     return no-apply.
      135   end.
      136   
      137   open query q for each tt_screenList where screenType = "browser" by tt_screenList.displayOrder.
      138   
      139   initScreen().
      140   
      141   enable b with frame screenList.
      142   apply "entry" to b.
      143   apply "value-changed" to b.
      144   
      145   do on error undo, leave
      146     on endkey undo, leave:
      147   
      148     wait-for "go" of b in frame screenList.
      149   
      150   end.
      151   
      152   hide frame screenList no-pause.
      153   
      154   return.
