        1   /* lib/ptsplash.p
        2    *
        3    */
        4   
        5   define temp-table tt_motd no-undo
        6     field xid         as integer
        7     field xMessage    as character format "x(80)"
        8     index xid-idx is primary unique xid
        9   .
       10   
       11   define variable ii as integer no-undo.
       12   define variable nn as integer no-undo.
       13   
       14   define variable ptLogo  as character no-undo extent 8 format "x(66)".
       15   define variable partner as character no-undo format "x(66)".
       16   
       17   define stream inStrm.
       18   
       19   
       20   procedure loadMOTD:
       21   
       22     define variable cfgName as character no-undo.
       23     define variable xLine   as character no-undo.
       24   
       25     define variable ii as integer no-undo.
       26   
       27     run findCfgName( "motd", input-output cfgName ).
       28   
       29     file-info:file-name = cfgname.
       30     if file-info:full-pathname <> ? then
       31       do:
       32   
       33         input from value( file-info:full-pathname ).
       34   
       35         repeat:
       36   
       37           xLine = "".
       38           import unformatted xLine.
       39   
       40           if xLine = "" or xLine begins "#" then next.
       41   
       42           create tt_motd.
       43           assign
       44             ii = ii + 1
       45             tt_motd.xid = ii
       46             tt_motd.xMessage = replace( xLine, "~~n", "~n" )
       47           .
       48   
       49         end.
       50   
       51         input close.
       52         if tt_motd.xMessage = "" then delete tt_motd.
       53   
       54       end.
       55   
       56     return.
       57   
       58   end.
       59   
       60   
       61   /* main block
       62    *
       63    */
       64   
       65   run lib/chkscreen.p.
       66   
       67   input stream inStrm from etc/ptlogo.txt.
       68   do on endkey undo, leave:
       69     import stream inStrm unformatted ptLogo[1].
       70     import stream inStrm unformatted ptLogo[2].
       71     import stream inStrm unformatted ptLogo[3].
       72     import stream inStrm unformatted ptLogo[4].
       73     import stream inStrm unformatted ptLogo[5].
       74     import stream inStrm unformatted ptLogo[6].
       75     import stream inStrm unformatted ptLogo[7].
       76     import stream inStrm unformatted ptLogo[8].
       77   end.
       78   input stream inStrm close.
       79   
       80   file-info:file-name = "etc/partner.cfg".
       81   if file-info:full-pathname <> ? then
       82     do:
       83       input stream inStrm from value( file-info:full-pathname ).
       84       do on error undo, leave
       85          on endkey undo, leave:
       86         import stream inStrm unformatted partner.
       87       end.
       88       input stream inStrm close.
       89     end.
       90   
       91   if opsys = "unix" then
       92     color display value( "blue" )
       93       ptLogo[1]
       94       ptLogo[2]
       95       ptLogo[3]
       96       ptLogo[4]
       97       ptLogo[5]
       98       ptLogo[6]
       99       ptLogo[7]
      100       ptLogo[8]
      101      with
      102       frame splash
      103     .
      104   
      105   display
      106     skip(1)
      107   
      108     /* these banners are created with "figlet -f big"                             */
      109   
      110     ptLogo[1] dcolor 9 at 10 skip
      111     ptLogo[2] dcolor 9 at 10 skip
      112     ptLogo[3] dcolor 9 at 10 skip
      113     ptLogo[4] dcolor 9 at 10 skip
      114     ptLogo[5] dcolor 9 at 10 skip
      115     ptLogo[6] dcolor 9 at 10 skip
      116     ptLogo[7] dcolor 9 at 10 skip
      117     ptLogo[8] dcolor 9 at 10 skip
      118   
      119     skip(1)
      120     "         Brought to you by the OpenEdge experts at:                "    skip
      121     skip(1)
      122     "           White Star Software, LLC      http://wss.com            "    skip
      123     "          " partner                                                     skip
      124     skip(1)
      125     "                              Copyright 2003 -" year( today ) format "9999" "Tom Bascom" skip
      126    with
      127     frame splash
      128     row 3
      129     centered
      130     no-box
      131     no-labels
      132     overlay
      133   .
      134   
      135   run loadMOTD.
      136   
      137   ii = 0.
      138   for each tt_motd:
      139     ii = ii + 1.
      140   end.
      141   
      142   if os-getenv( "NAGME" ) = "no" then
      143     do:
      144       pause 10.
      145       hide frame splash.
      146       return.
      147     end.
      148   
      149   motd: do while true:
      150   
      151     nn = time + 20.
      152     if nn > 86400 then leave motd.                /* skip if we happen to hit midnite     */
      153   
      154     find first tt_motd where tt_motd.xid >= random( 1, ii ) no-error.
      155     if not available tt_motd then
      156       return.
      157   
      158     display
      159       skip(1)
      160       tt_motd.xMessage view-as editor size 80 by 20 dcolor 7
      161       skip(1)
      162      with
      163       frame nag
      164       row 20
      165       centered
      166       no-box
      167       no-labels
      168       overlay
      169       width 84
      170    .
      171   
      172     /* F4 or CTRL-E will dismiss the countdown and continue
      173      */
      174   
      175     motd_wait: do while time < nn
      176        on error undo, leave motd
      177        on endkey undo, leave motd:
      178   
      179       case ( nn - time ):
      180        when  1 then pause 1 message "ProTop will continue in 1 second".
      181        when  2 then pause 1 message "ProTop will continue in 2 seconds".
      182        when  3 then pause 1 message "ProTop will continue in 3 seconds".
      183        when  4 then pause 1 message "ProTop will continue in 4 seconds".
      184        when  5 then pause 1 message "ProTop will continue in 5 seconds".
      185        when  6 then pause 1 message "ProTop will continue in 6 seconds".
      186        when  7 then pause 1 message "ProTop will continue in 7 seconds".
      187        when  8 then pause 1 message "ProTop will continue in 8 seconds".
      188        when  9 then pause 1 message "ProTop will continue in 9 seconds".
      189        when 10 then pause 1 message "ProTop will continue in 10 seconds".
      190        when 11 then pause 1 message "ProTop will continue in 11 seconds".
      191        when 12 then pause 1 message "ProTop will continue in 12 seconds".
      192        when 13 then pause 1 message "ProTop will continue in 13 seconds".
      193        when 14 then pause 1 message "ProTop will continue in 14 seconds".
      194        when 15 then pause 1 message "ProTop will continue in 15 seconds".
      195        when 16 then pause 1 message "ProTop will continue in 16 seconds".
      196        when 17 then pause 1 message "ProTop will continue in 17 seconds".
      197        when 18 then pause 1 message "ProTop will continue in 18 seconds".
      198        when 19 then pause 1 message "ProTop will continue in 19 seconds".
      199        when 20 then pause 1 message "ProTop will continue in 20 seconds".
      200        when 21 then pause 1 message "ProTop will continue in 21 seconds".
      201        when 22 then pause 1 message "ProTop will continue in 22 seconds".
      202        when 23 then pause 1 message "ProTop will continue in 23 seconds".
      203        when 24 then pause 1 message "ProTop will continue in 24 seconds".
      204        when 25 then pause 1 message "ProTop will continue in 25 seconds".
      205        when 26 then pause 1 message "ProTop will continue in 26 seconds".
      206        when 27 then pause 1 message "ProTop will continue in 27 seconds".
      207        when 28 then pause 1 message "ProTop will continue in 28 seconds".
      208        when 29 then pause 1 message "ProTop will continue in 29 seconds".
      209        when 30 then pause 1 message "ProTop will continue in 30 seconds".
      210       end.
      211   
      212       if nn - time <= 0 then
      213         leave motd.
      214   
      215       if keyfunction( lastkey ) = "go" then
      216         next motd.
      217   
      218       if lastkey = -1 then
      219         next motd_wait.
      220        else
      221         leave motd.
      222   
      223     end.
      224   
      225   end.
      226   
      227   hide frame nag.
      228   
      229   hide frame splash.
      230   
      231   return.
