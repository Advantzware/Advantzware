        1   /* lib/viewer.p
        2    *
        3    * generic data viewer setup
        4    *
        5    * protop.p runs this to initialize UI
        6    *
        7    */
        8   
        9   
       10   /* lib/dynscreen.i
       11    *
       12    */
       13   
       14   /*
       15   function dynViewerInit  returns logical ( f as handle, dcName as character, ttName as character, evtName as character, dispOrder as integer ) in super.
       16   function dynBrowserInit returns logical ( f as handle, dcName as character, ttName as character, evtName as character, dispOrder as integer ) in super.
       17    */
       18   
       19   function dynScreenUpdate returns logical ( data as longchar ) in super.
       20   function rowDisplay returns logical ( z as handle ) in super.
       21   
       22   function getBrowseColumnByName returns handle ( b as handle, n as character ) in super.
       23   
       24    
       25   
       26   define input parameter dispOrder as integer   no-undo.
       27   define input parameter evtName   as character no-undo.
       28   define input parameter scrTitle  as character no-undo.
       29   define input parameter dcName    as character no-undo.
       30   define input parameter ttName    as character no-undo.
       31   define input parameter minRows   as integer   no-undo.
       32   define input parameter maxRows   as integer   no-undo.
       33   
       34   define variable f as handle no-undo.
       35   
       36   define variable showMe as logical no-undo initial no.
       37   
       38   procedure showMe:
       39   /*
       40     showMe = not( f:visible ).
       41     assign
       42       f:visible = showMe
       43       f:hidden  = not( showMe )
       44     .
       45    */
       46   end.
       47   
       48   /* setup
       49    *
       50    */
       51   
       52   create frame f.
       53   assign
       54     f:row           = 4                           /* 2 lines for the header, plus a blank                         */
       55     f:column        = 1 
       56     f:width-chars   = ( if "TTY" <> "tty" then 160 else 255 )
       57     f:box           = no
       58     f:top-only      = false
       59     f:overlay       = true
       60     f:name          = ttName
       61     f:private-data  = scrTitle
       62   no-error.
       63   
       64   if "TTY" <> "tty" then
       65     assign
       66       f:width-chars = 160
       67       f:scrollable  = false
       68     .
       69   
       70   run dynViewerInit( f, dcName, ttName, evtName, dispOrder, minRows, maxRows ).
       71   
       72   /* initialize
       73    *
       74    */
       75   
       76   publish "protop_register" ( dcName ).
       77   
       78   subscribe to "protop_" + evtName anywhere run-procedure "showMe".
       79   
       80   return.
